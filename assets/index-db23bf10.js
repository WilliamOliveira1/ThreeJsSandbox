var om=(s,e)=>()=>(e||s((e={exports:{}}).exports,e),e.exports);var QM=om((tb,Uo)=>{(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}})();/*! jQuery v3.7.1 | (c) OpenJS Foundation and other contributors | jquery.org/license */(function(s,e){typeof Uo=="object"&&typeof Uo.exports=="object"?Uo.exports=s.document?e(s,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(s)})(typeof window<"u"?window:globalThis,function(s,e){var t=[],n=Object.getPrototypeOf,i=t.slice,r=t.flat?function(l){return t.flat.call(l)}:function(l){return t.concat.apply([],l)},a=t.push,o=t.indexOf,c={},h=c.toString,f=c.hasOwnProperty,p=f.toString,m=p.call(Object),g={},y=function(l){return typeof l=="function"&&typeof l.nodeType!="number"&&typeof l.item!="function"},b=function(l){return l!=null&&l===l.window},x=s.document,_={type:!0,src:!0,nonce:!0,noModule:!0};function w(l,u,v){var M,E,A=(v=v||x).createElement("script");if(A.text=l,u)for(M in _)(E=u[M]||u.getAttribute&&u.getAttribute(M))&&A.setAttribute(M,E);v.head.appendChild(A).parentNode.removeChild(A)}function S(l){return l==null?l+"":typeof l=="object"||typeof l=="function"?c[h.call(l)]||"object":typeof l}var T="3.7.1",L=/HTML$/i,d=function(l,u){return new d.fn.init(l,u)};function I(l){var u=!!l&&"length"in l&&l.length,v=S(l);return!y(l)&&!b(l)&&(v==="array"||u===0||typeof u=="number"&&0<u&&u-1 in l)}function z(l,u){return l.nodeName&&l.nodeName.toLowerCase()===u.toLowerCase()}d.fn=d.prototype={jquery:T,constructor:d,length:0,toArray:function(){return i.call(this)},get:function(l){return l==null?i.call(this):l<0?this[l+this.length]:this[l]},pushStack:function(l){var u=d.merge(this.constructor(),l);return u.prevObject=this,u},each:function(l){return d.each(this,l)},map:function(l){return this.pushStack(d.map(this,function(u,v){return l.call(u,v,u)}))},slice:function(){return this.pushStack(i.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(d.grep(this,function(l,u){return(u+1)%2}))},odd:function(){return this.pushStack(d.grep(this,function(l,u){return u%2}))},eq:function(l){var u=this.length,v=+l+(l<0?u:0);return this.pushStack(0<=v&&v<u?[this[v]]:[])},end:function(){return this.prevObject||this.constructor()},push:a,sort:t.sort,splice:t.splice},d.extend=d.fn.extend=function(){var l,u,v,M,E,A,P=arguments[0]||{},H=1,B=arguments.length,X=!1;for(typeof P=="boolean"&&(X=P,P=arguments[H]||{},H++),typeof P=="object"||y(P)||(P={}),H===B&&(P=this,H--);H<B;H++)if((l=arguments[H])!=null)for(u in l)M=l[u],u!=="__proto__"&&P!==M&&(X&&M&&(d.isPlainObject(M)||(E=Array.isArray(M)))?(v=P[u],A=E&&!Array.isArray(v)?[]:E||d.isPlainObject(v)?v:{},E=!1,P[u]=d.extend(X,A,M)):M!==void 0&&(P[u]=M));return P},d.extend({expando:"jQuery"+(T+Math.random()).replace(/\D/g,""),isReady:!0,error:function(l){throw new Error(l)},noop:function(){},isPlainObject:function(l){var u,v;return!(!l||h.call(l)!=="[object Object]")&&(!(u=n(l))||typeof(v=f.call(u,"constructor")&&u.constructor)=="function"&&p.call(v)===m)},isEmptyObject:function(l){var u;for(u in l)return!1;return!0},globalEval:function(l,u,v){w(l,{nonce:u&&u.nonce},v)},each:function(l,u){var v,M=0;if(I(l))for(v=l.length;M<v&&u.call(l[M],M,l[M])!==!1;M++);else for(M in l)if(u.call(l[M],M,l[M])===!1)break;return l},text:function(l){var u,v="",M=0,E=l.nodeType;if(!E)for(;u=l[M++];)v+=d.text(u);return E===1||E===11?l.textContent:E===9?l.documentElement.textContent:E===3||E===4?l.nodeValue:v},makeArray:function(l,u){var v=u||[];return l!=null&&(I(Object(l))?d.merge(v,typeof l=="string"?[l]:l):a.call(v,l)),v},inArray:function(l,u,v){return u==null?-1:o.call(u,l,v)},isXMLDoc:function(l){var u=l&&l.namespaceURI,v=l&&(l.ownerDocument||l).documentElement;return!L.test(u||v&&v.nodeName||"HTML")},merge:function(l,u){for(var v=+u.length,M=0,E=l.length;M<v;M++)l[E++]=u[M];return l.length=E,l},grep:function(l,u,v){for(var M=[],E=0,A=l.length,P=!v;E<A;E++)!u(l[E],E)!==P&&M.push(l[E]);return M},map:function(l,u,v){var M,E,A=0,P=[];if(I(l))for(M=l.length;A<M;A++)(E=u(l[A],A,v))!=null&&P.push(E);else for(A in l)(E=u(l[A],A,v))!=null&&P.push(E);return r(P)},guid:1,support:g}),typeof Symbol=="function"&&(d.fn[Symbol.iterator]=t[Symbol.iterator]),d.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(l,u){c["[object "+u+"]"]=u.toLowerCase()});var C=t.pop,D=t.sort,le=t.splice,te="[\\x20\\t\\r\\n\\f]",q=new RegExp("^"+te+"+|((?:^|[^\\\\])(?:\\\\.)*)"+te+"+$","g");d.contains=function(l,u){var v=u&&u.parentNode;return l===v||!(!v||v.nodeType!==1||!(l.contains?l.contains(v):l.compareDocumentPosition&&16&l.compareDocumentPosition(v)))};var J=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;function re(l,u){return u?l==="\0"?"ï¿½":l.slice(0,-1)+"\\"+l.charCodeAt(l.length-1).toString(16)+" ":"\\"+l}d.escapeSelector=function(l){return(l+"").replace(J,re)};var fe=x,ue=a;(function(){var l,u,v,M,E,A,P,H,B,X,ie=ue,de=d.expando,j=0,ye=0,Ke=Jt(),ut=Jt(),dt=Jt(),Zt=Jt(),un=function(F,W){return F===W&&(E=!0),0},hi="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",ui="(?:\\\\[\\da-fA-F]{1,6}"+te+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",wt="\\["+te+"*("+ui+")(?:"+te+"*([*^$|!~]?=)"+te+`*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(`+ui+"))|)"+te+"*\\]",dr=":("+ui+`)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|`+wt+")*)|.*)\\)|)",Ct=new RegExp(te+"+","g"),qt=new RegExp("^"+te+"*,"+te+"*"),Os=new RegExp("^"+te+"*([>+~]|"+te+")"+te+"*"),Al=new RegExp(te+"|>"),di=new RegExp(dr),Fs=new RegExp("^"+ui+"$"),bi={ID:new RegExp("^#("+ui+")"),CLASS:new RegExp("^\\.("+ui+")"),TAG:new RegExp("^("+ui+"|[*])"),ATTR:new RegExp("^"+wt),PSEUDO:new RegExp("^"+dr),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+te+"*(even|odd|(([+-]|)(\\d*)n|)"+te+"*(?:([+-]|)"+te+"*(\\d+)|))"+te+"*\\)|)","i"),bool:new RegExp("^(?:"+hi+")$","i"),needsContext:new RegExp("^"+te+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+te+"*((?:-\\d)?\\d*)"+te+"*\\)|)(?=[^-]|$)","i")},Wi=/^(?:input|select|textarea|button)$/i,qr=/^h\d$/i,qn=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,dn=/[+~]/,nn=new RegExp("\\\\[\\da-fA-F]{1,6}"+te+"?|\\\\([^\\r\\n\\f])","g"),Cn=function(F,W){var ee="0x"+F.slice(1)-65536;return W||(ee<0?String.fromCharCode(ee+65536):String.fromCharCode(ee>>10|55296,1023&ee|56320))},Xi=function(){qi()},Rn=Ua(function(F){return F.disabled===!0&&z(F,"fieldset")},{dir:"parentNode",next:"legend"});try{ie.apply(t=i.call(fe.childNodes),fe.childNodes),t[fe.childNodes.length].nodeType}catch{ie={apply:function(W,ee){ue.apply(W,i.call(ee))},call:function(W){ue.apply(W,i.call(arguments,1))}}}function rt(F,W,ee,oe){var _e,Xe,qe,Je,Ve,It,ft,mt=W&&W.ownerDocument,At=W?W.nodeType:9;if(ee=ee||[],typeof F!="string"||!F||At!==1&&At!==9&&At!==11)return ee;if(!oe&&(qi(W),W=W||A,H)){if(At!==11&&(Ve=qn.exec(F)))if(_e=Ve[1]){if(At===9){if(!(qe=W.getElementById(_e)))return ee;if(qe.id===_e)return ie.call(ee,qe),ee}else if(mt&&(qe=mt.getElementById(_e))&&rt.contains(W,qe)&&qe.id===_e)return ie.call(ee,qe),ee}else{if(Ve[2])return ie.apply(ee,W.getElementsByTagName(F)),ee;if((_e=Ve[3])&&W.getElementsByClassName)return ie.apply(ee,W.getElementsByClassName(_e)),ee}if(!(Zt[F+" "]||B&&B.test(F))){if(ft=F,mt=W,At===1&&(Al.test(F)||Os.test(F))){for((mt=dn.test(F)&&Cl(W.parentNode)||W)==W&&g.scope||((Je=W.getAttribute("id"))?Je=d.escapeSelector(Je):W.setAttribute("id",Je=de)),Xe=(It=Bs(F)).length;Xe--;)It[Xe]=(Je?"#"+Je:":scope")+" "+Da(It[Xe]);ft=It.join(",")}try{return ie.apply(ee,mt.querySelectorAll(ft)),ee}catch{Zt(F,!0)}finally{Je===de&&W.removeAttribute("id")}}}return tu(F.replace(q,"$1"),W,ee,oe)}function Jt(){var F=[];return function W(ee,oe){return F.push(ee+" ")>u.cacheLength&&delete W[F.shift()],W[ee+" "]=oe}}function $t(F){return F[de]=!0,F}function kt(F){var W=A.createElement("fieldset");try{return!!F(W)}catch{return!1}finally{W.parentNode&&W.parentNode.removeChild(W),W=null}}function fi(F){return function(W){return z(W,"input")&&W.type===F}}function Yr(F){return function(W){return(z(W,"input")||z(W,"button"))&&W.type===F}}function Ia(F){return function(W){return"form"in W?W.parentNode&&W.disabled===!1?"label"in W?"label"in W.parentNode?W.parentNode.disabled===F:W.disabled===F:W.isDisabled===F||W.isDisabled!==!F&&Rn(W)===F:W.disabled===F:"label"in W&&W.disabled===F}}function fr(F){return $t(function(W){return W=+W,$t(function(ee,oe){for(var _e,Xe=F([],ee.length,W),qe=Xe.length;qe--;)ee[_e=Xe[qe]]&&(ee[_e]=!(oe[_e]=ee[_e]))})})}function Cl(F){return F&&typeof F.getElementsByTagName<"u"&&F}function qi(F){var W,ee=F?F.ownerDocument||F:fe;return ee!=A&&ee.nodeType===9&&ee.documentElement&&(P=(A=ee).documentElement,H=!d.isXMLDoc(A),X=P.matches||P.webkitMatchesSelector||P.msMatchesSelector,P.msMatchesSelector&&fe!=A&&(W=A.defaultView)&&W.top!==W&&W.addEventListener("unload",Xi),g.getById=kt(function(oe){return P.appendChild(oe).id=d.expando,!A.getElementsByName||!A.getElementsByName(d.expando).length}),g.disconnectedMatch=kt(function(oe){return X.call(oe,"*")}),g.scope=kt(function(){return A.querySelectorAll(":scope")}),g.cssHas=kt(function(){try{return A.querySelector(":has(*,:jqfake)"),!1}catch{return!0}}),g.getById?(u.filter.ID=function(oe){var _e=oe.replace(nn,Cn);return function(Xe){return Xe.getAttribute("id")===_e}},u.find.ID=function(oe,_e){if(typeof _e.getElementById<"u"&&H){var Xe=_e.getElementById(oe);return Xe?[Xe]:[]}}):(u.filter.ID=function(oe){var _e=oe.replace(nn,Cn);return function(Xe){var qe=typeof Xe.getAttributeNode<"u"&&Xe.getAttributeNode("id");return qe&&qe.value===_e}},u.find.ID=function(oe,_e){if(typeof _e.getElementById<"u"&&H){var Xe,qe,Je,Ve=_e.getElementById(oe);if(Ve){if((Xe=Ve.getAttributeNode("id"))&&Xe.value===oe)return[Ve];for(Je=_e.getElementsByName(oe),qe=0;Ve=Je[qe++];)if((Xe=Ve.getAttributeNode("id"))&&Xe.value===oe)return[Ve]}return[]}}),u.find.TAG=function(oe,_e){return typeof _e.getElementsByTagName<"u"?_e.getElementsByTagName(oe):_e.querySelectorAll(oe)},u.find.CLASS=function(oe,_e){if(typeof _e.getElementsByClassName<"u"&&H)return _e.getElementsByClassName(oe)},B=[],kt(function(oe){var _e;P.appendChild(oe).innerHTML="<a id='"+de+"' href='' disabled='disabled'></a><select id='"+de+"-\r\\' disabled='disabled'><option selected=''></option></select>",oe.querySelectorAll("[selected]").length||B.push("\\["+te+"*(?:value|"+hi+")"),oe.querySelectorAll("[id~="+de+"-]").length||B.push("~="),oe.querySelectorAll("a#"+de+"+*").length||B.push(".#.+[+~]"),oe.querySelectorAll(":checked").length||B.push(":checked"),(_e=A.createElement("input")).setAttribute("type","hidden"),oe.appendChild(_e).setAttribute("name","D"),P.appendChild(oe).disabled=!0,oe.querySelectorAll(":disabled").length!==2&&B.push(":enabled",":disabled"),(_e=A.createElement("input")).setAttribute("name",""),oe.appendChild(_e),oe.querySelectorAll("[name='']").length||B.push("\\["+te+"*name"+te+"*="+te+`*(?:''|"")`)}),g.cssHas||B.push(":has"),B=B.length&&new RegExp(B.join("|")),un=function(oe,_e){if(oe===_e)return E=!0,0;var Xe=!oe.compareDocumentPosition-!_e.compareDocumentPosition;return Xe||(1&(Xe=(oe.ownerDocument||oe)==(_e.ownerDocument||_e)?oe.compareDocumentPosition(_e):1)||!g.sortDetached&&_e.compareDocumentPosition(oe)===Xe?oe===A||oe.ownerDocument==fe&&rt.contains(fe,oe)?-1:_e===A||_e.ownerDocument==fe&&rt.contains(fe,_e)?1:M?o.call(M,oe)-o.call(M,_e):0:4&Xe?-1:1)}),A}for(l in rt.matches=function(F,W){return rt(F,null,null,W)},rt.matchesSelector=function(F,W){if(qi(F),H&&!Zt[W+" "]&&(!B||!B.test(W)))try{var ee=X.call(F,W);if(ee||g.disconnectedMatch||F.document&&F.document.nodeType!==11)return ee}catch{Zt(W,!0)}return 0<rt(W,A,null,[F]).length},rt.contains=function(F,W){return(F.ownerDocument||F)!=A&&qi(F),d.contains(F,W)},rt.attr=function(F,W){(F.ownerDocument||F)!=A&&qi(F);var ee=u.attrHandle[W.toLowerCase()],oe=ee&&f.call(u.attrHandle,W.toLowerCase())?ee(F,W,!H):void 0;return oe!==void 0?oe:F.getAttribute(W)},rt.error=function(F){throw new Error("Syntax error, unrecognized expression: "+F)},d.uniqueSort=function(F){var W,ee=[],oe=0,_e=0;if(E=!g.sortStable,M=!g.sortStable&&i.call(F,0),D.call(F,un),E){for(;W=F[_e++];)W===F[_e]&&(oe=ee.push(_e));for(;oe--;)le.call(F,ee[oe],1)}return M=null,F},d.fn.uniqueSort=function(){return this.pushStack(d.uniqueSort(i.apply(this)))},(u=d.expr={cacheLength:50,createPseudo:$t,match:bi,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(F){return F[1]=F[1].replace(nn,Cn),F[3]=(F[3]||F[4]||F[5]||"").replace(nn,Cn),F[2]==="~="&&(F[3]=" "+F[3]+" "),F.slice(0,4)},CHILD:function(F){return F[1]=F[1].toLowerCase(),F[1].slice(0,3)==="nth"?(F[3]||rt.error(F[0]),F[4]=+(F[4]?F[5]+(F[6]||1):2*(F[3]==="even"||F[3]==="odd")),F[5]=+(F[7]+F[8]||F[3]==="odd")):F[3]&&rt.error(F[0]),F},PSEUDO:function(F){var W,ee=!F[6]&&F[2];return bi.CHILD.test(F[0])?null:(F[3]?F[2]=F[4]||F[5]||"":ee&&di.test(ee)&&(W=Bs(ee,!0))&&(W=ee.indexOf(")",ee.length-W)-ee.length)&&(F[0]=F[0].slice(0,W),F[2]=ee.slice(0,W)),F.slice(0,3))}},filter:{TAG:function(F){var W=F.replace(nn,Cn).toLowerCase();return F==="*"?function(){return!0}:function(ee){return z(ee,W)}},CLASS:function(F){var W=Ke[F+" "];return W||(W=new RegExp("(^|"+te+")"+F+"("+te+"|$)"))&&Ke(F,function(ee){return W.test(typeof ee.className=="string"&&ee.className||typeof ee.getAttribute<"u"&&ee.getAttribute("class")||"")})},ATTR:function(F,W,ee){return function(oe){var _e=rt.attr(oe,F);return _e==null?W==="!=":!W||(_e+="",W==="="?_e===ee:W==="!="?_e!==ee:W==="^="?ee&&_e.indexOf(ee)===0:W==="*="?ee&&-1<_e.indexOf(ee):W==="$="?ee&&_e.slice(-ee.length)===ee:W==="~="?-1<(" "+_e.replace(Ct," ")+" ").indexOf(ee):W==="|="&&(_e===ee||_e.slice(0,ee.length+1)===ee+"-"))}},CHILD:function(F,W,ee,oe,_e){var Xe=F.slice(0,3)!=="nth",qe=F.slice(-4)!=="last",Je=W==="of-type";return oe===1&&_e===0?function(Ve){return!!Ve.parentNode}:function(Ve,It,ft){var mt,At,ht,on,xn,fn=Xe!==qe?"nextSibling":"previousSibling",Nn=Ve.parentNode,Hn=Je&&Ve.nodeName.toLowerCase(),Jn=!ft&&!Je,Ht=!1;if(Nn){if(Xe){for(;fn;){for(ht=Ve;ht=ht[fn];)if(Je?z(ht,Hn):ht.nodeType===1)return!1;xn=fn=F==="only"&&!xn&&"nextSibling"}return!0}if(xn=[qe?Nn.firstChild:Nn.lastChild],qe&&Jn){for(Ht=(on=(mt=(At=Nn[de]||(Nn[de]={}))[F]||[])[0]===j&&mt[1])&&mt[2],ht=on&&Nn.childNodes[on];ht=++on&&ht&&ht[fn]||(Ht=on=0)||xn.pop();)if(ht.nodeType===1&&++Ht&&ht===Ve){At[F]=[j,on,Ht];break}}else if(Jn&&(Ht=on=(mt=(At=Ve[de]||(Ve[de]={}))[F]||[])[0]===j&&mt[1]),Ht===!1)for(;(ht=++on&&ht&&ht[fn]||(Ht=on=0)||xn.pop())&&!((Je?z(ht,Hn):ht.nodeType===1)&&++Ht&&(Jn&&((At=ht[de]||(ht[de]={}))[F]=[j,Ht]),ht===Ve)););return(Ht-=_e)===oe||Ht%oe==0&&0<=Ht/oe}}},PSEUDO:function(F,W){var ee,oe=u.pseudos[F]||u.setFilters[F.toLowerCase()]||rt.error("unsupported pseudo: "+F);return oe[de]?oe(W):1<oe.length?(ee=[F,F,"",W],u.setFilters.hasOwnProperty(F.toLowerCase())?$t(function(_e,Xe){for(var qe,Je=oe(_e,W),Ve=Je.length;Ve--;)_e[qe=o.call(_e,Je[Ve])]=!(Xe[qe]=Je[Ve])}):function(_e){return oe(_e,0,ee)}):oe}},pseudos:{not:$t(function(F){var W=[],ee=[],oe=Il(F.replace(q,"$1"));return oe[de]?$t(function(_e,Xe,qe,Je){for(var Ve,It=oe(_e,null,Je,[]),ft=_e.length;ft--;)(Ve=It[ft])&&(_e[ft]=!(Xe[ft]=Ve))}):function(_e,Xe,qe){return W[0]=_e,oe(W,null,qe,ee),W[0]=null,!ee.pop()}}),has:$t(function(F){return function(W){return 0<rt(F,W).length}}),contains:$t(function(F){return F=F.replace(nn,Cn),function(W){return-1<(W.textContent||d.text(W)).indexOf(F)}}),lang:$t(function(F){return Fs.test(F||"")||rt.error("unsupported lang: "+F),F=F.replace(nn,Cn).toLowerCase(),function(W){var ee;do if(ee=H?W.lang:W.getAttribute("xml:lang")||W.getAttribute("lang"))return(ee=ee.toLowerCase())===F||ee.indexOf(F+"-")===0;while((W=W.parentNode)&&W.nodeType===1);return!1}}),target:function(F){var W=s.location&&s.location.hash;return W&&W.slice(1)===F.id},root:function(F){return F===P},focus:function(F){return F===function(){try{return A.activeElement}catch{}}()&&A.hasFocus()&&!!(F.type||F.href||~F.tabIndex)},enabled:Ia(!1),disabled:Ia(!0),checked:function(F){return z(F,"input")&&!!F.checked||z(F,"option")&&!!F.selected},selected:function(F){return F.parentNode&&F.parentNode.selectedIndex,F.selected===!0},empty:function(F){for(F=F.firstChild;F;F=F.nextSibling)if(F.nodeType<6)return!1;return!0},parent:function(F){return!u.pseudos.empty(F)},header:function(F){return qr.test(F.nodeName)},input:function(F){return Wi.test(F.nodeName)},button:function(F){return z(F,"input")&&F.type==="button"||z(F,"button")},text:function(F){var W;return z(F,"input")&&F.type==="text"&&((W=F.getAttribute("type"))==null||W.toLowerCase()==="text")},first:fr(function(){return[0]}),last:fr(function(F,W){return[W-1]}),eq:fr(function(F,W,ee){return[ee<0?ee+W:ee]}),even:fr(function(F,W){for(var ee=0;ee<W;ee+=2)F.push(ee);return F}),odd:fr(function(F,W){for(var ee=1;ee<W;ee+=2)F.push(ee);return F}),lt:fr(function(F,W,ee){var oe;for(oe=ee<0?ee+W:W<ee?W:ee;0<=--oe;)F.push(oe);return F}),gt:fr(function(F,W,ee){for(var oe=ee<0?ee+W:ee;++oe<W;)F.push(oe);return F})}}).pseudos.nth=u.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})u.pseudos[l]=fi(l);for(l in{submit:!0,reset:!0})u.pseudos[l]=Yr(l);function eu(){}function Bs(F,W){var ee,oe,_e,Xe,qe,Je,Ve,It=ut[F+" "];if(It)return W?0:It.slice(0);for(qe=F,Je=[],Ve=u.preFilter;qe;){for(Xe in ee&&!(oe=qt.exec(qe))||(oe&&(qe=qe.slice(oe[0].length)||qe),Je.push(_e=[])),ee=!1,(oe=Os.exec(qe))&&(ee=oe.shift(),_e.push({value:ee,type:oe[0].replace(q," ")}),qe=qe.slice(ee.length)),u.filter)!(oe=bi[Xe].exec(qe))||Ve[Xe]&&!(oe=Ve[Xe](oe))||(ee=oe.shift(),_e.push({value:ee,type:Xe,matches:oe}),qe=qe.slice(ee.length));if(!ee)break}return W?qe.length:qe?rt.error(F):ut(F,Je).slice(0)}function Da(F){for(var W=0,ee=F.length,oe="";W<ee;W++)oe+=F[W].value;return oe}function Ua(F,W,ee){var oe=W.dir,_e=W.next,Xe=_e||oe,qe=ee&&Xe==="parentNode",Je=ye++;return W.first?function(Ve,It,ft){for(;Ve=Ve[oe];)if(Ve.nodeType===1||qe)return F(Ve,It,ft);return!1}:function(Ve,It,ft){var mt,At,ht=[j,Je];if(ft){for(;Ve=Ve[oe];)if((Ve.nodeType===1||qe)&&F(Ve,It,ft))return!0}else for(;Ve=Ve[oe];)if(Ve.nodeType===1||qe)if(At=Ve[de]||(Ve[de]={}),_e&&z(Ve,_e))Ve=Ve[oe]||Ve;else{if((mt=At[Xe])&&mt[0]===j&&mt[1]===Je)return ht[2]=mt[2];if((At[Xe]=ht)[2]=F(Ve,It,ft))return!0}return!1}}function Rl(F){return 1<F.length?function(W,ee,oe){for(var _e=F.length;_e--;)if(!F[_e](W,ee,oe))return!1;return!0}:F[0]}function Na(F,W,ee,oe,_e){for(var Xe,qe=[],Je=0,Ve=F.length,It=W!=null;Je<Ve;Je++)(Xe=F[Je])&&(ee&&!ee(Xe,oe,_e)||(qe.push(Xe),It&&W.push(Je)));return qe}function Pl(F,W,ee,oe,_e,Xe){return oe&&!oe[de]&&(oe=Pl(oe)),_e&&!_e[de]&&(_e=Pl(_e,Xe)),$t(function(qe,Je,Ve,It){var ft,mt,At,ht,on=[],xn=[],fn=Je.length,Nn=qe||function(Jn,Ht,pr){for(var $n=0,Oa=Ht.length;$n<Oa;$n++)rt(Jn,Ht[$n],pr);return pr}(W||"*",Ve.nodeType?[Ve]:Ve,[]),Hn=!F||!qe&&W?Nn:Na(Nn,on,F,Ve,It);if(ee?ee(Hn,ht=_e||(qe?F:fn||oe)?[]:Je,Ve,It):ht=Hn,oe)for(ft=Na(ht,xn),oe(ft,[],Ve,It),mt=ft.length;mt--;)(At=ft[mt])&&(ht[xn[mt]]=!(Hn[xn[mt]]=At));if(qe){if(_e||F){if(_e){for(ft=[],mt=ht.length;mt--;)(At=ht[mt])&&ft.push(Hn[mt]=At);_e(null,ht=[],ft,It)}for(mt=ht.length;mt--;)(At=ht[mt])&&-1<(ft=_e?o.call(qe,At):on[mt])&&(qe[ft]=!(Je[ft]=At))}}else ht=Na(ht===Je?ht.splice(fn,ht.length):ht),_e?_e(null,Je,ht,It):ie.apply(Je,ht)})}function Ll(F){for(var W,ee,oe,_e=F.length,Xe=u.relative[F[0].type],qe=Xe||u.relative[" "],Je=Xe?1:0,Ve=Ua(function(mt){return mt===W},qe,!0),It=Ua(function(mt){return-1<o.call(W,mt)},qe,!0),ft=[function(mt,At,ht){var on=!Xe&&(ht||At!=v)||((W=At).nodeType?Ve(mt,At,ht):It(mt,At,ht));return W=null,on}];Je<_e;Je++)if(ee=u.relative[F[Je].type])ft=[Ua(Rl(ft),ee)];else{if((ee=u.filter[F[Je].type].apply(null,F[Je].matches))[de]){for(oe=++Je;oe<_e&&!u.relative[F[oe].type];oe++);return Pl(1<Je&&Rl(ft),1<Je&&Da(F.slice(0,Je-1).concat({value:F[Je-2].type===" "?"*":""})).replace(q,"$1"),ee,Je<oe&&Ll(F.slice(Je,oe)),oe<_e&&Ll(F=F.slice(oe)),oe<_e&&Da(F))}ft.push(ee)}return Rl(ft)}function Il(F,W){var ee,oe,_e,Xe,qe,Je,Ve=[],It=[],ft=dt[F+" "];if(!ft){for(W||(W=Bs(F)),ee=W.length;ee--;)(ft=Ll(W[ee]))[de]?Ve.push(ft):It.push(ft);(ft=dt(F,(oe=It,Xe=0<(_e=Ve).length,qe=0<oe.length,Je=function(mt,At,ht,on,xn){var fn,Nn,Hn,Jn=0,Ht="0",pr=mt&&[],$n=[],Oa=v,nu=mt||qe&&u.find.TAG("*",xn),iu=j+=Oa==null?1:Math.random()||.1,am=nu.length;for(xn&&(v=At==A||At||xn);Ht!==am&&(fn=nu[Ht])!=null;Ht++){if(qe&&fn){for(Nn=0,At||fn.ownerDocument==A||(qi(fn),ht=!H);Hn=oe[Nn++];)if(Hn(fn,At||A,ht)){ie.call(on,fn);break}xn&&(j=iu)}Xe&&((fn=!Hn&&fn)&&Jn--,mt&&pr.push(fn))}if(Jn+=Ht,Xe&&Ht!==Jn){for(Nn=0;Hn=_e[Nn++];)Hn(pr,$n,At,ht);if(mt){if(0<Jn)for(;Ht--;)pr[Ht]||$n[Ht]||($n[Ht]=C.call(on));$n=Na($n)}ie.apply(on,$n),xn&&!mt&&0<$n.length&&1<Jn+_e.length&&d.uniqueSort(on)}return xn&&(j=iu,v=Oa),pr},Xe?$t(Je):Je))).selector=F}return ft}function tu(F,W,ee,oe){var _e,Xe,qe,Je,Ve,It=typeof F=="function"&&F,ft=!oe&&Bs(F=It.selector||F);if(ee=ee||[],ft.length===1){if(2<(Xe=ft[0]=ft[0].slice(0)).length&&(qe=Xe[0]).type==="ID"&&W.nodeType===9&&H&&u.relative[Xe[1].type]){if(!(W=(u.find.ID(qe.matches[0].replace(nn,Cn),W)||[])[0]))return ee;It&&(W=W.parentNode),F=F.slice(Xe.shift().value.length)}for(_e=bi.needsContext.test(F)?0:Xe.length;_e--&&(qe=Xe[_e],!u.relative[Je=qe.type]);)if((Ve=u.find[Je])&&(oe=Ve(qe.matches[0].replace(nn,Cn),dn.test(Xe[0].type)&&Cl(W.parentNode)||W))){if(Xe.splice(_e,1),!(F=oe.length&&Da(Xe)))return ie.apply(ee,oe),ee;break}}return(It||Il(F,ft))(oe,W,!H,ee,!W||dn.test(F)&&Cl(W.parentNode)||W),ee}eu.prototype=u.filters=u.pseudos,u.setFilters=new eu,g.sortStable=de.split("").sort(un).join("")===de,qi(),g.sortDetached=kt(function(F){return 1&F.compareDocumentPosition(A.createElement("fieldset"))}),d.find=rt,d.expr[":"]=d.expr.pseudos,d.unique=d.uniqueSort,rt.compile=Il,rt.select=tu,rt.setDocument=qi,rt.tokenize=Bs,rt.escape=d.escapeSelector,rt.getText=d.text,rt.isXML=d.isXMLDoc,rt.selectors=d.expr,rt.support=d.support,rt.uniqueSort=d.uniqueSort})();var pe=function(l,u,v){for(var M=[],E=v!==void 0;(l=l[u])&&l.nodeType!==9;)if(l.nodeType===1){if(E&&d(l).is(v))break;M.push(l)}return M},Te=function(l,u){for(var v=[];l;l=l.nextSibling)l.nodeType===1&&l!==u&&v.push(l);return v},xe=d.expr.match.needsContext,K=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function ae(l,u,v){return y(u)?d.grep(l,function(M,E){return!!u.call(M,E,M)!==v}):u.nodeType?d.grep(l,function(M){return M===u!==v}):typeof u!="string"?d.grep(l,function(M){return-1<o.call(u,M)!==v}):d.filter(u,l,v)}d.filter=function(l,u,v){var M=u[0];return v&&(l=":not("+l+")"),u.length===1&&M.nodeType===1?d.find.matchesSelector(M,l)?[M]:[]:d.find.matches(l,d.grep(u,function(E){return E.nodeType===1}))},d.fn.extend({find:function(l){var u,v,M=this.length,E=this;if(typeof l!="string")return this.pushStack(d(l).filter(function(){for(u=0;u<M;u++)if(d.contains(E[u],this))return!0}));for(v=this.pushStack([]),u=0;u<M;u++)d.find(l,E[u],v);return 1<M?d.uniqueSort(v):v},filter:function(l){return this.pushStack(ae(this,l||[],!1))},not:function(l){return this.pushStack(ae(this,l||[],!0))},is:function(l){return!!ae(this,typeof l=="string"&&xe.test(l)?d(l):l||[],!1).length}});var Ue,ze=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(d.fn.init=function(l,u,v){var M,E;if(!l)return this;if(v=v||Ue,typeof l=="string"){if(!(M=l[0]==="<"&&l[l.length-1]===">"&&3<=l.length?[null,l,null]:ze.exec(l))||!M[1]&&u)return!u||u.jquery?(u||v).find(l):this.constructor(u).find(l);if(M[1]){if(u=u instanceof d?u[0]:u,d.merge(this,d.parseHTML(M[1],u&&u.nodeType?u.ownerDocument||u:x,!0)),K.test(M[1])&&d.isPlainObject(u))for(M in u)y(this[M])?this[M](u[M]):this.attr(M,u[M]);return this}return(E=x.getElementById(M[2]))&&(this[0]=E,this.length=1),this}return l.nodeType?(this[0]=l,this.length=1,this):y(l)?v.ready!==void 0?v.ready(l):l(d):d.makeArray(l,this)}).prototype=d.fn,Ue=d(x);var Ge=/^(?:parents|prev(?:Until|All))/,tt={children:!0,contents:!0,next:!0,prev:!0};function Qe(l,u){for(;(l=l[u])&&l.nodeType!==1;);return l}d.fn.extend({has:function(l){var u=d(l,this),v=u.length;return this.filter(function(){for(var M=0;M<v;M++)if(d.contains(this,u[M]))return!0})},closest:function(l,u){var v,M=0,E=this.length,A=[],P=typeof l!="string"&&d(l);if(!xe.test(l)){for(;M<E;M++)for(v=this[M];v&&v!==u;v=v.parentNode)if(v.nodeType<11&&(P?-1<P.index(v):v.nodeType===1&&d.find.matchesSelector(v,l))){A.push(v);break}}return this.pushStack(1<A.length?d.uniqueSort(A):A)},index:function(l){return l?typeof l=="string"?o.call(d(l),this[0]):o.call(this,l.jquery?l[0]:l):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(l,u){return this.pushStack(d.uniqueSort(d.merge(this.get(),d(l,u))))},addBack:function(l){return this.add(l==null?this.prevObject:this.prevObject.filter(l))}}),d.each({parent:function(l){var u=l.parentNode;return u&&u.nodeType!==11?u:null},parents:function(l){return pe(l,"parentNode")},parentsUntil:function(l,u,v){return pe(l,"parentNode",v)},next:function(l){return Qe(l,"nextSibling")},prev:function(l){return Qe(l,"previousSibling")},nextAll:function(l){return pe(l,"nextSibling")},prevAll:function(l){return pe(l,"previousSibling")},nextUntil:function(l,u,v){return pe(l,"nextSibling",v)},prevUntil:function(l,u,v){return pe(l,"previousSibling",v)},siblings:function(l){return Te((l.parentNode||{}).firstChild,l)},children:function(l){return Te(l.firstChild)},contents:function(l){return l.contentDocument!=null&&n(l.contentDocument)?l.contentDocument:(z(l,"template")&&(l=l.content||l),d.merge([],l.childNodes))}},function(l,u){d.fn[l]=function(v,M){var E=d.map(this,u,v);return l.slice(-5)!=="Until"&&(M=v),M&&typeof M=="string"&&(E=d.filter(M,E)),1<this.length&&(tt[l]||d.uniqueSort(E),Ge.test(l)&&E.reverse()),this.pushStack(E)}});var je=/[^\x20\t\r\n\f]+/g;function _t(l){return l}function Pt(l){throw l}function nt(l,u,v,M){var E;try{l&&y(E=l.promise)?E.call(l).done(u).fail(v):l&&y(E=l.then)?E.call(l,u,v):u.apply(void 0,[l].slice(M))}catch(A){v.apply(void 0,[A])}}d.Callbacks=function(l){var u,v;l=typeof l=="string"?(u=l,v={},d.each(u.match(je)||[],function(j,ye){v[ye]=!0}),v):d.extend({},l);var M,E,A,P,H=[],B=[],X=-1,ie=function(){for(P=P||l.once,A=M=!0;B.length;X=-1)for(E=B.shift();++X<H.length;)H[X].apply(E[0],E[1])===!1&&l.stopOnFalse&&(X=H.length,E=!1);l.memory||(E=!1),M=!1,P&&(H=E?[]:"")},de={add:function(){return H&&(E&&!M&&(X=H.length-1,B.push(E)),function j(ye){d.each(ye,function(Ke,ut){y(ut)?l.unique&&de.has(ut)||H.push(ut):ut&&ut.length&&S(ut)!=="string"&&j(ut)})}(arguments),E&&!M&&ie()),this},remove:function(){return d.each(arguments,function(j,ye){for(var Ke;-1<(Ke=d.inArray(ye,H,Ke));)H.splice(Ke,1),Ke<=X&&X--}),this},has:function(j){return j?-1<d.inArray(j,H):0<H.length},empty:function(){return H&&(H=[]),this},disable:function(){return P=B=[],H=E="",this},disabled:function(){return!H},lock:function(){return P=B=[],E||M||(H=E=""),this},locked:function(){return!!P},fireWith:function(j,ye){return P||(ye=[j,(ye=ye||[]).slice?ye.slice():ye],B.push(ye),M||ie()),this},fire:function(){return de.fireWith(this,arguments),this},fired:function(){return!!A}};return de},d.extend({Deferred:function(l){var u=[["notify","progress",d.Callbacks("memory"),d.Callbacks("memory"),2],["resolve","done",d.Callbacks("once memory"),d.Callbacks("once memory"),0,"resolved"],["reject","fail",d.Callbacks("once memory"),d.Callbacks("once memory"),1,"rejected"]],v="pending",M={state:function(){return v},always:function(){return E.done(arguments).fail(arguments),this},catch:function(A){return M.then(null,A)},pipe:function(){var A=arguments;return d.Deferred(function(P){d.each(u,function(H,B){var X=y(A[B[4]])&&A[B[4]];E[B[1]](function(){var ie=X&&X.apply(this,arguments);ie&&y(ie.promise)?ie.promise().progress(P.notify).done(P.resolve).fail(P.reject):P[B[0]+"With"](this,X?[ie]:arguments)})}),A=null}).promise()},then:function(A,P,H){var B=0;function X(ie,de,j,ye){return function(){var Ke=this,ut=arguments,dt=function(){var un,hi;if(!(ie<B)){if((un=j.apply(Ke,ut))===de.promise())throw new TypeError("Thenable self-resolution");hi=un&&(typeof un=="object"||typeof un=="function")&&un.then,y(hi)?ye?hi.call(un,X(B,de,_t,ye),X(B,de,Pt,ye)):(B++,hi.call(un,X(B,de,_t,ye),X(B,de,Pt,ye),X(B,de,_t,de.notifyWith))):(j!==_t&&(Ke=void 0,ut=[un]),(ye||de.resolveWith)(Ke,ut))}},Zt=ye?dt:function(){try{dt()}catch(un){d.Deferred.exceptionHook&&d.Deferred.exceptionHook(un,Zt.error),B<=ie+1&&(j!==Pt&&(Ke=void 0,ut=[un]),de.rejectWith(Ke,ut))}};ie?Zt():(d.Deferred.getErrorHook?Zt.error=d.Deferred.getErrorHook():d.Deferred.getStackHook&&(Zt.error=d.Deferred.getStackHook()),s.setTimeout(Zt))}}return d.Deferred(function(ie){u[0][3].add(X(0,ie,y(H)?H:_t,ie.notifyWith)),u[1][3].add(X(0,ie,y(A)?A:_t)),u[2][3].add(X(0,ie,y(P)?P:Pt))}).promise()},promise:function(A){return A!=null?d.extend(A,M):M}},E={};return d.each(u,function(A,P){var H=P[2],B=P[5];M[P[1]]=H.add,B&&H.add(function(){v=B},u[3-A][2].disable,u[3-A][3].disable,u[0][2].lock,u[0][3].lock),H.add(P[3].fire),E[P[0]]=function(){return E[P[0]+"With"](this===E?void 0:this,arguments),this},E[P[0]+"With"]=H.fireWith}),M.promise(E),l&&l.call(E,E),E},when:function(l){var u=arguments.length,v=u,M=Array(v),E=i.call(arguments),A=d.Deferred(),P=function(H){return function(B){M[H]=this,E[H]=1<arguments.length?i.call(arguments):B,--u||A.resolveWith(M,E)}};if(u<=1&&(nt(l,A.done(P(v)).resolve,A.reject,!u),A.state()==="pending"||y(E[v]&&E[v].then)))return A.then();for(;v--;)nt(E[v],P(v),A.reject);return A.promise()}});var k=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;d.Deferred.exceptionHook=function(l,u){s.console&&s.console.warn&&l&&k.test(l.name)&&s.console.warn("jQuery.Deferred exception: "+l.message,l.stack,u)},d.readyException=function(l){s.setTimeout(function(){throw l})};var Pe=d.Deferred();function me(){x.removeEventListener("DOMContentLoaded",me),s.removeEventListener("load",me),d.ready()}d.fn.ready=function(l){return Pe.then(l).catch(function(u){d.readyException(u)}),this},d.extend({isReady:!1,readyWait:1,ready:function(l){(l===!0?--d.readyWait:d.isReady)||(d.isReady=!0)!==l&&0<--d.readyWait||Pe.resolveWith(x,[d])}}),d.ready.then=Pe.then,x.readyState==="complete"||x.readyState!=="loading"&&!x.documentElement.doScroll?s.setTimeout(d.ready):(x.addEventListener("DOMContentLoaded",me),s.addEventListener("load",me));var Ee=function(l,u,v,M,E,A,P){var H=0,B=l.length,X=v==null;if(S(v)==="object")for(H in E=!0,v)Ee(l,u,H,v[H],!0,A,P);else if(M!==void 0&&(E=!0,y(M)||(P=!0),X&&(P?(u.call(l,M),u=null):(X=u,u=function(ie,de,j){return X.call(d(ie),j)})),u))for(;H<B;H++)u(l[H],v,P?M:M.call(l[H],H,u(l[H],v)));return E?l:X?u.call(l):B?u(l[0],v):A},Me=/^-ms-/,$e=/-([a-z])/g;function ke(l,u){return u.toUpperCase()}function Fe(l){return l.replace(Me,"ms-").replace($e,ke)}var et=function(l){return l.nodeType===1||l.nodeType===9||!+l.nodeType};function pt(){this.expando=d.expando+pt.uid++}pt.uid=1,pt.prototype={cache:function(l){var u=l[this.expando];return u||(u={},et(l)&&(l.nodeType?l[this.expando]=u:Object.defineProperty(l,this.expando,{value:u,configurable:!0}))),u},set:function(l,u,v){var M,E=this.cache(l);if(typeof u=="string")E[Fe(u)]=v;else for(M in u)E[Fe(M)]=u[M];return E},get:function(l,u){return u===void 0?this.cache(l):l[this.expando]&&l[this.expando][Fe(u)]},access:function(l,u,v){return u===void 0||u&&typeof u=="string"&&v===void 0?this.get(l,u):(this.set(l,u,v),v!==void 0?v:u)},remove:function(l,u){var v,M=l[this.expando];if(M!==void 0){if(u!==void 0)for(v=(u=Array.isArray(u)?u.map(Fe):(u=Fe(u))in M?[u]:u.match(je)||[]).length;v--;)delete M[u[v]];(u===void 0||d.isEmptyObject(M))&&(l.nodeType?l[this.expando]=void 0:delete l[this.expando])}},hasData:function(l){var u=l[this.expando];return u!==void 0&&!d.isEmptyObject(u)}};var Ie=new pt,O=new pt,R=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Q=/[A-Z]/g;function Re(l,u,v){var M,E;if(v===void 0&&l.nodeType===1)if(M="data-"+u.replace(Q,"-$&").toLowerCase(),typeof(v=l.getAttribute(M))=="string"){try{v=(E=v)==="true"||E!=="false"&&(E==="null"?null:E===+E+""?+E:R.test(E)?JSON.parse(E):E)}catch{}O.set(l,u,v)}else v=void 0;return v}d.extend({hasData:function(l){return O.hasData(l)||Ie.hasData(l)},data:function(l,u,v){return O.access(l,u,v)},removeData:function(l,u){O.remove(l,u)},_data:function(l,u,v){return Ie.access(l,u,v)},_removeData:function(l,u){Ie.remove(l,u)}}),d.fn.extend({data:function(l,u){var v,M,E,A=this[0],P=A&&A.attributes;if(l===void 0){if(this.length&&(E=O.get(A),A.nodeType===1&&!Ie.get(A,"hasDataAttrs"))){for(v=P.length;v--;)P[v]&&(M=P[v].name).indexOf("data-")===0&&(M=Fe(M.slice(5)),Re(A,M,E[M]));Ie.set(A,"hasDataAttrs",!0)}return E}return typeof l=="object"?this.each(function(){O.set(this,l)}):Ee(this,function(H){var B;if(A&&H===void 0)return(B=O.get(A,l))!==void 0||(B=Re(A,l))!==void 0?B:void 0;this.each(function(){O.set(this,l,H)})},null,u,1<arguments.length,null,!0)},removeData:function(l){return this.each(function(){O.remove(this,l)})}}),d.extend({queue:function(l,u,v){var M;if(l)return u=(u||"fx")+"queue",M=Ie.get(l,u),v&&(!M||Array.isArray(v)?M=Ie.access(l,u,d.makeArray(v)):M.push(v)),M||[]},dequeue:function(l,u){u=u||"fx";var v=d.queue(l,u),M=v.length,E=v.shift(),A=d._queueHooks(l,u);E==="inprogress"&&(E=v.shift(),M--),E&&(u==="fx"&&v.unshift("inprogress"),delete A.stop,E.call(l,function(){d.dequeue(l,u)},A)),!M&&A&&A.empty.fire()},_queueHooks:function(l,u){var v=u+"queueHooks";return Ie.get(l,v)||Ie.access(l,v,{empty:d.Callbacks("once memory").add(function(){Ie.remove(l,[u+"queue",v])})})}}),d.fn.extend({queue:function(l,u){var v=2;return typeof l!="string"&&(u=l,l="fx",v--),arguments.length<v?d.queue(this[0],l):u===void 0?this:this.each(function(){var M=d.queue(this,l,u);d._queueHooks(this,l),l==="fx"&&M[0]!=="inprogress"&&d.dequeue(this,l)})},dequeue:function(l){return this.each(function(){d.dequeue(this,l)})},clearQueue:function(l){return this.queue(l||"fx",[])},promise:function(l,u){var v,M=1,E=d.Deferred(),A=this,P=this.length,H=function(){--M||E.resolveWith(A,[A])};for(typeof l!="string"&&(u=l,l=void 0),l=l||"fx";P--;)(v=Ie.get(A[P],l+"queueHooks"))&&v.empty&&(M++,v.empty.add(H));return H(),E.promise(u)}});var Se=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Ce=new RegExp("^(?:([+-])=|)("+Se+")([a-z%]*)$","i"),We=["Top","Right","Bottom","Left"],Ae=x.documentElement,ne=function(l){return d.contains(l.ownerDocument,l)},V={composed:!0};Ae.getRootNode&&(ne=function(l){return d.contains(l.ownerDocument,l)||l.getRootNode(V)===l.ownerDocument});var ve=function(l,u){return(l=u||l).style.display==="none"||l.style.display===""&&ne(l)&&d.css(l,"display")==="none"};function Be(l,u,v,M){var E,A,P=20,H=M?function(){return M.cur()}:function(){return d.css(l,u,"")},B=H(),X=v&&v[3]||(d.cssNumber[u]?"":"px"),ie=l.nodeType&&(d.cssNumber[u]||X!=="px"&&+B)&&Ce.exec(d.css(l,u));if(ie&&ie[3]!==X){for(B/=2,X=X||ie[3],ie=+B||1;P--;)d.style(l,u,ie+X),(1-A)*(1-(A=H()/B||.5))<=0&&(P=0),ie/=A;ie*=2,d.style(l,u,ie+X),v=v||[]}return v&&(ie=+ie||+B||0,E=v[1]?ie+(v[1]+1)*v[2]:+v[2],M&&(M.unit=X,M.start=ie,M.end=E)),E}var Le={};function De(l,u){for(var v,M,E,A,P,H,B,X=[],ie=0,de=l.length;ie<de;ie++)(M=l[ie]).style&&(v=M.style.display,u?(v==="none"&&(X[ie]=Ie.get(M,"display")||null,X[ie]||(M.style.display="")),M.style.display===""&&ve(M)&&(X[ie]=(B=P=A=void 0,P=(E=M).ownerDocument,H=E.nodeName,(B=Le[H])||(A=P.body.appendChild(P.createElement(H)),B=d.css(A,"display"),A.parentNode.removeChild(A),B==="none"&&(B="block"),Le[H]=B)))):v!=="none"&&(X[ie]="none",Ie.set(M,"display",v)));for(ie=0;ie<de;ie++)X[ie]!=null&&(l[ie].style.display=X[ie]);return l}d.fn.extend({show:function(){return De(this,!0)},hide:function(){return De(this)},toggle:function(l){return typeof l=="boolean"?l?this.show():this.hide():this.each(function(){ve(this)?d(this).show():d(this).hide()})}});var st,bt,G=/^(?:checkbox|radio)$/i,Ne=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,se=/^$|^module$|\/(?:java|ecma)script/i;st=x.createDocumentFragment().appendChild(x.createElement("div")),(bt=x.createElement("input")).setAttribute("type","radio"),bt.setAttribute("checked","checked"),bt.setAttribute("name","t"),st.appendChild(bt),g.checkClone=st.cloneNode(!0).cloneNode(!0).lastChild.checked,st.innerHTML="<textarea>x</textarea>",g.noCloneChecked=!!st.cloneNode(!0).lastChild.defaultValue,st.innerHTML="<option></option>",g.option=!!st.lastChild;var be={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function we(l,u){var v;return v=typeof l.getElementsByTagName<"u"?l.getElementsByTagName(u||"*"):typeof l.querySelectorAll<"u"?l.querySelectorAll(u||"*"):[],u===void 0||u&&z(l,u)?d.merge([l],v):v}function vt(l,u){for(var v=0,M=l.length;v<M;v++)Ie.set(l[v],"globalEval",!u||Ie.get(u[v],"globalEval"))}be.tbody=be.tfoot=be.colgroup=be.caption=be.thead,be.th=be.td,g.option||(be.optgroup=be.option=[1,"<select multiple='multiple'>","</select>"]);var Ut=/<|&#?\w+;/;function Nt(l,u,v,M,E){for(var A,P,H,B,X,ie,de=u.createDocumentFragment(),j=[],ye=0,Ke=l.length;ye<Ke;ye++)if((A=l[ye])||A===0)if(S(A)==="object")d.merge(j,A.nodeType?[A]:A);else if(Ut.test(A)){for(P=P||de.appendChild(u.createElement("div")),H=(Ne.exec(A)||["",""])[1].toLowerCase(),B=be[H]||be._default,P.innerHTML=B[1]+d.htmlPrefilter(A)+B[2],ie=B[0];ie--;)P=P.lastChild;d.merge(j,P.childNodes),(P=de.firstChild).textContent=""}else j.push(u.createTextNode(A));for(de.textContent="",ye=0;A=j[ye++];)if(M&&-1<d.inArray(A,M))E&&E.push(A);else if(X=ne(A),P=we(de.appendChild(A),"script"),X&&vt(P),v)for(ie=0;A=P[ie++];)se.test(A.type||"")&&v.push(A);return de}var yn=/^([^.]*)(?:\.(.+)|)/;function Lt(){return!0}function gn(){return!1}function sn(l,u,v,M,E,A){var P,H;if(typeof u=="object"){for(H in typeof v!="string"&&(M=M||v,v=void 0),u)sn(l,H,v,M,u[H],A);return l}if(M==null&&E==null?(E=v,M=v=void 0):E==null&&(typeof v=="string"?(E=M,M=void 0):(E=M,M=v,v=void 0)),E===!1)E=gn;else if(!E)return l;return A===1&&(P=E,(E=function(B){return d().off(B),P.apply(this,arguments)}).guid=P.guid||(P.guid=d.guid++)),l.each(function(){d.event.add(this,u,E,M,v)})}function lr(l,u,v){v?(Ie.set(l,u,!1),d.event.add(l,u,{namespace:!1,handler:function(M){var E,A=Ie.get(this,u);if(1&M.isTrigger&&this[u]){if(A)(d.event.special[u]||{}).delegateType&&M.stopPropagation();else if(A=i.call(arguments),Ie.set(this,u,A),this[u](),E=Ie.get(this,u),Ie.set(this,u,!1),A!==E)return M.stopImmediatePropagation(),M.preventDefault(),E}else A&&(Ie.set(this,u,d.event.trigger(A[0],A.slice(1),this)),M.stopPropagation(),M.isImmediatePropagationStopped=Lt)}})):Ie.get(l,u)===void 0&&d.event.add(l,u,Lt)}d.event={global:{},add:function(l,u,v,M,E){var A,P,H,B,X,ie,de,j,ye,Ke,ut,dt=Ie.get(l);if(et(l))for(v.handler&&(v=(A=v).handler,E=A.selector),E&&d.find.matchesSelector(Ae,E),v.guid||(v.guid=d.guid++),(B=dt.events)||(B=dt.events=Object.create(null)),(P=dt.handle)||(P=dt.handle=function(Zt){return typeof d<"u"&&d.event.triggered!==Zt.type?d.event.dispatch.apply(l,arguments):void 0}),X=(u=(u||"").match(je)||[""]).length;X--;)ye=ut=(H=yn.exec(u[X])||[])[1],Ke=(H[2]||"").split(".").sort(),ye&&(de=d.event.special[ye]||{},ye=(E?de.delegateType:de.bindType)||ye,de=d.event.special[ye]||{},ie=d.extend({type:ye,origType:ut,data:M,handler:v,guid:v.guid,selector:E,needsContext:E&&d.expr.match.needsContext.test(E),namespace:Ke.join(".")},A),(j=B[ye])||((j=B[ye]=[]).delegateCount=0,de.setup&&de.setup.call(l,M,Ke,P)!==!1||l.addEventListener&&l.addEventListener(ye,P)),de.add&&(de.add.call(l,ie),ie.handler.guid||(ie.handler.guid=v.guid)),E?j.splice(j.delegateCount++,0,ie):j.push(ie),d.event.global[ye]=!0)},remove:function(l,u,v,M,E){var A,P,H,B,X,ie,de,j,ye,Ke,ut,dt=Ie.hasData(l)&&Ie.get(l);if(dt&&(B=dt.events)){for(X=(u=(u||"").match(je)||[""]).length;X--;)if(ye=ut=(H=yn.exec(u[X])||[])[1],Ke=(H[2]||"").split(".").sort(),ye){for(de=d.event.special[ye]||{},j=B[ye=(M?de.delegateType:de.bindType)||ye]||[],H=H[2]&&new RegExp("(^|\\.)"+Ke.join("\\.(?:.*\\.|)")+"(\\.|$)"),P=A=j.length;A--;)ie=j[A],!E&&ut!==ie.origType||v&&v.guid!==ie.guid||H&&!H.test(ie.namespace)||M&&M!==ie.selector&&(M!=="**"||!ie.selector)||(j.splice(A,1),ie.selector&&j.delegateCount--,de.remove&&de.remove.call(l,ie));P&&!j.length&&(de.teardown&&de.teardown.call(l,Ke,dt.handle)!==!1||d.removeEvent(l,ye,dt.handle),delete B[ye])}else for(ye in B)d.event.remove(l,ye+u[X],v,M,!0);d.isEmptyObject(B)&&Ie.remove(l,"handle events")}},dispatch:function(l){var u,v,M,E,A,P,H=new Array(arguments.length),B=d.event.fix(l),X=(Ie.get(this,"events")||Object.create(null))[B.type]||[],ie=d.event.special[B.type]||{};for(H[0]=B,u=1;u<arguments.length;u++)H[u]=arguments[u];if(B.delegateTarget=this,!ie.preDispatch||ie.preDispatch.call(this,B)!==!1){for(P=d.event.handlers.call(this,B,X),u=0;(E=P[u++])&&!B.isPropagationStopped();)for(B.currentTarget=E.elem,v=0;(A=E.handlers[v++])&&!B.isImmediatePropagationStopped();)B.rnamespace&&A.namespace!==!1&&!B.rnamespace.test(A.namespace)||(B.handleObj=A,B.data=A.data,(M=((d.event.special[A.origType]||{}).handle||A.handler).apply(E.elem,H))!==void 0&&(B.result=M)===!1&&(B.preventDefault(),B.stopPropagation()));return ie.postDispatch&&ie.postDispatch.call(this,B),B.result}},handlers:function(l,u){var v,M,E,A,P,H=[],B=u.delegateCount,X=l.target;if(B&&X.nodeType&&!(l.type==="click"&&1<=l.button)){for(;X!==this;X=X.parentNode||this)if(X.nodeType===1&&(l.type!=="click"||X.disabled!==!0)){for(A=[],P={},v=0;v<B;v++)P[E=(M=u[v]).selector+" "]===void 0&&(P[E]=M.needsContext?-1<d(E,this).index(X):d.find(E,this,null,[X]).length),P[E]&&A.push(M);A.length&&H.push({elem:X,handlers:A})}}return X=this,B<u.length&&H.push({elem:X,handlers:u.slice(B)}),H},addProp:function(l,u){Object.defineProperty(d.Event.prototype,l,{enumerable:!0,configurable:!0,get:y(u)?function(){if(this.originalEvent)return u(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[l]},set:function(v){Object.defineProperty(this,l,{enumerable:!0,configurable:!0,writable:!0,value:v})}})},fix:function(l){return l[d.expando]?l:new d.Event(l)},special:{load:{noBubble:!0},click:{setup:function(l){var u=this||l;return G.test(u.type)&&u.click&&z(u,"input")&&lr(u,"click",!0),!1},trigger:function(l){var u=this||l;return G.test(u.type)&&u.click&&z(u,"input")&&lr(u,"click"),!0},_default:function(l){var u=l.target;return G.test(u.type)&&u.click&&z(u,"input")&&Ie.get(u,"click")||z(u,"a")}},beforeunload:{postDispatch:function(l){l.result!==void 0&&l.originalEvent&&(l.originalEvent.returnValue=l.result)}}}},d.removeEvent=function(l,u,v){l.removeEventListener&&l.removeEventListener(u,v)},d.Event=function(l,u){if(!(this instanceof d.Event))return new d.Event(l,u);l&&l.type?(this.originalEvent=l,this.type=l.type,this.isDefaultPrevented=l.defaultPrevented||l.defaultPrevented===void 0&&l.returnValue===!1?Lt:gn,this.target=l.target&&l.target.nodeType===3?l.target.parentNode:l.target,this.currentTarget=l.currentTarget,this.relatedTarget=l.relatedTarget):this.type=l,u&&d.extend(this,u),this.timeStamp=l&&l.timeStamp||Date.now(),this[d.expando]=!0},d.Event.prototype={constructor:d.Event,isDefaultPrevented:gn,isPropagationStopped:gn,isImmediatePropagationStopped:gn,isSimulated:!1,preventDefault:function(){var l=this.originalEvent;this.isDefaultPrevented=Lt,l&&!this.isSimulated&&l.preventDefault()},stopPropagation:function(){var l=this.originalEvent;this.isPropagationStopped=Lt,l&&!this.isSimulated&&l.stopPropagation()},stopImmediatePropagation:function(){var l=this.originalEvent;this.isImmediatePropagationStopped=Lt,l&&!this.isSimulated&&l.stopImmediatePropagation(),this.stopPropagation()}},d.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},d.event.addProp),d.each({focus:"focusin",blur:"focusout"},function(l,u){function v(M){if(x.documentMode){var E=Ie.get(this,"handle"),A=d.event.fix(M);A.type=M.type==="focusin"?"focus":"blur",A.isSimulated=!0,E(M),A.target===A.currentTarget&&E(A)}else d.event.simulate(u,M.target,d.event.fix(M))}d.event.special[l]={setup:function(){var M;if(lr(this,l,!0),!x.documentMode)return!1;(M=Ie.get(this,u))||this.addEventListener(u,v),Ie.set(this,u,(M||0)+1)},trigger:function(){return lr(this,l),!0},teardown:function(){var M;if(!x.documentMode)return!1;(M=Ie.get(this,u)-1)?Ie.set(this,u,M):(this.removeEventListener(u,v),Ie.remove(this,u))},_default:function(M){return Ie.get(M.target,l)},delegateType:u},d.event.special[u]={setup:function(){var M=this.ownerDocument||this.document||this,E=x.documentMode?this:M,A=Ie.get(E,u);A||(x.documentMode?this.addEventListener(u,v):M.addEventListener(l,v,!0)),Ie.set(E,u,(A||0)+1)},teardown:function(){var M=this.ownerDocument||this.document||this,E=x.documentMode?this:M,A=Ie.get(E,u)-1;A?Ie.set(E,u,A):(x.documentMode?this.removeEventListener(u,v):M.removeEventListener(l,v,!0),Ie.remove(E,u))}}}),d.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(l,u){d.event.special[l]={delegateType:u,bindType:u,handle:function(v){var M,E=v.relatedTarget,A=v.handleObj;return E&&(E===this||d.contains(this,E))||(v.type=A.origType,M=A.handler.apply(this,arguments),v.type=u),M}}}),d.fn.extend({on:function(l,u,v,M){return sn(this,l,u,v,M)},one:function(l,u,v,M){return sn(this,l,u,v,M,1)},off:function(l,u,v){var M,E;if(l&&l.preventDefault&&l.handleObj)return M=l.handleObj,d(l.delegateTarget).off(M.namespace?M.origType+"."+M.namespace:M.origType,M.selector,M.handler),this;if(typeof l=="object"){for(E in l)this.off(E,u,l[E]);return this}return u!==!1&&typeof u!="function"||(v=u,u=void 0),v===!1&&(v=gn),this.each(function(){d.event.remove(this,l,v,u)})}});var Aa=/<script|<style|<link/i,vl=/checked\s*(?:[^=]|=\s*.checked.)/i,Wr=/^\s*<!\[CDATA\[|\]\]>\s*$/g;function Ls(l,u){return z(l,"table")&&z(u.nodeType!==11?u:u.firstChild,"tr")&&d(l).children("tbody")[0]||l}function Xr(l){return l.type=(l.getAttribute("type")!==null)+"/"+l.type,l}function Ca(l){return(l.type||"").slice(0,5)==="true/"?l.type=l.type.slice(5):l.removeAttribute("type"),l}function Ra(l,u){var v,M,E,A,P,H;if(u.nodeType===1){if(Ie.hasData(l)&&(H=Ie.get(l).events))for(E in Ie.remove(u,"handle events"),H)for(v=0,M=H[E].length;v<M;v++)d.event.add(u,E,H[E][v]);O.hasData(l)&&(A=O.access(l),P=d.extend({},A),O.set(u,P))}}function Hi(l,u,v,M){u=r(u);var E,A,P,H,B,X,ie=0,de=l.length,j=de-1,ye=u[0],Ke=y(ye);if(Ke||1<de&&typeof ye=="string"&&!g.checkClone&&vl.test(ye))return l.each(function(ut){var dt=l.eq(ut);Ke&&(u[0]=ye.call(this,ut,dt.html())),Hi(dt,u,v,M)});if(de&&(A=(E=Nt(u,l[0].ownerDocument,!1,l,M)).firstChild,E.childNodes.length===1&&(E=A),A||M)){for(H=(P=d.map(we(E,"script"),Xr)).length;ie<de;ie++)B=E,ie!==j&&(B=d.clone(B,!0,!0),H&&d.merge(P,we(B,"script"))),v.call(l[ie],B,ie);if(H)for(X=P[P.length-1].ownerDocument,d.map(P,Ca),ie=0;ie<H;ie++)B=P[ie],se.test(B.type||"")&&!Ie.access(B,"globalEval")&&d.contains(X,B)&&(B.src&&(B.type||"").toLowerCase()!=="module"?d._evalUrl&&!B.noModule&&d._evalUrl(B.src,{nonce:B.nonce||B.getAttribute("nonce")},X):w(B.textContent.replace(Wr,""),B,X))}return l}function Pa(l,u,v){for(var M,E=u?d.filter(u,l):l,A=0;(M=E[A])!=null;A++)v||M.nodeType!==1||d.cleanData(we(M)),M.parentNode&&(v&&ne(M)&&vt(we(M,"script")),M.parentNode.removeChild(M));return l}d.extend({htmlPrefilter:function(l){return l},clone:function(l,u,v){var M,E,A,P,H,B,X,ie=l.cloneNode(!0),de=ne(l);if(!(g.noCloneChecked||l.nodeType!==1&&l.nodeType!==11||d.isXMLDoc(l)))for(P=we(ie),M=0,E=(A=we(l)).length;M<E;M++)H=A[M],B=P[M],(X=B.nodeName.toLowerCase())==="input"&&G.test(H.type)?B.checked=H.checked:X!=="input"&&X!=="textarea"||(B.defaultValue=H.defaultValue);if(u)if(v)for(A=A||we(l),P=P||we(ie),M=0,E=A.length;M<E;M++)Ra(A[M],P[M]);else Ra(l,ie);return 0<(P=we(ie,"script")).length&&vt(P,!de&&we(l,"script")),ie},cleanData:function(l){for(var u,v,M,E=d.event.special,A=0;(v=l[A])!==void 0;A++)if(et(v)){if(u=v[Ie.expando]){if(u.events)for(M in u.events)E[M]?d.event.remove(v,M):d.removeEvent(v,M,u.handle);v[Ie.expando]=void 0}v[O.expando]&&(v[O.expando]=void 0)}}}),d.fn.extend({detach:function(l){return Pa(this,l,!0)},remove:function(l){return Pa(this,l)},text:function(l){return Ee(this,function(u){return u===void 0?d.text(this):this.empty().each(function(){this.nodeType!==1&&this.nodeType!==11&&this.nodeType!==9||(this.textContent=u)})},null,l,arguments.length)},append:function(){return Hi(this,arguments,function(l){this.nodeType!==1&&this.nodeType!==11&&this.nodeType!==9||Ls(this,l).appendChild(l)})},prepend:function(){return Hi(this,arguments,function(l){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var u=Ls(this,l);u.insertBefore(l,u.firstChild)}})},before:function(){return Hi(this,arguments,function(l){this.parentNode&&this.parentNode.insertBefore(l,this)})},after:function(){return Hi(this,arguments,function(l){this.parentNode&&this.parentNode.insertBefore(l,this.nextSibling)})},empty:function(){for(var l,u=0;(l=this[u])!=null;u++)l.nodeType===1&&(d.cleanData(we(l,!1)),l.textContent="");return this},clone:function(l,u){return l=l!=null&&l,u=u??l,this.map(function(){return d.clone(this,l,u)})},html:function(l){return Ee(this,function(u){var v=this[0]||{},M=0,E=this.length;if(u===void 0&&v.nodeType===1)return v.innerHTML;if(typeof u=="string"&&!Aa.test(u)&&!be[(Ne.exec(u)||["",""])[1].toLowerCase()]){u=d.htmlPrefilter(u);try{for(;M<E;M++)(v=this[M]||{}).nodeType===1&&(d.cleanData(we(v,!1)),v.innerHTML=u);v=0}catch{}}v&&this.empty().append(u)},null,l,arguments.length)},replaceWith:function(){var l=[];return Hi(this,arguments,function(u){var v=this.parentNode;d.inArray(this,l)<0&&(d.cleanData(we(this)),v&&v.replaceChild(u,this))},l)}}),d.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(l,u){d.fn[l]=function(v){for(var M,E=[],A=d(v),P=A.length-1,H=0;H<=P;H++)M=H===P?this:this.clone(!0),d(A[H])[u](M),a.apply(E,M.get());return this.pushStack(E)}});var N=new RegExp("^("+Se+")(?!px)[a-z%]+$","i"),Y=/^--/,ce=function(l){var u=l.ownerDocument.defaultView;return u&&u.opener||(u=s),u.getComputedStyle(l)},Z=function(l,u,v){var M,E,A={};for(E in u)A[E]=l.style[E],l.style[E]=u[E];for(E in M=v.call(l),u)l.style[E]=A[E];return M},he=new RegExp(We.join("|"),"i");function He(l,u,v){var M,E,A,P,H=Y.test(u),B=l.style;return(v=v||ce(l))&&(P=v.getPropertyValue(u)||v[u],H&&P&&(P=P.replace(q,"$1")||void 0),P!==""||ne(l)||(P=d.style(l,u)),!g.pixelBoxStyles()&&N.test(P)&&he.test(u)&&(M=B.width,E=B.minWidth,A=B.maxWidth,B.minWidth=B.maxWidth=B.width=P,P=v.width,B.width=M,B.minWidth=E,B.maxWidth=A)),P!==void 0?P+"":P}function it(l,u){return{get:function(){if(!l())return(this.get=u).apply(this,arguments);delete this.get}}}(function(){function l(){if(X){B.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",X.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",Ae.appendChild(B).appendChild(X);var ie=s.getComputedStyle(X);v=ie.top!=="1%",H=u(ie.marginLeft)===12,X.style.right="60%",A=u(ie.right)===36,M=u(ie.width)===36,X.style.position="absolute",E=u(X.offsetWidth/3)===12,Ae.removeChild(B),X=null}}function u(ie){return Math.round(parseFloat(ie))}var v,M,E,A,P,H,B=x.createElement("div"),X=x.createElement("div");X.style&&(X.style.backgroundClip="content-box",X.cloneNode(!0).style.backgroundClip="",g.clearCloneStyle=X.style.backgroundClip==="content-box",d.extend(g,{boxSizingReliable:function(){return l(),M},pixelBoxStyles:function(){return l(),A},pixelPosition:function(){return l(),v},reliableMarginLeft:function(){return l(),H},scrollboxSize:function(){return l(),E},reliableTrDimensions:function(){var ie,de,j,ye;return P==null&&(ie=x.createElement("table"),de=x.createElement("tr"),j=x.createElement("div"),ie.style.cssText="position:absolute;left:-11111px;border-collapse:separate",de.style.cssText="box-sizing:content-box;border:1px solid",de.style.height="1px",j.style.height="9px",j.style.display="block",Ae.appendChild(ie).appendChild(de).appendChild(j),ye=s.getComputedStyle(de),P=parseInt(ye.height,10)+parseInt(ye.borderTopWidth,10)+parseInt(ye.borderBottomWidth,10)===de.offsetHeight,Ae.removeChild(ie)),P}}))})();var ot=["Webkit","Moz","ms"],lt=x.createElement("div").style,St={};function at(l){var u=d.cssProps[l]||St[l];return u||(l in lt?l:St[l]=function(v){for(var M=v[0].toUpperCase()+v.slice(1),E=ot.length;E--;)if((v=ot[E]+M)in lt)return v}(l)||l)}var yt=/^(none|table(?!-c[ea]).+)/,Vt={position:"absolute",visibility:"hidden",display:"block"},Gt={letterSpacing:"0",fontWeight:"400"};function wn(l,u,v){var M=Ce.exec(u);return M?Math.max(0,M[2]-(v||0))+(M[3]||"px"):u}function kn(l,u,v,M,E,A){var P=u==="width"?1:0,H=0,B=0,X=0;if(v===(M?"border":"content"))return 0;for(;P<4;P+=2)v==="margin"&&(X+=d.css(l,v+We[P],!0,E)),M?(v==="content"&&(B-=d.css(l,"padding"+We[P],!0,E)),v!=="margin"&&(B-=d.css(l,"border"+We[P]+"Width",!0,E))):(B+=d.css(l,"padding"+We[P],!0,E),v!=="padding"?B+=d.css(l,"border"+We[P]+"Width",!0,E):H+=d.css(l,"border"+We[P]+"Width",!0,E));return!M&&0<=A&&(B+=Math.max(0,Math.ceil(l["offset"+u[0].toUpperCase()+u.slice(1)]-A-B-H-.5))||0),B+X}function Wt(l,u,v){var M=ce(l),E=(!g.boxSizingReliable()||v)&&d.css(l,"boxSizing",!1,M)==="border-box",A=E,P=He(l,u,M),H="offset"+u[0].toUpperCase()+u.slice(1);if(N.test(P)){if(!v)return P;P="auto"}return(!g.boxSizingReliable()&&E||!g.reliableTrDimensions()&&z(l,"tr")||P==="auto"||!parseFloat(P)&&d.css(l,"display",!1,M)==="inline")&&l.getClientRects().length&&(E=d.css(l,"boxSizing",!1,M)==="border-box",(A=H in l)&&(P=l[H])),(P=parseFloat(P)||0)+kn(l,u,v||(E?"border":"content"),A,M,P)+"px"}function ct(l,u,v,M,E){return new ct.prototype.init(l,u,v,M,E)}d.extend({cssHooks:{opacity:{get:function(l,u){if(u){var v=He(l,"opacity");return v===""?"1":v}}}},cssNumber:{animationIterationCount:!0,aspectRatio:!0,borderImageSlice:!0,columnCount:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,scale:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeMiterlimit:!0,strokeOpacity:!0},cssProps:{},style:function(l,u,v,M){if(l&&l.nodeType!==3&&l.nodeType!==8&&l.style){var E,A,P,H=Fe(u),B=Y.test(u),X=l.style;if(B||(u=at(H)),P=d.cssHooks[u]||d.cssHooks[H],v===void 0)return P&&"get"in P&&(E=P.get(l,!1,M))!==void 0?E:X[u];(A=typeof v)=="string"&&(E=Ce.exec(v))&&E[1]&&(v=Be(l,u,E),A="number"),v!=null&&v==v&&(A!=="number"||B||(v+=E&&E[3]||(d.cssNumber[H]?"":"px")),g.clearCloneStyle||v!==""||u.indexOf("background")!==0||(X[u]="inherit"),P&&"set"in P&&(v=P.set(l,v,M))===void 0||(B?X.setProperty(u,v):X[u]=v))}},css:function(l,u,v,M){var E,A,P,H=Fe(u);return Y.test(u)||(u=at(H)),(P=d.cssHooks[u]||d.cssHooks[H])&&"get"in P&&(E=P.get(l,!0,v)),E===void 0&&(E=He(l,u,M)),E==="normal"&&u in Gt&&(E=Gt[u]),v===""||v?(A=parseFloat(E),v===!0||isFinite(A)?A||0:E):E}}),d.each(["height","width"],function(l,u){d.cssHooks[u]={get:function(v,M,E){if(M)return!yt.test(d.css(v,"display"))||v.getClientRects().length&&v.getBoundingClientRect().width?Wt(v,u,E):Z(v,Vt,function(){return Wt(v,u,E)})},set:function(v,M,E){var A,P=ce(v),H=!g.scrollboxSize()&&P.position==="absolute",B=(H||E)&&d.css(v,"boxSizing",!1,P)==="border-box",X=E?kn(v,u,E,B,P):0;return B&&H&&(X-=Math.ceil(v["offset"+u[0].toUpperCase()+u.slice(1)]-parseFloat(P[u])-kn(v,u,"border",!1,P)-.5)),X&&(A=Ce.exec(M))&&(A[3]||"px")!=="px"&&(v.style[u]=M,M=d.css(v,u)),wn(0,M,X)}}}),d.cssHooks.marginLeft=it(g.reliableMarginLeft,function(l,u){if(u)return(parseFloat(He(l,"marginLeft"))||l.getBoundingClientRect().left-Z(l,{marginLeft:0},function(){return l.getBoundingClientRect().left}))+"px"}),d.each({margin:"",padding:"",border:"Width"},function(l,u){d.cssHooks[l+u]={expand:function(v){for(var M=0,E={},A=typeof v=="string"?v.split(" "):[v];M<4;M++)E[l+We[M]+u]=A[M]||A[M-2]||A[0];return E}},l!=="margin"&&(d.cssHooks[l+u].set=wn)}),d.fn.extend({css:function(l,u){return Ee(this,function(v,M,E){var A,P,H={},B=0;if(Array.isArray(M)){for(A=ce(v),P=M.length;B<P;B++)H[M[B]]=d.css(v,M[B],!1,A);return H}return E!==void 0?d.style(v,M,E):d.css(v,M)},l,u,1<arguments.length)}}),((d.Tween=ct).prototype={constructor:ct,init:function(l,u,v,M,E,A){this.elem=l,this.prop=v,this.easing=E||d.easing._default,this.options=u,this.start=this.now=this.cur(),this.end=M,this.unit=A||(d.cssNumber[v]?"":"px")},cur:function(){var l=ct.propHooks[this.prop];return l&&l.get?l.get(this):ct.propHooks._default.get(this)},run:function(l){var u,v=ct.propHooks[this.prop];return this.options.duration?this.pos=u=d.easing[this.easing](l,this.options.duration*l,0,1,this.options.duration):this.pos=u=l,this.now=(this.end-this.start)*u+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),v&&v.set?v.set(this):ct.propHooks._default.set(this),this}}).init.prototype=ct.prototype,(ct.propHooks={_default:{get:function(l){var u;return l.elem.nodeType!==1||l.elem[l.prop]!=null&&l.elem.style[l.prop]==null?l.elem[l.prop]:(u=d.css(l.elem,l.prop,""))&&u!=="auto"?u:0},set:function(l){d.fx.step[l.prop]?d.fx.step[l.prop](l):l.elem.nodeType!==1||!d.cssHooks[l.prop]&&l.elem.style[at(l.prop)]==null?l.elem[l.prop]=l.now:d.style(l.elem,l.prop,l.now+l.unit)}}}).scrollTop=ct.propHooks.scrollLeft={set:function(l){l.elem.nodeType&&l.elem.parentNode&&(l.elem[l.prop]=l.now)}},d.easing={linear:function(l){return l},swing:function(l){return .5-Math.cos(l*Math.PI)/2},_default:"swing"},d.fx=ct.prototype.init,d.fx.step={};var li,zt,Un,Is,cr=/^(?:toggle|show|hide)$/,Ds=/queueHooks$/;function an(){zt&&(x.hidden===!1&&s.requestAnimationFrame?s.requestAnimationFrame(an):s.setTimeout(an,d.fx.interval),d.fx.tick())}function ci(){return s.setTimeout(function(){li=void 0}),li=Date.now()}function Vi(l,u){var v,M=0,E={height:l};for(u=u?1:0;M<4;M+=2-u)E["margin"+(v=We[M])]=E["padding"+v]=l;return u&&(E.opacity=E.width=l),E}function vn(l,u,v){for(var M,E=(An.tweeners[u]||[]).concat(An.tweeners["*"]),A=0,P=E.length;A<P;A++)if(M=E[A].call(v,u,l))return M}function An(l,u,v){var M,E,A=0,P=An.prefilters.length,H=d.Deferred().always(function(){delete B.elem}),B=function(){if(E)return!1;for(var de=li||ci(),j=Math.max(0,X.startTime+X.duration-de),ye=1-(j/X.duration||0),Ke=0,ut=X.tweens.length;Ke<ut;Ke++)X.tweens[Ke].run(ye);return H.notifyWith(l,[X,ye,j]),ye<1&&ut?j:(ut||H.notifyWith(l,[X,1,0]),H.resolveWith(l,[X]),!1)},X=H.promise({elem:l,props:d.extend({},u),opts:d.extend(!0,{specialEasing:{},easing:d.easing._default},v),originalProperties:u,originalOptions:v,startTime:li||ci(),duration:v.duration,tweens:[],createTween:function(de,j){var ye=d.Tween(l,X.opts,de,j,X.opts.specialEasing[de]||X.opts.easing);return X.tweens.push(ye),ye},stop:function(de){var j=0,ye=de?X.tweens.length:0;if(E)return this;for(E=!0;j<ye;j++)X.tweens[j].run(1);return de?(H.notifyWith(l,[X,1,0]),H.resolveWith(l,[X,de])):H.rejectWith(l,[X,de]),this}}),ie=X.props;for(!function(de,j){var ye,Ke,ut,dt,Zt;for(ye in de)if(ut=j[Ke=Fe(ye)],dt=de[ye],Array.isArray(dt)&&(ut=dt[1],dt=de[ye]=dt[0]),ye!==Ke&&(de[Ke]=dt,delete de[ye]),(Zt=d.cssHooks[Ke])&&"expand"in Zt)for(ye in dt=Zt.expand(dt),delete de[Ke],dt)ye in de||(de[ye]=dt[ye],j[ye]=ut);else j[Ke]=ut}(ie,X.opts.specialEasing);A<P;A++)if(M=An.prefilters[A].call(X,l,ie,X.opts))return y(M.stop)&&(d._queueHooks(X.elem,X.opts.queue).stop=M.stop.bind(M)),M;return d.map(ie,vn,X),y(X.opts.start)&&X.opts.start.call(l,X),X.progress(X.opts.progress).done(X.opts.done,X.opts.complete).fail(X.opts.fail).always(X.opts.always),d.fx.timer(d.extend(B,{elem:l,anim:X,queue:X.opts.queue})),X}d.Animation=d.extend(An,{tweeners:{"*":[function(l,u){var v=this.createTween(l,u);return Be(v.elem,l,Ce.exec(u),v),v}]},tweener:function(l,u){y(l)?(u=l,l=["*"]):l=l.match(je);for(var v,M=0,E=l.length;M<E;M++)v=l[M],An.tweeners[v]=An.tweeners[v]||[],An.tweeners[v].unshift(u)},prefilters:[function(l,u,v){var M,E,A,P,H,B,X,ie,de="width"in u||"height"in u,j=this,ye={},Ke=l.style,ut=l.nodeType&&ve(l),dt=Ie.get(l,"fxshow");for(M in v.queue||((P=d._queueHooks(l,"fx")).unqueued==null&&(P.unqueued=0,H=P.empty.fire,P.empty.fire=function(){P.unqueued||H()}),P.unqueued++,j.always(function(){j.always(function(){P.unqueued--,d.queue(l,"fx").length||P.empty.fire()})})),u)if(E=u[M],cr.test(E)){if(delete u[M],A=A||E==="toggle",E===(ut?"hide":"show")){if(E!=="show"||!dt||dt[M]===void 0)continue;ut=!0}ye[M]=dt&&dt[M]||d.style(l,M)}if((B=!d.isEmptyObject(u))||!d.isEmptyObject(ye))for(M in de&&l.nodeType===1&&(v.overflow=[Ke.overflow,Ke.overflowX,Ke.overflowY],(X=dt&&dt.display)==null&&(X=Ie.get(l,"display")),(ie=d.css(l,"display"))==="none"&&(X?ie=X:(De([l],!0),X=l.style.display||X,ie=d.css(l,"display"),De([l]))),(ie==="inline"||ie==="inline-block"&&X!=null)&&d.css(l,"float")==="none"&&(B||(j.done(function(){Ke.display=X}),X==null&&(ie=Ke.display,X=ie==="none"?"":ie)),Ke.display="inline-block")),v.overflow&&(Ke.overflow="hidden",j.always(function(){Ke.overflow=v.overflow[0],Ke.overflowX=v.overflow[1],Ke.overflowY=v.overflow[2]})),B=!1,ye)B||(dt?"hidden"in dt&&(ut=dt.hidden):dt=Ie.access(l,"fxshow",{display:X}),A&&(dt.hidden=!ut),ut&&De([l],!0),j.done(function(){for(M in ut||De([l]),Ie.remove(l,"fxshow"),ye)d.style(l,M,ye[M])})),B=vn(ut?dt[M]:0,M,j),M in dt||(dt[M]=B.start,ut&&(B.end=B.start,B.start=0))}],prefilter:function(l,u){u?An.prefilters.unshift(l):An.prefilters.push(l)}}),d.speed=function(l,u,v){var M=l&&typeof l=="object"?d.extend({},l):{complete:v||!v&&u||y(l)&&l,duration:l,easing:v&&u||u&&!y(u)&&u};return d.fx.off?M.duration=0:typeof M.duration!="number"&&(M.duration in d.fx.speeds?M.duration=d.fx.speeds[M.duration]:M.duration=d.fx.speeds._default),M.queue!=null&&M.queue!==!0||(M.queue="fx"),M.old=M.complete,M.complete=function(){y(M.old)&&M.old.call(this),M.queue&&d.dequeue(this,M.queue)},M},d.fn.extend({fadeTo:function(l,u,v,M){return this.filter(ve).css("opacity",0).show().end().animate({opacity:u},l,v,M)},animate:function(l,u,v,M){var E=d.isEmptyObject(l),A=d.speed(u,v,M),P=function(){var H=An(this,d.extend({},l),A);(E||Ie.get(this,"finish"))&&H.stop(!0)};return P.finish=P,E||A.queue===!1?this.each(P):this.queue(A.queue,P)},stop:function(l,u,v){var M=function(E){var A=E.stop;delete E.stop,A(v)};return typeof l!="string"&&(v=u,u=l,l=void 0),u&&this.queue(l||"fx",[]),this.each(function(){var E=!0,A=l!=null&&l+"queueHooks",P=d.timers,H=Ie.get(this);if(A)H[A]&&H[A].stop&&M(H[A]);else for(A in H)H[A]&&H[A].stop&&Ds.test(A)&&M(H[A]);for(A=P.length;A--;)P[A].elem!==this||l!=null&&P[A].queue!==l||(P[A].anim.stop(v),E=!1,P.splice(A,1));!E&&v||d.dequeue(this,l)})},finish:function(l){return l!==!1&&(l=l||"fx"),this.each(function(){var u,v=Ie.get(this),M=v[l+"queue"],E=v[l+"queueHooks"],A=d.timers,P=M?M.length:0;for(v.finish=!0,d.queue(this,l,[]),E&&E.stop&&E.stop.call(this,!0),u=A.length;u--;)A[u].elem===this&&A[u].queue===l&&(A[u].anim.stop(!0),A.splice(u,1));for(u=0;u<P;u++)M[u]&&M[u].finish&&M[u].finish.call(this);delete v.finish})}}),d.each(["toggle","show","hide"],function(l,u){var v=d.fn[u];d.fn[u]=function(M,E,A){return M==null||typeof M=="boolean"?v.apply(this,arguments):this.animate(Vi(u,!0),M,E,A)}}),d.each({slideDown:Vi("show"),slideUp:Vi("hide"),slideToggle:Vi("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(l,u){d.fn[l]=function(v,M,E){return this.animate(u,v,M,E)}}),d.timers=[],d.fx.tick=function(){var l,u=0,v=d.timers;for(li=Date.now();u<v.length;u++)(l=v[u])()||v[u]!==l||v.splice(u--,1);v.length||d.fx.stop(),li=void 0},d.fx.timer=function(l){d.timers.push(l),d.fx.start()},d.fx.interval=13,d.fx.start=function(){zt||(zt=!0,an())},d.fx.stop=function(){zt=null},d.fx.speeds={slow:600,fast:200,_default:400},d.fn.delay=function(l,u){return l=d.fx&&d.fx.speeds[l]||l,u=u||"fx",this.queue(u,function(v,M){var E=s.setTimeout(v,l);M.stop=function(){s.clearTimeout(E)}})},Un=x.createElement("input"),Is=x.createElement("select").appendChild(x.createElement("option")),Un.type="checkbox",g.checkOn=Un.value!=="",g.optSelected=Is.selected,(Un=x.createElement("input")).value="t",Un.type="radio",g.radioValue=Un.value==="t";var La,Gi=d.expr.attrHandle;d.fn.extend({attr:function(l,u){return Ee(this,d.attr,l,u,1<arguments.length)},removeAttr:function(l){return this.each(function(){d.removeAttr(this,l)})}}),d.extend({attr:function(l,u,v){var M,E,A=l.nodeType;if(A!==3&&A!==8&&A!==2)return typeof l.getAttribute>"u"?d.prop(l,u,v):(A===1&&d.isXMLDoc(l)||(E=d.attrHooks[u.toLowerCase()]||(d.expr.match.bool.test(u)?La:void 0)),v!==void 0?v===null?void d.removeAttr(l,u):E&&"set"in E&&(M=E.set(l,v,u))!==void 0?M:(l.setAttribute(u,v+""),v):E&&"get"in E&&(M=E.get(l,u))!==null?M:(M=d.find.attr(l,u))==null?void 0:M)},attrHooks:{type:{set:function(l,u){if(!g.radioValue&&u==="radio"&&z(l,"input")){var v=l.value;return l.setAttribute("type",u),v&&(l.value=v),u}}}},removeAttr:function(l,u){var v,M=0,E=u&&u.match(je);if(E&&l.nodeType===1)for(;v=E[M++];)l.removeAttribute(v)}}),La={set:function(l,u,v){return u===!1?d.removeAttr(l,v):l.setAttribute(v,v),v}},d.each(d.expr.match.bool.source.match(/\w+/g),function(l,u){var v=Gi[u]||d.find.attr;Gi[u]=function(M,E,A){var P,H,B=E.toLowerCase();return A||(H=Gi[B],Gi[B]=P,P=v(M,E,A)!=null?B:null,Gi[B]=H),P}});var Wp=/^(?:input|select|textarea|button)$/i,Xp=/^(?:a|area)$/i;function hr(l){return(l.match(je)||[]).join(" ")}function ur(l){return l.getAttribute&&l.getAttribute("class")||""}function xl(l){return Array.isArray(l)?l:typeof l=="string"&&l.match(je)||[]}d.fn.extend({prop:function(l,u){return Ee(this,d.prop,l,u,1<arguments.length)},removeProp:function(l){return this.each(function(){delete this[d.propFix[l]||l]})}}),d.extend({prop:function(l,u,v){var M,E,A=l.nodeType;if(A!==3&&A!==8&&A!==2)return A===1&&d.isXMLDoc(l)||(u=d.propFix[u]||u,E=d.propHooks[u]),v!==void 0?E&&"set"in E&&(M=E.set(l,v,u))!==void 0?M:l[u]=v:E&&"get"in E&&(M=E.get(l,u))!==null?M:l[u]},propHooks:{tabIndex:{get:function(l){var u=d.find.attr(l,"tabindex");return u?parseInt(u,10):Wp.test(l.nodeName)||Xp.test(l.nodeName)&&l.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),g.optSelected||(d.propHooks.selected={get:function(l){var u=l.parentNode;return u&&u.parentNode&&u.parentNode.selectedIndex,null},set:function(l){var u=l.parentNode;u&&(u.selectedIndex,u.parentNode&&u.parentNode.selectedIndex)}}),d.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){d.propFix[this.toLowerCase()]=this}),d.fn.extend({addClass:function(l){var u,v,M,E,A,P;return y(l)?this.each(function(H){d(this).addClass(l.call(this,H,ur(this)))}):(u=xl(l)).length?this.each(function(){if(M=ur(this),v=this.nodeType===1&&" "+hr(M)+" "){for(A=0;A<u.length;A++)E=u[A],v.indexOf(" "+E+" ")<0&&(v+=E+" ");P=hr(v),M!==P&&this.setAttribute("class",P)}}):this},removeClass:function(l){var u,v,M,E,A,P;return y(l)?this.each(function(H){d(this).removeClass(l.call(this,H,ur(this)))}):arguments.length?(u=xl(l)).length?this.each(function(){if(M=ur(this),v=this.nodeType===1&&" "+hr(M)+" "){for(A=0;A<u.length;A++)for(E=u[A];-1<v.indexOf(" "+E+" ");)v=v.replace(" "+E+" "," ");P=hr(v),M!==P&&this.setAttribute("class",P)}}):this:this.attr("class","")},toggleClass:function(l,u){var v,M,E,A,P=typeof l,H=P==="string"||Array.isArray(l);return y(l)?this.each(function(B){d(this).toggleClass(l.call(this,B,ur(this),u),u)}):typeof u=="boolean"&&H?u?this.addClass(l):this.removeClass(l):(v=xl(l),this.each(function(){if(H)for(A=d(this),E=0;E<v.length;E++)M=v[E],A.hasClass(M)?A.removeClass(M):A.addClass(M);else l!==void 0&&P!=="boolean"||((M=ur(this))&&Ie.set(this,"__className__",M),this.setAttribute&&this.setAttribute("class",M||l===!1?"":Ie.get(this,"__className__")||""))}))},hasClass:function(l){var u,v,M=0;for(u=" "+l+" ";v=this[M++];)if(v.nodeType===1&&-1<(" "+hr(ur(v))+" ").indexOf(u))return!0;return!1}});var qp=/\r/g;d.fn.extend({val:function(l){var u,v,M,E=this[0];return arguments.length?(M=y(l),this.each(function(A){var P;this.nodeType===1&&((P=M?l.call(this,A,d(this).val()):l)==null?P="":typeof P=="number"?P+="":Array.isArray(P)&&(P=d.map(P,function(H){return H==null?"":H+""})),(u=d.valHooks[this.type]||d.valHooks[this.nodeName.toLowerCase()])&&"set"in u&&u.set(this,P,"value")!==void 0||(this.value=P))})):E?(u=d.valHooks[E.type]||d.valHooks[E.nodeName.toLowerCase()])&&"get"in u&&(v=u.get(E,"value"))!==void 0?v:typeof(v=E.value)=="string"?v.replace(qp,""):v??"":void 0}}),d.extend({valHooks:{option:{get:function(l){var u=d.find.attr(l,"value");return u??hr(d.text(l))}},select:{get:function(l){var u,v,M,E=l.options,A=l.selectedIndex,P=l.type==="select-one",H=P?null:[],B=P?A+1:E.length;for(M=A<0?B:P?A:0;M<B;M++)if(((v=E[M]).selected||M===A)&&!v.disabled&&(!v.parentNode.disabled||!z(v.parentNode,"optgroup"))){if(u=d(v).val(),P)return u;H.push(u)}return H},set:function(l,u){for(var v,M,E=l.options,A=d.makeArray(u),P=E.length;P--;)((M=E[P]).selected=-1<d.inArray(d.valHooks.option.get(M),A))&&(v=!0);return v||(l.selectedIndex=-1),A}}}}),d.each(["radio","checkbox"],function(){d.valHooks[this]={set:function(l,u){if(Array.isArray(u))return l.checked=-1<d.inArray(d(l).val(),u)}},g.checkOn||(d.valHooks[this].get=function(l){return l.getAttribute("value")===null?"on":l.value})});var Us=s.location,Wh={guid:Date.now()},Ml=/\?/;d.parseXML=function(l){var u,v;if(!l||typeof l!="string")return null;try{u=new s.DOMParser().parseFromString(l,"text/xml")}catch{}return v=u&&u.getElementsByTagName("parsererror")[0],u&&!v||d.error("Invalid XML: "+(v?d.map(v.childNodes,function(M){return M.textContent}).join(`
`):l)),u};var Xh=/^(?:focusinfocus|focusoutblur)$/,qh=function(l){l.stopPropagation()};d.extend(d.event,{trigger:function(l,u,v,M){var E,A,P,H,B,X,ie,de,j=[v||x],ye=f.call(l,"type")?l.type:l,Ke=f.call(l,"namespace")?l.namespace.split("."):[];if(A=de=P=v=v||x,v.nodeType!==3&&v.nodeType!==8&&!Xh.test(ye+d.event.triggered)&&(-1<ye.indexOf(".")&&(ye=(Ke=ye.split(".")).shift(),Ke.sort()),B=ye.indexOf(":")<0&&"on"+ye,(l=l[d.expando]?l:new d.Event(ye,typeof l=="object"&&l)).isTrigger=M?2:3,l.namespace=Ke.join("."),l.rnamespace=l.namespace?new RegExp("(^|\\.)"+Ke.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,l.result=void 0,l.target||(l.target=v),u=u==null?[l]:d.makeArray(u,[l]),ie=d.event.special[ye]||{},M||!ie.trigger||ie.trigger.apply(v,u)!==!1)){if(!M&&!ie.noBubble&&!b(v)){for(H=ie.delegateType||ye,Xh.test(H+ye)||(A=A.parentNode);A;A=A.parentNode)j.push(A),P=A;P===(v.ownerDocument||x)&&j.push(P.defaultView||P.parentWindow||s)}for(E=0;(A=j[E++])&&!l.isPropagationStopped();)de=A,l.type=1<E?H:ie.bindType||ye,(X=(Ie.get(A,"events")||Object.create(null))[l.type]&&Ie.get(A,"handle"))&&X.apply(A,u),(X=B&&A[B])&&X.apply&&et(A)&&(l.result=X.apply(A,u),l.result===!1&&l.preventDefault());return l.type=ye,M||l.isDefaultPrevented()||ie._default&&ie._default.apply(j.pop(),u)!==!1||!et(v)||B&&y(v[ye])&&!b(v)&&((P=v[B])&&(v[B]=null),d.event.triggered=ye,l.isPropagationStopped()&&de.addEventListener(ye,qh),v[ye](),l.isPropagationStopped()&&de.removeEventListener(ye,qh),d.event.triggered=void 0,P&&(v[B]=P)),l.result}},simulate:function(l,u,v){var M=d.extend(new d.Event,v,{type:l,isSimulated:!0});d.event.trigger(M,null,u)}}),d.fn.extend({trigger:function(l,u){return this.each(function(){d.event.trigger(l,u,this)})},triggerHandler:function(l,u){var v=this[0];if(v)return d.event.trigger(l,u,v,!0)}});var Yp=/\[\]$/,Yh=/\r?\n/g,jp=/^(?:submit|button|image|reset|file)$/i,Zp=/^(?:input|select|textarea|keygen)/i;function bl(l,u,v,M){var E;if(Array.isArray(u))d.each(u,function(A,P){v||Yp.test(l)?M(l,P):bl(l+"["+(typeof P=="object"&&P!=null?A:"")+"]",P,v,M)});else if(v||S(u)!=="object")M(l,u);else for(E in u)bl(l+"["+E+"]",u[E],v,M)}d.param=function(l,u){var v,M=[],E=function(A,P){var H=y(P)?P():P;M[M.length]=encodeURIComponent(A)+"="+encodeURIComponent(H??"")};if(l==null)return"";if(Array.isArray(l)||l.jquery&&!d.isPlainObject(l))d.each(l,function(){E(this.name,this.value)});else for(v in l)bl(v,l[v],u,E);return M.join("&")},d.fn.extend({serialize:function(){return d.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var l=d.prop(this,"elements");return l?d.makeArray(l):this}).filter(function(){var l=this.type;return this.name&&!d(this).is(":disabled")&&Zp.test(this.nodeName)&&!jp.test(l)&&(this.checked||!G.test(l))}).map(function(l,u){var v=d(this).val();return v==null?null:Array.isArray(v)?d.map(v,function(M){return{name:u.name,value:M.replace(Yh,`\r
`)}}):{name:u.name,value:v.replace(Yh,`\r
`)}}).get()}});var Jp=/%20/g,$p=/#.*$/,Kp=/([?&])_=[^&]*/,Qp=/^(.*?):[ \t]*([^\r\n]*)$/gm,em=/^(?:GET|HEAD)$/,tm=/^\/\//,jh={},Sl={},Zh="*/".concat("*"),El=x.createElement("a");function Jh(l){return function(u,v){typeof u!="string"&&(v=u,u="*");var M,E=0,A=u.toLowerCase().match(je)||[];if(y(v))for(;M=A[E++];)M[0]==="+"?(M=M.slice(1)||"*",(l[M]=l[M]||[]).unshift(v)):(l[M]=l[M]||[]).push(v)}}function $h(l,u,v,M){var E={},A=l===Sl;function P(H){var B;return E[H]=!0,d.each(l[H]||[],function(X,ie){var de=ie(u,v,M);return typeof de!="string"||A||E[de]?A?!(B=de):void 0:(u.dataTypes.unshift(de),P(de),!1)}),B}return P(u.dataTypes[0])||!E["*"]&&P("*")}function Tl(l,u){var v,M,E=d.ajaxSettings.flatOptions||{};for(v in u)u[v]!==void 0&&((E[v]?l:M||(M={}))[v]=u[v]);return M&&d.extend(!0,l,M),l}El.href=Us.href,d.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Us.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Us.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Zh,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":d.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(l,u){return u?Tl(Tl(l,d.ajaxSettings),u):Tl(d.ajaxSettings,l)},ajaxPrefilter:Jh(jh),ajaxTransport:Jh(Sl),ajax:function(l,u){typeof l=="object"&&(u=l,l=void 0),u=u||{};var v,M,E,A,P,H,B,X,ie,de,j=d.ajaxSetup({},u),ye=j.context||j,Ke=j.context&&(ye.nodeType||ye.jquery)?d(ye):d.event,ut=d.Deferred(),dt=d.Callbacks("once memory"),Zt=j.statusCode||{},un={},hi={},ui="canceled",wt={readyState:0,getResponseHeader:function(Ct){var qt;if(B){if(!A)for(A={};qt=Qp.exec(E);)A[qt[1].toLowerCase()+" "]=(A[qt[1].toLowerCase()+" "]||[]).concat(qt[2]);qt=A[Ct.toLowerCase()+" "]}return qt==null?null:qt.join(", ")},getAllResponseHeaders:function(){return B?E:null},setRequestHeader:function(Ct,qt){return B==null&&(Ct=hi[Ct.toLowerCase()]=hi[Ct.toLowerCase()]||Ct,un[Ct]=qt),this},overrideMimeType:function(Ct){return B==null&&(j.mimeType=Ct),this},statusCode:function(Ct){var qt;if(Ct)if(B)wt.always(Ct[wt.status]);else for(qt in Ct)Zt[qt]=[Zt[qt],Ct[qt]];return this},abort:function(Ct){var qt=Ct||ui;return v&&v.abort(qt),dr(0,qt),this}};if(ut.promise(wt),j.url=((l||j.url||Us.href)+"").replace(tm,Us.protocol+"//"),j.type=u.method||u.type||j.method||j.type,j.dataTypes=(j.dataType||"*").toLowerCase().match(je)||[""],j.crossDomain==null){H=x.createElement("a");try{H.href=j.url,H.href=H.href,j.crossDomain=El.protocol+"//"+El.host!=H.protocol+"//"+H.host}catch{j.crossDomain=!0}}if(j.data&&j.processData&&typeof j.data!="string"&&(j.data=d.param(j.data,j.traditional)),$h(jh,j,u,wt),B)return wt;for(ie in(X=d.event&&j.global)&&d.active++==0&&d.event.trigger("ajaxStart"),j.type=j.type.toUpperCase(),j.hasContent=!em.test(j.type),M=j.url.replace($p,""),j.hasContent?j.data&&j.processData&&(j.contentType||"").indexOf("application/x-www-form-urlencoded")===0&&(j.data=j.data.replace(Jp,"+")):(de=j.url.slice(M.length),j.data&&(j.processData||typeof j.data=="string")&&(M+=(Ml.test(M)?"&":"?")+j.data,delete j.data),j.cache===!1&&(M=M.replace(Kp,"$1"),de=(Ml.test(M)?"&":"?")+"_="+Wh.guid+++de),j.url=M+de),j.ifModified&&(d.lastModified[M]&&wt.setRequestHeader("If-Modified-Since",d.lastModified[M]),d.etag[M]&&wt.setRequestHeader("If-None-Match",d.etag[M])),(j.data&&j.hasContent&&j.contentType!==!1||u.contentType)&&wt.setRequestHeader("Content-Type",j.contentType),wt.setRequestHeader("Accept",j.dataTypes[0]&&j.accepts[j.dataTypes[0]]?j.accepts[j.dataTypes[0]]+(j.dataTypes[0]!=="*"?", "+Zh+"; q=0.01":""):j.accepts["*"]),j.headers)wt.setRequestHeader(ie,j.headers[ie]);if(j.beforeSend&&(j.beforeSend.call(ye,wt,j)===!1||B))return wt.abort();if(ui="abort",dt.add(j.complete),wt.done(j.success),wt.fail(j.error),v=$h(Sl,j,u,wt)){if(wt.readyState=1,X&&Ke.trigger("ajaxSend",[wt,j]),B)return wt;j.async&&0<j.timeout&&(P=s.setTimeout(function(){wt.abort("timeout")},j.timeout));try{B=!1,v.send(un,dr)}catch(Ct){if(B)throw Ct;dr(-1,Ct)}}else dr(-1,"No Transport");function dr(Ct,qt,Os,Al){var di,Fs,bi,Wi,qr,qn=qt;B||(B=!0,P&&s.clearTimeout(P),v=void 0,E=Al||"",wt.readyState=0<Ct?4:0,di=200<=Ct&&Ct<300||Ct===304,Os&&(Wi=function(dn,nn,Cn){for(var Xi,Rn,rt,Jt,$t=dn.contents,kt=dn.dataTypes;kt[0]==="*";)kt.shift(),Xi===void 0&&(Xi=dn.mimeType||nn.getResponseHeader("Content-Type"));if(Xi){for(Rn in $t)if($t[Rn]&&$t[Rn].test(Xi)){kt.unshift(Rn);break}}if(kt[0]in Cn)rt=kt[0];else{for(Rn in Cn){if(!kt[0]||dn.converters[Rn+" "+kt[0]]){rt=Rn;break}Jt||(Jt=Rn)}rt=rt||Jt}if(rt)return rt!==kt[0]&&kt.unshift(rt),Cn[rt]}(j,wt,Os)),!di&&-1<d.inArray("script",j.dataTypes)&&d.inArray("json",j.dataTypes)<0&&(j.converters["text script"]=function(){}),Wi=function(dn,nn,Cn,Xi){var Rn,rt,Jt,$t,kt,fi={},Yr=dn.dataTypes.slice();if(Yr[1])for(Jt in dn.converters)fi[Jt.toLowerCase()]=dn.converters[Jt];for(rt=Yr.shift();rt;)if(dn.responseFields[rt]&&(Cn[dn.responseFields[rt]]=nn),!kt&&Xi&&dn.dataFilter&&(nn=dn.dataFilter(nn,dn.dataType)),kt=rt,rt=Yr.shift()){if(rt==="*")rt=kt;else if(kt!=="*"&&kt!==rt){if(!(Jt=fi[kt+" "+rt]||fi["* "+rt])){for(Rn in fi)if(($t=Rn.split(" "))[1]===rt&&(Jt=fi[kt+" "+$t[0]]||fi["* "+$t[0]])){Jt===!0?Jt=fi[Rn]:fi[Rn]!==!0&&(rt=$t[0],Yr.unshift($t[1]));break}}if(Jt!==!0)if(Jt&&dn.throws)nn=Jt(nn);else try{nn=Jt(nn)}catch(Ia){return{state:"parsererror",error:Jt?Ia:"No conversion from "+kt+" to "+rt}}}}return{state:"success",data:nn}}(j,Wi,wt,di),di?(j.ifModified&&((qr=wt.getResponseHeader("Last-Modified"))&&(d.lastModified[M]=qr),(qr=wt.getResponseHeader("etag"))&&(d.etag[M]=qr)),Ct===204||j.type==="HEAD"?qn="nocontent":Ct===304?qn="notmodified":(qn=Wi.state,Fs=Wi.data,di=!(bi=Wi.error))):(bi=qn,!Ct&&qn||(qn="error",Ct<0&&(Ct=0))),wt.status=Ct,wt.statusText=(qt||qn)+"",di?ut.resolveWith(ye,[Fs,qn,wt]):ut.rejectWith(ye,[wt,qn,bi]),wt.statusCode(Zt),Zt=void 0,X&&Ke.trigger(di?"ajaxSuccess":"ajaxError",[wt,j,di?Fs:bi]),dt.fireWith(ye,[wt,qn]),X&&(Ke.trigger("ajaxComplete",[wt,j]),--d.active||d.event.trigger("ajaxStop")))}return wt},getJSON:function(l,u,v){return d.get(l,u,v,"json")},getScript:function(l,u){return d.get(l,void 0,u,"script")}}),d.each(["get","post"],function(l,u){d[u]=function(v,M,E,A){return y(M)&&(A=A||E,E=M,M=void 0),d.ajax(d.extend({url:v,type:u,dataType:A,data:M,success:E},d.isPlainObject(v)&&v))}}),d.ajaxPrefilter(function(l){var u;for(u in l.headers)u.toLowerCase()==="content-type"&&(l.contentType=l.headers[u]||"")}),d._evalUrl=function(l,u,v){return d.ajax({url:l,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(M){d.globalEval(M,u,v)}})},d.fn.extend({wrapAll:function(l){var u;return this[0]&&(y(l)&&(l=l.call(this[0])),u=d(l,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&u.insertBefore(this[0]),u.map(function(){for(var v=this;v.firstElementChild;)v=v.firstElementChild;return v}).append(this)),this},wrapInner:function(l){return y(l)?this.each(function(u){d(this).wrapInner(l.call(this,u))}):this.each(function(){var u=d(this),v=u.contents();v.length?v.wrapAll(l):u.append(l)})},wrap:function(l){var u=y(l);return this.each(function(v){d(this).wrapAll(u?l.call(this,v):l)})},unwrap:function(l){return this.parent(l).not("body").each(function(){d(this).replaceWith(this.childNodes)}),this}}),d.expr.pseudos.hidden=function(l){return!d.expr.pseudos.visible(l)},d.expr.pseudos.visible=function(l){return!!(l.offsetWidth||l.offsetHeight||l.getClientRects().length)},d.ajaxSettings.xhr=function(){try{return new s.XMLHttpRequest}catch{}};var nm={0:200,1223:204},Ns=d.ajaxSettings.xhr();g.cors=!!Ns&&"withCredentials"in Ns,g.ajax=Ns=!!Ns,d.ajaxTransport(function(l){var u,v;if(g.cors||Ns&&!l.crossDomain)return{send:function(M,E){var A,P=l.xhr();if(P.open(l.type,l.url,l.async,l.username,l.password),l.xhrFields)for(A in l.xhrFields)P[A]=l.xhrFields[A];for(A in l.mimeType&&P.overrideMimeType&&P.overrideMimeType(l.mimeType),l.crossDomain||M["X-Requested-With"]||(M["X-Requested-With"]="XMLHttpRequest"),M)P.setRequestHeader(A,M[A]);u=function(H){return function(){u&&(u=v=P.onload=P.onerror=P.onabort=P.ontimeout=P.onreadystatechange=null,H==="abort"?P.abort():H==="error"?typeof P.status!="number"?E(0,"error"):E(P.status,P.statusText):E(nm[P.status]||P.status,P.statusText,(P.responseType||"text")!=="text"||typeof P.responseText!="string"?{binary:P.response}:{text:P.responseText},P.getAllResponseHeaders()))}},P.onload=u(),v=P.onerror=P.ontimeout=u("error"),P.onabort!==void 0?P.onabort=v:P.onreadystatechange=function(){P.readyState===4&&s.setTimeout(function(){u&&v()})},u=u("abort");try{P.send(l.hasContent&&l.data||null)}catch(H){if(u)throw H}},abort:function(){u&&u()}}}),d.ajaxPrefilter(function(l){l.crossDomain&&(l.contents.script=!1)}),d.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(l){return d.globalEval(l),l}}}),d.ajaxPrefilter("script",function(l){l.cache===void 0&&(l.cache=!1),l.crossDomain&&(l.type="GET")}),d.ajaxTransport("script",function(l){var u,v;if(l.crossDomain||l.scriptAttrs)return{send:function(M,E){u=d("<script>").attr(l.scriptAttrs||{}).prop({charset:l.scriptCharset,src:l.url}).on("load error",v=function(A){u.remove(),v=null,A&&E(A.type==="error"?404:200,A.type)}),x.head.appendChild(u[0])},abort:function(){v&&v()}}});var Kh,Qh=[],wl=/(=)\?(?=&|$)|\?\?/;d.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var l=Qh.pop()||d.expando+"_"+Wh.guid++;return this[l]=!0,l}}),d.ajaxPrefilter("json jsonp",function(l,u,v){var M,E,A,P=l.jsonp!==!1&&(wl.test(l.url)?"url":typeof l.data=="string"&&(l.contentType||"").indexOf("application/x-www-form-urlencoded")===0&&wl.test(l.data)&&"data");if(P||l.dataTypes[0]==="jsonp")return M=l.jsonpCallback=y(l.jsonpCallback)?l.jsonpCallback():l.jsonpCallback,P?l[P]=l[P].replace(wl,"$1"+M):l.jsonp!==!1&&(l.url+=(Ml.test(l.url)?"&":"?")+l.jsonp+"="+M),l.converters["script json"]=function(){return A||d.error(M+" was not called"),A[0]},l.dataTypes[0]="json",E=s[M],s[M]=function(){A=arguments},v.always(function(){E===void 0?d(s).removeProp(M):s[M]=E,l[M]&&(l.jsonpCallback=u.jsonpCallback,Qh.push(M)),A&&y(E)&&E(A[0]),A=E=void 0}),"script"}),g.createHTMLDocument=((Kh=x.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",Kh.childNodes.length===2),d.parseHTML=function(l,u,v){return typeof l!="string"?[]:(typeof u=="boolean"&&(v=u,u=!1),u||(g.createHTMLDocument?((M=(u=x.implementation.createHTMLDocument("")).createElement("base")).href=x.location.href,u.head.appendChild(M)):u=x),A=!v&&[],(E=K.exec(l))?[u.createElement(E[1])]:(E=Nt([l],u,A),A&&A.length&&d(A).remove(),d.merge([],E.childNodes)));var M,E,A},d.fn.load=function(l,u,v){var M,E,A,P=this,H=l.indexOf(" ");return-1<H&&(M=hr(l.slice(H)),l=l.slice(0,H)),y(u)?(v=u,u=void 0):u&&typeof u=="object"&&(E="POST"),0<P.length&&d.ajax({url:l,type:E||"GET",dataType:"html",data:u}).done(function(B){A=arguments,P.html(M?d("<div>").append(d.parseHTML(B)).find(M):B)}).always(v&&function(B,X){P.each(function(){v.apply(this,A||[B.responseText,X,B])})}),this},d.expr.pseudos.animated=function(l){return d.grep(d.timers,function(u){return l===u.elem}).length},d.offset={setOffset:function(l,u,v){var M,E,A,P,H,B,X=d.css(l,"position"),ie=d(l),de={};X==="static"&&(l.style.position="relative"),H=ie.offset(),A=d.css(l,"top"),B=d.css(l,"left"),(X==="absolute"||X==="fixed")&&-1<(A+B).indexOf("auto")?(P=(M=ie.position()).top,E=M.left):(P=parseFloat(A)||0,E=parseFloat(B)||0),y(u)&&(u=u.call(l,v,d.extend({},H))),u.top!=null&&(de.top=u.top-H.top+P),u.left!=null&&(de.left=u.left-H.left+E),"using"in u?u.using.call(l,de):ie.css(de)}},d.fn.extend({offset:function(l){if(arguments.length)return l===void 0?this:this.each(function(E){d.offset.setOffset(this,l,E)});var u,v,M=this[0];return M?M.getClientRects().length?(u=M.getBoundingClientRect(),v=M.ownerDocument.defaultView,{top:u.top+v.pageYOffset,left:u.left+v.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var l,u,v,M=this[0],E={top:0,left:0};if(d.css(M,"position")==="fixed")u=M.getBoundingClientRect();else{for(u=this.offset(),v=M.ownerDocument,l=M.offsetParent||v.documentElement;l&&(l===v.body||l===v.documentElement)&&d.css(l,"position")==="static";)l=l.parentNode;l&&l!==M&&l.nodeType===1&&((E=d(l).offset()).top+=d.css(l,"borderTopWidth",!0),E.left+=d.css(l,"borderLeftWidth",!0))}return{top:u.top-E.top-d.css(M,"marginTop",!0),left:u.left-E.left-d.css(M,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var l=this.offsetParent;l&&d.css(l,"position")==="static";)l=l.offsetParent;return l||Ae})}}),d.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(l,u){var v=u==="pageYOffset";d.fn[l]=function(M){return Ee(this,function(E,A,P){var H;if(b(E)?H=E:E.nodeType===9&&(H=E.defaultView),P===void 0)return H?H[u]:E[A];H?H.scrollTo(v?H.pageXOffset:P,v?P:H.pageYOffset):E[A]=P},l,M,arguments.length)}}),d.each(["top","left"],function(l,u){d.cssHooks[u]=it(g.pixelPosition,function(v,M){if(M)return M=He(v,u),N.test(M)?d(v).position()[u]+"px":M})}),d.each({Height:"height",Width:"width"},function(l,u){d.each({padding:"inner"+l,content:u,"":"outer"+l},function(v,M){d.fn[M]=function(E,A){var P=arguments.length&&(v||typeof E!="boolean"),H=v||(E===!0||A===!0?"margin":"border");return Ee(this,function(B,X,ie){var de;return b(B)?M.indexOf("outer")===0?B["inner"+l]:B.document.documentElement["client"+l]:B.nodeType===9?(de=B.documentElement,Math.max(B.body["scroll"+l],de["scroll"+l],B.body["offset"+l],de["offset"+l],de["client"+l])):ie===void 0?d.css(B,X,H):d.style(B,X,ie,H)},u,P?E:void 0,P)}})}),d.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(l,u){d.fn[u]=function(v){return this.on(u,v)}}),d.fn.extend({bind:function(l,u,v){return this.on(l,null,u,v)},unbind:function(l,u){return this.off(l,null,u)},delegate:function(l,u,v,M){return this.on(u,l,v,M)},undelegate:function(l,u,v){return arguments.length===1?this.off(l,"**"):this.off(u,l||"**",v)},hover:function(l,u){return this.on("mouseenter",l).on("mouseleave",u||l)}}),d.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(l,u){d.fn[u]=function(v,M){return 0<arguments.length?this.on(u,null,v,M):this.trigger(u)}});var im=/^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;d.proxy=function(l,u){var v,M,E;if(typeof u=="string"&&(v=l[u],u=l,l=v),y(l))return M=i.call(arguments,2),(E=function(){return l.apply(u||this,M.concat(i.call(arguments)))}).guid=l.guid=l.guid||d.guid++,E},d.holdReady=function(l){l?d.readyWait++:d.ready(!0)},d.isArray=Array.isArray,d.parseJSON=JSON.parse,d.nodeName=z,d.isFunction=y,d.isWindow=b,d.camelCase=Fe,d.type=S,d.now=Date.now,d.isNumeric=function(l){var u=d.type(l);return(u==="number"||u==="string")&&!isNaN(l-parseFloat(l))},d.trim=function(l){return l==null?"":(l+"").replace(im,"$1")},typeof define=="function"&&define.amd&&define("jquery",[],function(){return d});var rm=s.jQuery,sm=s.$;return d.noConflict=function(l){return s.$===d&&(s.$=sm),l&&s.jQuery===d&&(s.jQuery=rm),d},typeof e>"u"&&(s.jQuery=s.$=d),d});/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ko="156",Er={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Tr={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Id=0,fc=1,Dd=2,lm=3,cm=0,th=1,Ud=2,pi=3,Oi=0,In=1,mi=2,hm=2,Di=0,Dr=1,pc=2,mc=3,gc=4,Nd=5,Ar=100,Od=101,Fd=102,_c=103,yc=104,Bd=200,zd=201,kd=202,Hd=203,nh=204,ih=205,Vd=206,Gd=207,Wd=208,Xd=209,qd=210,Yd=0,jd=1,Zd=2,No=3,Jd=4,$d=5,Kd=6,Qd=7,xa=0,ef=1,tf=2,Ui=0,nf=1,rf=2,sf=3,af=4,of=5,Ho=300,Fi=301,nr=302,na=303,ia=304,ws=306,ra=1e3,Sn=1001,sa=1002,Qt=1003,Oo=1004,um=1004,$s=1005,dm=1005,en=1006,rh=1007,fm=1007,ir=1008,pm=1008,Ni=1009,lf=1010,cf=1011,Vo=1012,sh=1013,Ii=1014,gi=1015,bs=1016,ah=1017,oh=1018,Ki=1020,hf=1021,Wn=1023,uf=1024,df=1025,Qi=1026,Or=1027,ff=1028,lh=1029,pf=1030,ch=1031,hh=1033,wo=33776,Ao=33777,Co=33778,Ro=33779,vc=35840,xc=35841,Mc=35842,bc=35843,mf=36196,Sc=37492,Ec=37496,Tc=37808,wc=37809,Ac=37810,Cc=37811,Rc=37812,Pc=37813,Lc=37814,Ic=37815,Dc=37816,Uc=37817,Nc=37818,Oc=37819,Fc=37820,Bc=37821,Po=36492,zc=36494,kc=36495,gf=36283,Hc=36284,Vc=36285,Gc=36286,_f=2200,yf=2201,vf=2202,aa=2300,oa=2301,Lo=2302,Rr=2400,Pr=2401,la=2402,Go=2500,uh=2501,mm=0,gm=1,_m=2,dh=3e3,er=3001,xf=3200,Mf=3201,sr=0,bf=1,tr="",Bt="srgb",ni="srgb-linear",Ma="display-p3",ym="display-p3-linear",vm=0,Io=7680,xm=7681,Mm=7682,bm=7683,Sm=34055,Em=34056,Tm=5386,wm=512,Am=513,Cm=514,Rm=515,Pm=516,Lm=517,Im=518,Sf=519,Ef=512,Tf=513,wf=514,Af=515,Cf=516,Rf=517,Pf=518,Lf=519,ca=35044,Dm=35048,Um=35040,Nm=35045,Om=35049,Fm=35041,Bm=35046,zm=35050,km=35042,Hm="100",Wc="300 es",Fo=1035,_i=2e3,ha=2001;class xi{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,a=i.length;r<a;r++)i[r].call(this,e);e.target=null}}}const Mn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let ru=1234567;const Ur=Math.PI/180,Ss=180/Math.PI;function Xn(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Mn[s&255]+Mn[s>>8&255]+Mn[s>>16&255]+Mn[s>>24&255]+"-"+Mn[e&255]+Mn[e>>8&255]+"-"+Mn[e>>16&15|64]+Mn[e>>24&255]+"-"+Mn[t&63|128]+Mn[t>>8&255]+"-"+Mn[t>>16&255]+Mn[t>>24&255]+Mn[n&255]+Mn[n>>8&255]+Mn[n>>16&255]+Mn[n>>24&255]).toLowerCase()}function jt(s,e,t){return Math.max(e,Math.min(t,s))}function fh(s,e){return(s%e+e)%e}function Vm(s,e,t,n,i){return n+(s-e)*(i-n)/(t-e)}function Gm(s,e,t){return s!==e?(t-s)/(e-s):0}function Ks(s,e,t){return(1-t)*s+t*e}function Wm(s,e,t,n){return Ks(s,e,1-Math.exp(-t*n))}function Xm(s,e=1){return e-Math.abs(fh(s,e*2)-e)}function qm(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function Ym(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function jm(s,e){return s+Math.floor(Math.random()*(e-s+1))}function Zm(s,e){return s+Math.random()*(e-s)}function Jm(s){return s*(.5-Math.random())}function $m(s){s!==void 0&&(ru=s);let e=ru+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Km(s){return s*Ur}function Qm(s){return s*Ss}function Xc(s){return(s&s-1)===0&&s!==0}function If(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function Bo(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function eg(s,e,t,n,i){const r=Math.cos,a=Math.sin,o=r(t/2),c=a(t/2),h=r((e+n)/2),f=a((e+n)/2),p=r((e-n)/2),m=a((e-n)/2),g=r((n-e)/2),y=a((n-e)/2);switch(i){case"XYX":s.set(o*f,c*p,c*m,o*h);break;case"YZY":s.set(c*m,o*f,c*p,o*h);break;case"ZXZ":s.set(c*p,c*m,o*f,o*h);break;case"XZX":s.set(o*f,c*y,c*g,o*h);break;case"YXY":s.set(c*g,o*f,c*y,o*h);break;case"ZYZ":s.set(c*y,c*g,o*f,o*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Bn(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function Mt(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const Df={DEG2RAD:Ur,RAD2DEG:Ss,generateUUID:Xn,clamp:jt,euclideanModulo:fh,mapLinear:Vm,inverseLerp:Gm,lerp:Ks,damp:Wm,pingpong:Xm,smoothstep:qm,smootherstep:Ym,randInt:jm,randFloat:Zm,randFloatSpread:Jm,seededRandom:$m,degToRad:Km,radToDeg:Qm,isPowerOfTwo:Xc,ceilPowerOfTwo:If,floorPowerOfTwo:Bo,setQuaternionFromProperEuler:eg,normalize:Mt,denormalize:Bn};class ge{constructor(e=0,t=0){ge.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(jt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Et{constructor(e,t,n,i,r,a,o,c,h){Et.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,a,o,c,h)}set(e,t,n,i,r,a,o,c,h){const f=this.elements;return f[0]=e,f[1]=i,f[2]=o,f[3]=t,f[4]=r,f[5]=c,f[6]=n,f[7]=a,f[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[3],c=n[6],h=n[1],f=n[4],p=n[7],m=n[2],g=n[5],y=n[8],b=i[0],x=i[3],_=i[6],w=i[1],S=i[4],T=i[7],L=i[2],d=i[5],I=i[8];return r[0]=a*b+o*w+c*L,r[3]=a*x+o*S+c*d,r[6]=a*_+o*T+c*I,r[1]=h*b+f*w+p*L,r[4]=h*x+f*S+p*d,r[7]=h*_+f*T+p*I,r[2]=m*b+g*w+y*L,r[5]=m*x+g*S+y*d,r[8]=m*_+g*T+y*I,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],c=e[6],h=e[7],f=e[8];return t*a*f-t*o*h-n*r*f+n*o*c+i*r*h-i*a*c}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],c=e[6],h=e[7],f=e[8],p=f*a-o*h,m=o*c-f*r,g=h*r-a*c,y=t*p+n*m+i*g;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const b=1/y;return e[0]=p*b,e[1]=(i*h-f*n)*b,e[2]=(o*n-i*a)*b,e[3]=m*b,e[4]=(f*t-i*c)*b,e[5]=(i*r-o*t)*b,e[6]=g*b,e[7]=(n*c-h*t)*b,e[8]=(a*t-n*r)*b,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,o){const c=Math.cos(r),h=Math.sin(r);return this.set(n*c,n*h,-n*(c*a+h*o)+a+e,-i*h,i*c,-i*(-h*a+c*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(Dl.makeScale(e,t)),this}rotate(e){return this.premultiply(Dl.makeRotation(-e)),this}translate(e,t){return this.premultiply(Dl.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Dl=new Et;function Uf(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}const tg={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function gs(s,e){return new tg[s](e)}function ua(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function Nf(){const s=ua("canvas");return s.style.display="block",s}const su={};function Qs(s){s in su||(su[s]=!0,console.warn(s))}function xs(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Ul(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const ng=new Et().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),ig=new Et().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function rg(s){return s.convertSRGBToLinear().applyMatrix3(ig)}function sg(s){return s.applyMatrix3(ng).convertLinearToSRGB()}const ag={[ni]:s=>s,[Bt]:s=>s.convertSRGBToLinear(),[Ma]:rg},og={[ni]:s=>s,[Bt]:s=>s.convertLinearToSRGB(),[Ma]:sg},jn={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(s){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!s},get workingColorSpace(){return ni},set workingColorSpace(s){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(s,e,t){if(this.enabled===!1||e===t||!e||!t)return s;const n=ag[e],i=og[t];if(n===void 0||i===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return i(n(s))},fromWorkingColorSpace:function(s,e){return this.convert(s,this.workingColorSpace,e)},toWorkingColorSpace:function(s,e){return this.convert(s,e,this.workingColorSpace)}};let jr;class ph{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{jr===void 0&&(jr=ua("canvas")),jr.width=e.width,jr.height=e.height;const n=jr.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=jr}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=ua("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let a=0;a<r.length;a++)r[a]=xs(r[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(xs(t[n]/255)*255):t[n]=xs(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let lg=0;class Lr{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:lg++}),this.uuid=Xn(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let a=0,o=i.length;a<o;a++)i[a].isDataTexture?r.push(Nl(i[a].image)):r.push(Nl(i[a]))}else r=Nl(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function Nl(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?ph.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let cg=0;class tn extends xi{constructor(e=tn.DEFAULT_IMAGE,t=tn.DEFAULT_MAPPING,n=Sn,i=Sn,r=en,a=ir,o=Wn,c=Ni,h=tn.DEFAULT_ANISOTROPY,f=tr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:cg++}),this.uuid=Xn(),this.name="",this.source=new Lr(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=h,this.format=o,this.internalFormat=null,this.type=c,this.offset=new ge(0,0),this.repeat=new ge(1,1),this.center=new ge(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Et,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof f=="string"?this.colorSpace=f:(Qs("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=f===er?Bt:tr),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Ho)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ra:e.x=e.x-Math.floor(e.x);break;case Sn:e.x=e.x<0?0:1;break;case sa:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ra:e.y=e.y-Math.floor(e.y);break;case Sn:e.y=e.y<0?0:1;break;case sa:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Qs("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===Bt?er:dh}set encoding(e){Qs("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===er?Bt:tr}}tn.DEFAULT_IMAGE=null;tn.DEFAULT_MAPPING=Ho;tn.DEFAULT_ANISOTROPY=1;class Ot{constructor(e=0,t=0,n=0,i=1){Ot.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const c=e.elements,h=c[0],f=c[4],p=c[8],m=c[1],g=c[5],y=c[9],b=c[2],x=c[6],_=c[10];if(Math.abs(f-m)<.01&&Math.abs(p-b)<.01&&Math.abs(y-x)<.01){if(Math.abs(f+m)<.1&&Math.abs(p+b)<.1&&Math.abs(y+x)<.1&&Math.abs(h+g+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const S=(h+1)/2,T=(g+1)/2,L=(_+1)/2,d=(f+m)/4,I=(p+b)/4,z=(y+x)/4;return S>T&&S>L?S<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(S),i=d/n,r=I/n):T>L?T<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(T),n=d/i,r=z/i):L<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(L),n=I/r,i=z/r),this.set(n,i,r,t),this}let w=Math.sqrt((x-y)*(x-y)+(p-b)*(p-b)+(m-f)*(m-f));return Math.abs(w)<.001&&(w=1),this.x=(x-y)/w,this.y=(p-b)/w,this.z=(m-f)/w,this.w=Math.acos((h+g+_-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Of extends xi{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Ot(0,0,e,t),this.scissorTest=!1,this.viewport=new Ot(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(Qs("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===er?Bt:tr),this.texture=new tn(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:en,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Lr(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class ii extends Of{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class Wo extends tn{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Qt,this.minFilter=Qt,this.wrapR=Sn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class hg extends ii{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Wo(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class mh extends tn{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Qt,this.minFilter=Qt,this.wrapR=Sn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ug extends ii{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new mh(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class dg extends ii{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const r=this.texture;this.texture=[];for(let a=0;a<n;a++)this.texture[a]=r.clone(),this.texture[a].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class En{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,a,o){let c=n[i+0],h=n[i+1],f=n[i+2],p=n[i+3];const m=r[a+0],g=r[a+1],y=r[a+2],b=r[a+3];if(o===0){e[t+0]=c,e[t+1]=h,e[t+2]=f,e[t+3]=p;return}if(o===1){e[t+0]=m,e[t+1]=g,e[t+2]=y,e[t+3]=b;return}if(p!==b||c!==m||h!==g||f!==y){let x=1-o;const _=c*m+h*g+f*y+p*b,w=_>=0?1:-1,S=1-_*_;if(S>Number.EPSILON){const L=Math.sqrt(S),d=Math.atan2(L,_*w);x=Math.sin(x*d)/L,o=Math.sin(o*d)/L}const T=o*w;if(c=c*x+m*T,h=h*x+g*T,f=f*x+y*T,p=p*x+b*T,x===1-o){const L=1/Math.sqrt(c*c+h*h+f*f+p*p);c*=L,h*=L,f*=L,p*=L}}e[t]=c,e[t+1]=h,e[t+2]=f,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,r,a){const o=n[i],c=n[i+1],h=n[i+2],f=n[i+3],p=r[a],m=r[a+1],g=r[a+2],y=r[a+3];return e[t]=o*y+f*p+c*g-h*m,e[t+1]=c*y+f*m+h*p-o*g,e[t+2]=h*y+f*g+o*m-c*p,e[t+3]=f*y-o*p-c*m-h*g,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,r=e._z,a=e._order,o=Math.cos,c=Math.sin,h=o(n/2),f=o(i/2),p=o(r/2),m=c(n/2),g=c(i/2),y=c(r/2);switch(a){case"XYZ":this._x=m*f*p+h*g*y,this._y=h*g*p-m*f*y,this._z=h*f*y+m*g*p,this._w=h*f*p-m*g*y;break;case"YXZ":this._x=m*f*p+h*g*y,this._y=h*g*p-m*f*y,this._z=h*f*y-m*g*p,this._w=h*f*p+m*g*y;break;case"ZXY":this._x=m*f*p-h*g*y,this._y=h*g*p+m*f*y,this._z=h*f*y+m*g*p,this._w=h*f*p-m*g*y;break;case"ZYX":this._x=m*f*p-h*g*y,this._y=h*g*p+m*f*y,this._z=h*f*y-m*g*p,this._w=h*f*p+m*g*y;break;case"YZX":this._x=m*f*p+h*g*y,this._y=h*g*p+m*f*y,this._z=h*f*y-m*g*p,this._w=h*f*p-m*g*y;break;case"XZY":this._x=m*f*p-h*g*y,this._y=h*g*p-m*f*y,this._z=h*f*y+m*g*p,this._w=h*f*p+m*g*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],o=t[5],c=t[9],h=t[2],f=t[6],p=t[10],m=n+o+p;if(m>0){const g=.5/Math.sqrt(m+1);this._w=.25/g,this._x=(f-c)*g,this._y=(r-h)*g,this._z=(a-i)*g}else if(n>o&&n>p){const g=2*Math.sqrt(1+n-o-p);this._w=(f-c)/g,this._x=.25*g,this._y=(i+a)/g,this._z=(r+h)/g}else if(o>p){const g=2*Math.sqrt(1+o-n-p);this._w=(r-h)/g,this._x=(i+a)/g,this._y=.25*g,this._z=(c+f)/g}else{const g=2*Math.sqrt(1+p-n-o);this._w=(a-i)/g,this._x=(r+h)/g,this._y=(c+f)/g,this._z=.25*g}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(jt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,a=e._w,o=t._x,c=t._y,h=t._z,f=t._w;return this._x=n*f+a*o+i*h-r*c,this._y=i*f+a*c+r*o-n*h,this._z=r*f+a*h+n*c-i*o,this._w=a*f-n*o-i*c-r*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,a=this._w;let o=a*e._w+n*e._x+i*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const c=1-o*o;if(c<=Number.EPSILON){const g=1-t;return this._w=g*a+t*this._w,this._x=g*n+t*this._x,this._y=g*i+t*this._y,this._z=g*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(c),f=Math.atan2(h,o),p=Math.sin((1-t)*f)/h,m=Math.sin(t*f)/h;return this._w=a*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=r*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class U{constructor(e=0,t=0,n=0){U.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(au.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(au.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,o=e.z,c=e.w,h=c*t+a*i-o*n,f=c*n+o*t-r*i,p=c*i+r*n-a*t,m=-r*t-a*n-o*i;return this.x=h*c+m*-r+f*-o-p*-a,this.y=f*c+m*-a+p*-r-h*-o,this.z=p*c+m*-o+h*-a-f*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,a=t.x,o=t.y,c=t.z;return this.x=i*c-r*o,this.y=r*a-n*c,this.z=n*o-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Ol.copy(this).projectOnVector(e),this.sub(Ol)}reflect(e){return this.sub(Ol.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(jt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ol=new U,au=new En;class Mi{constructor(e=new U(1/0,1/0,1/0),t=new U(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Ei.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Ei.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ei.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),Zr.copy(e.boundingBox),Zr.applyMatrix4(e.matrixWorld),this.union(Zr);else{const i=e.geometry;if(i!==void 0)if(t&&i.attributes!==void 0&&i.attributes.position!==void 0){const r=i.attributes.position;for(let a=0,o=r.count;a<o;a++)Ei.fromBufferAttribute(r,a).applyMatrix4(e.matrixWorld),this.expandByPoint(Ei)}else i.boundingBox===null&&i.computeBoundingBox(),Zr.copy(i.boundingBox),Zr.applyMatrix4(e.matrixWorld),this.union(Zr)}const n=e.children;for(let i=0,r=n.length;i<r;i++)this.expandByObject(n[i],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ei),Ei.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(zs),Fa.subVectors(this.max,zs),Jr.subVectors(e.a,zs),$r.subVectors(e.b,zs),Kr.subVectors(e.c,zs),Yi.subVectors($r,Jr),ji.subVectors(Kr,$r),mr.subVectors(Jr,Kr);let t=[0,-Yi.z,Yi.y,0,-ji.z,ji.y,0,-mr.z,mr.y,Yi.z,0,-Yi.x,ji.z,0,-ji.x,mr.z,0,-mr.x,-Yi.y,Yi.x,0,-ji.y,ji.x,0,-mr.y,mr.x,0];return!Fl(t,Jr,$r,Kr,Fa)||(t=[1,0,0,0,1,0,0,0,1],!Fl(t,Jr,$r,Kr,Fa))?!1:(Ba.crossVectors(Yi,ji),t=[Ba.x,Ba.y,Ba.z],Fl(t,Jr,$r,Kr,Fa))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Ei).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Ei).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Si[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Si[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Si[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Si[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Si[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Si[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Si[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Si[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Si),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Si=[new U,new U,new U,new U,new U,new U,new U,new U],Ei=new U,Zr=new Mi,Jr=new U,$r=new U,Kr=new U,Yi=new U,ji=new U,mr=new U,zs=new U,Fa=new U,Ba=new U,gr=new U;function Fl(s,e,t,n,i){for(let r=0,a=s.length-3;r<=a;r+=3){gr.fromArray(s,r);const o=i.x*Math.abs(gr.x)+i.y*Math.abs(gr.y)+i.z*Math.abs(gr.z),c=e.dot(gr),h=t.dot(gr),f=n.dot(gr);if(Math.max(-Math.max(c,h,f),Math.min(c,h,f))>o)return!1}return!0}const fg=new Mi,ks=new U,Bl=new U;class ri{constructor(e=new U,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):fg.setFromPoints(e).getCenter(n);let i=0;for(let r=0,a=e.length;r<a;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ks.subVectors(e,this.center);const t=ks.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(ks,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Bl.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ks.copy(e.center).add(Bl)),this.expandByPoint(ks.copy(e.center).sub(Bl))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ti=new U,zl=new U,za=new U,Zi=new U,kl=new U,ka=new U,Hl=new U;class kr{constructor(e=new U,t=new U(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ti)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ti.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ti.copy(this.origin).addScaledVector(this.direction,t),Ti.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){zl.copy(e).add(t).multiplyScalar(.5),za.copy(t).sub(e).normalize(),Zi.copy(this.origin).sub(zl);const r=e.distanceTo(t)*.5,a=-this.direction.dot(za),o=Zi.dot(this.direction),c=-Zi.dot(za),h=Zi.lengthSq(),f=Math.abs(1-a*a);let p,m,g,y;if(f>0)if(p=a*c-o,m=a*o-c,y=r*f,p>=0)if(m>=-y)if(m<=y){const b=1/f;p*=b,m*=b,g=p*(p+a*m+2*o)+m*(a*p+m+2*c)+h}else m=r,p=Math.max(0,-(a*m+o)),g=-p*p+m*(m+2*c)+h;else m=-r,p=Math.max(0,-(a*m+o)),g=-p*p+m*(m+2*c)+h;else m<=-y?(p=Math.max(0,-(-a*r+o)),m=p>0?-r:Math.min(Math.max(-r,-c),r),g=-p*p+m*(m+2*c)+h):m<=y?(p=0,m=Math.min(Math.max(-r,-c),r),g=m*(m+2*c)+h):(p=Math.max(0,-(a*r+o)),m=p>0?r:Math.min(Math.max(-r,-c),r),g=-p*p+m*(m+2*c)+h);else m=a>0?-r:r,p=Math.max(0,-(a*m+o)),g=-p*p+m*(m+2*c)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(zl).addScaledVector(za,m),g}intersectSphere(e,t){Ti.subVectors(e.center,this.origin);const n=Ti.dot(this.direction),i=Ti.dot(Ti)-n*n,r=e.radius*e.radius;if(i>r)return null;const a=Math.sqrt(r-i),o=n-a,c=n+a;return c<0?null:o<0?this.at(c,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,a,o,c;const h=1/this.direction.x,f=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),f>=0?(r=(e.min.y-m.y)*f,a=(e.max.y-m.y)*f):(r=(e.max.y-m.y)*f,a=(e.min.y-m.y)*f),n>a||r>i||((r>n||isNaN(n))&&(n=r),(a<i||isNaN(i))&&(i=a),p>=0?(o=(e.min.z-m.z)*p,c=(e.max.z-m.z)*p):(o=(e.max.z-m.z)*p,c=(e.min.z-m.z)*p),n>c||o>i)||((o>n||n!==n)&&(n=o),(c<i||i!==i)&&(i=c),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Ti)!==null}intersectTriangle(e,t,n,i,r){kl.subVectors(t,e),ka.subVectors(n,e),Hl.crossVectors(kl,ka);let a=this.direction.dot(Hl),o;if(a>0){if(i)return null;o=1}else if(a<0)o=-1,a=-a;else return null;Zi.subVectors(this.origin,e);const c=o*this.direction.dot(ka.crossVectors(Zi,ka));if(c<0)return null;const h=o*this.direction.dot(kl.cross(Zi));if(h<0||c+h>a)return null;const f=-o*Zi.dot(Hl);return f<0?null:this.at(f/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class gt{constructor(e,t,n,i,r,a,o,c,h,f,p,m,g,y,b,x){gt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,a,o,c,h,f,p,m,g,y,b,x)}set(e,t,n,i,r,a,o,c,h,f,p,m,g,y,b,x){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=r,_[5]=a,_[9]=o,_[13]=c,_[2]=h,_[6]=f,_[10]=p,_[14]=m,_[3]=g,_[7]=y,_[11]=b,_[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new gt().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Qr.setFromMatrixColumn(e,0).length(),r=1/Qr.setFromMatrixColumn(e,1).length(),a=1/Qr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),o=Math.sin(n),c=Math.cos(i),h=Math.sin(i),f=Math.cos(r),p=Math.sin(r);if(e.order==="XYZ"){const m=a*f,g=a*p,y=o*f,b=o*p;t[0]=c*f,t[4]=-c*p,t[8]=h,t[1]=g+y*h,t[5]=m-b*h,t[9]=-o*c,t[2]=b-m*h,t[6]=y+g*h,t[10]=a*c}else if(e.order==="YXZ"){const m=c*f,g=c*p,y=h*f,b=h*p;t[0]=m+b*o,t[4]=y*o-g,t[8]=a*h,t[1]=a*p,t[5]=a*f,t[9]=-o,t[2]=g*o-y,t[6]=b+m*o,t[10]=a*c}else if(e.order==="ZXY"){const m=c*f,g=c*p,y=h*f,b=h*p;t[0]=m-b*o,t[4]=-a*p,t[8]=y+g*o,t[1]=g+y*o,t[5]=a*f,t[9]=b-m*o,t[2]=-a*h,t[6]=o,t[10]=a*c}else if(e.order==="ZYX"){const m=a*f,g=a*p,y=o*f,b=o*p;t[0]=c*f,t[4]=y*h-g,t[8]=m*h+b,t[1]=c*p,t[5]=b*h+m,t[9]=g*h-y,t[2]=-h,t[6]=o*c,t[10]=a*c}else if(e.order==="YZX"){const m=a*c,g=a*h,y=o*c,b=o*h;t[0]=c*f,t[4]=b-m*p,t[8]=y*p+g,t[1]=p,t[5]=a*f,t[9]=-o*f,t[2]=-h*f,t[6]=g*p+y,t[10]=m-b*p}else if(e.order==="XZY"){const m=a*c,g=a*h,y=o*c,b=o*h;t[0]=c*f,t[4]=-p,t[8]=h*f,t[1]=m*p+b,t[5]=a*f,t[9]=g*p-y,t[2]=y*p-g,t[6]=o*f,t[10]=b*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(pg,e,mg)}lookAt(e,t,n){const i=this.elements;return Vn.subVectors(e,t),Vn.lengthSq()===0&&(Vn.z=1),Vn.normalize(),Ji.crossVectors(n,Vn),Ji.lengthSq()===0&&(Math.abs(n.z)===1?Vn.x+=1e-4:Vn.z+=1e-4,Vn.normalize(),Ji.crossVectors(n,Vn)),Ji.normalize(),Ha.crossVectors(Vn,Ji),i[0]=Ji.x,i[4]=Ha.x,i[8]=Vn.x,i[1]=Ji.y,i[5]=Ha.y,i[9]=Vn.y,i[2]=Ji.z,i[6]=Ha.z,i[10]=Vn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[4],c=n[8],h=n[12],f=n[1],p=n[5],m=n[9],g=n[13],y=n[2],b=n[6],x=n[10],_=n[14],w=n[3],S=n[7],T=n[11],L=n[15],d=i[0],I=i[4],z=i[8],C=i[12],D=i[1],le=i[5],te=i[9],q=i[13],J=i[2],re=i[6],fe=i[10],ue=i[14],pe=i[3],Te=i[7],xe=i[11],K=i[15];return r[0]=a*d+o*D+c*J+h*pe,r[4]=a*I+o*le+c*re+h*Te,r[8]=a*z+o*te+c*fe+h*xe,r[12]=a*C+o*q+c*ue+h*K,r[1]=f*d+p*D+m*J+g*pe,r[5]=f*I+p*le+m*re+g*Te,r[9]=f*z+p*te+m*fe+g*xe,r[13]=f*C+p*q+m*ue+g*K,r[2]=y*d+b*D+x*J+_*pe,r[6]=y*I+b*le+x*re+_*Te,r[10]=y*z+b*te+x*fe+_*xe,r[14]=y*C+b*q+x*ue+_*K,r[3]=w*d+S*D+T*J+L*pe,r[7]=w*I+S*le+T*re+L*Te,r[11]=w*z+S*te+T*fe+L*xe,r[15]=w*C+S*q+T*ue+L*K,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],o=e[5],c=e[9],h=e[13],f=e[2],p=e[6],m=e[10],g=e[14],y=e[3],b=e[7],x=e[11],_=e[15];return y*(+r*c*p-i*h*p-r*o*m+n*h*m+i*o*g-n*c*g)+b*(+t*c*g-t*h*m+r*a*m-i*a*g+i*h*f-r*c*f)+x*(+t*h*p-t*o*g-r*a*p+n*a*g+r*o*f-n*h*f)+_*(-i*o*f-t*c*p+t*o*m+i*a*p-n*a*m+n*c*f)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],c=e[6],h=e[7],f=e[8],p=e[9],m=e[10],g=e[11],y=e[12],b=e[13],x=e[14],_=e[15],w=p*x*h-b*m*h+b*c*g-o*x*g-p*c*_+o*m*_,S=y*m*h-f*x*h-y*c*g+a*x*g+f*c*_-a*m*_,T=f*b*h-y*p*h+y*o*g-a*b*g-f*o*_+a*p*_,L=y*p*c-f*b*c-y*o*m+a*b*m+f*o*x-a*p*x,d=t*w+n*S+i*T+r*L;if(d===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const I=1/d;return e[0]=w*I,e[1]=(b*m*r-p*x*r-b*i*g+n*x*g+p*i*_-n*m*_)*I,e[2]=(o*x*r-b*c*r+b*i*h-n*x*h-o*i*_+n*c*_)*I,e[3]=(p*c*r-o*m*r-p*i*h+n*m*h+o*i*g-n*c*g)*I,e[4]=S*I,e[5]=(f*x*r-y*m*r+y*i*g-t*x*g-f*i*_+t*m*_)*I,e[6]=(y*c*r-a*x*r-y*i*h+t*x*h+a*i*_-t*c*_)*I,e[7]=(a*m*r-f*c*r+f*i*h-t*m*h-a*i*g+t*c*g)*I,e[8]=T*I,e[9]=(y*p*r-f*b*r-y*n*g+t*b*g+f*n*_-t*p*_)*I,e[10]=(a*b*r-y*o*r+y*n*h-t*b*h-a*n*_+t*o*_)*I,e[11]=(f*o*r-a*p*r-f*n*h+t*p*h+a*n*g-t*o*g)*I,e[12]=L*I,e[13]=(f*b*i-y*p*i+y*n*m-t*b*m-f*n*x+t*p*x)*I,e[14]=(y*o*i-a*b*i-y*n*c+t*b*c+a*n*x-t*o*x)*I,e[15]=(a*p*i-f*o*i+f*n*c-t*p*c-a*n*m+t*o*m)*I,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,o=e.y,c=e.z,h=r*a,f=r*o;return this.set(h*a+n,h*o-i*c,h*c+i*o,0,h*o+i*c,f*o+n,f*c-i*a,0,h*c-i*o,f*c+i*a,r*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,a=t._y,o=t._z,c=t._w,h=r+r,f=a+a,p=o+o,m=r*h,g=r*f,y=r*p,b=a*f,x=a*p,_=o*p,w=c*h,S=c*f,T=c*p,L=n.x,d=n.y,I=n.z;return i[0]=(1-(b+_))*L,i[1]=(g+T)*L,i[2]=(y-S)*L,i[3]=0,i[4]=(g-T)*d,i[5]=(1-(m+_))*d,i[6]=(x+w)*d,i[7]=0,i[8]=(y+S)*I,i[9]=(x-w)*I,i[10]=(1-(m+b))*I,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=Qr.set(i[0],i[1],i[2]).length();const a=Qr.set(i[4],i[5],i[6]).length(),o=Qr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],Kn.copy(this);const h=1/r,f=1/a,p=1/o;return Kn.elements[0]*=h,Kn.elements[1]*=h,Kn.elements[2]*=h,Kn.elements[4]*=f,Kn.elements[5]*=f,Kn.elements[6]*=f,Kn.elements[8]*=p,Kn.elements[9]*=p,Kn.elements[10]*=p,t.setFromRotationMatrix(Kn),n.x=r,n.y=a,n.z=o,this}makePerspective(e,t,n,i,r,a,o=_i){const c=this.elements,h=2*r/(t-e),f=2*r/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i);let g,y;if(o===_i)g=-(a+r)/(a-r),y=-2*a*r/(a-r);else if(o===ha)g=-a/(a-r),y=-a*r/(a-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return c[0]=h,c[4]=0,c[8]=p,c[12]=0,c[1]=0,c[5]=f,c[9]=m,c[13]=0,c[2]=0,c[6]=0,c[10]=g,c[14]=y,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,n,i,r,a,o=_i){const c=this.elements,h=1/(t-e),f=1/(n-i),p=1/(a-r),m=(t+e)*h,g=(n+i)*f;let y,b;if(o===_i)y=(a+r)*p,b=-2*p;else if(o===ha)y=r*p,b=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return c[0]=2*h,c[4]=0,c[8]=0,c[12]=-m,c[1]=0,c[5]=2*f,c[9]=0,c[13]=-g,c[2]=0,c[6]=0,c[10]=b,c[14]=-y,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Qr=new U,Kn=new gt,pg=new U(0,0,0),mg=new U(1,1,1),Ji=new U,Ha=new U,Vn=new U,ou=new gt,lu=new En;class ba{constructor(e=0,t=0,n=0,i=ba.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],a=i[4],o=i[8],c=i[1],h=i[5],f=i[9],p=i[2],m=i[6],g=i[10];switch(t){case"XYZ":this._y=Math.asin(jt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-f,g),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-jt(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(o,g),this._z=Math.atan2(c,h)):(this._y=Math.atan2(-p,r),this._z=0);break;case"ZXY":this._x=Math.asin(jt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,g),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-jt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,g),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-a,h));break;case"YZX":this._z=Math.asin(jt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-f,h),this._y=Math.atan2(-p,r)):(this._x=0,this._y=Math.atan2(o,g));break;case"XZY":this._z=Math.asin(-jt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-f,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return ou.makeRotationFromQuaternion(e),this.setFromRotationMatrix(ou,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return lu.setFromEuler(this),this.setFromQuaternion(lu,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ba.DEFAULT_ORDER="XYZ";class Xo{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let gg=0;const cu=new U,es=new En,wi=new gt,Va=new U,Hs=new U,_g=new U,yg=new En,hu=new U(1,0,0),uu=new U(0,1,0),du=new U(0,0,1),vg={type:"added"},xg={type:"removed"};class Dt extends xi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:gg++}),this.uuid=Xn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Dt.DEFAULT_UP.clone();const e=new U,t=new ba,n=new En,i=new U(1,1,1);function r(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new gt},normalMatrix:{value:new Et}}),this.matrix=new gt,this.matrixWorld=new gt,this.matrixAutoUpdate=Dt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Dt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new Xo,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return es.setFromAxisAngle(e,t),this.quaternion.multiply(es),this}rotateOnWorldAxis(e,t){return es.setFromAxisAngle(e,t),this.quaternion.premultiply(es),this}rotateX(e){return this.rotateOnAxis(hu,e)}rotateY(e){return this.rotateOnAxis(uu,e)}rotateZ(e){return this.rotateOnAxis(du,e)}translateOnAxis(e,t){return cu.copy(e).applyQuaternion(this.quaternion),this.position.add(cu.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(hu,e)}translateY(e){return this.translateOnAxis(uu,e)}translateZ(e){return this.translateOnAxis(du,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(wi.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Va.copy(e):Va.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Hs.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?wi.lookAt(Hs,Va,this.up):wi.lookAt(Va,Hs,this.up),this.quaternion.setFromRotationMatrix(wi),i&&(wi.extractRotation(i.matrixWorld),es.setFromRotationMatrix(wi),this.quaternion.premultiply(es.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(vg)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(xg)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),wi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),wi.multiply(e.parent.matrixWorld)),e.applyMatrix4(wi),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,r=this.children.length;i<r;i++){const a=this.children[i].getObjectsByProperty(e,t);a.length>0&&(n=n.concat(a))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Hs,e,_g),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Hs,yg,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const r=t[n];(r.matrixWorldAutoUpdate===!0||e===!0)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,a=i.length;r<a;r++){const o=i[r];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(o,c){return o[c.uuid]===void 0&&(o[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const c=o.shapes;if(Array.isArray(c))for(let h=0,f=c.length;h<f;h++){const p=c[h];r(e.shapes,p)}else r(e.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let c=0,h=this.material.length;c<h;c++)o.push(r(e.materials,this.material[c]));i.material=o}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const c=this.animations[o];i.animations.push(r(e.animations,c))}}if(t){const o=a(e.geometries),c=a(e.materials),h=a(e.textures),f=a(e.images),p=a(e.shapes),m=a(e.skeletons),g=a(e.animations),y=a(e.nodes);o.length>0&&(n.geometries=o),c.length>0&&(n.materials=c),h.length>0&&(n.textures=h),f.length>0&&(n.images=f),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),g.length>0&&(n.animations=g),y.length>0&&(n.nodes=y)}return n.object=i,n;function a(o){const c=[];for(const h in o){const f=o[h];delete f.metadata,c.push(f)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Dt.DEFAULT_UP=new U(0,1,0);Dt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Dt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Qn=new U,Ai=new U,Vl=new U,Ci=new U,ts=new U,ns=new U,fu=new U,Gl=new U,Wl=new U,Xl=new U;let Ga=!1;class Fn{constructor(e=new U,t=new U,n=new U){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Qn.subVectors(e,t),i.cross(Qn);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Qn.subVectors(i,t),Ai.subVectors(n,t),Vl.subVectors(e,t);const a=Qn.dot(Qn),o=Qn.dot(Ai),c=Qn.dot(Vl),h=Ai.dot(Ai),f=Ai.dot(Vl),p=a*h-o*o;if(p===0)return r.set(-2,-1,-1);const m=1/p,g=(h*c-o*f)*m,y=(a*f-o*c)*m;return r.set(1-g-y,y,g)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Ci),Ci.x>=0&&Ci.y>=0&&Ci.x+Ci.y<=1}static getUV(e,t,n,i,r,a,o,c){return Ga===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Ga=!0),this.getInterpolation(e,t,n,i,r,a,o,c)}static getInterpolation(e,t,n,i,r,a,o,c){return this.getBarycoord(e,t,n,i,Ci),c.setScalar(0),c.addScaledVector(r,Ci.x),c.addScaledVector(a,Ci.y),c.addScaledVector(o,Ci.z),c}static isFrontFacing(e,t,n,i){return Qn.subVectors(n,t),Ai.subVectors(e,t),Qn.cross(Ai).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Qn.subVectors(this.c,this.b),Ai.subVectors(this.a,this.b),Qn.cross(Ai).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Fn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Fn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return Ga===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Ga=!0),Fn.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}getInterpolation(e,t,n,i,r){return Fn.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return Fn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Fn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let a,o;ts.subVectors(i,n),ns.subVectors(r,n),Gl.subVectors(e,n);const c=ts.dot(Gl),h=ns.dot(Gl);if(c<=0&&h<=0)return t.copy(n);Wl.subVectors(e,i);const f=ts.dot(Wl),p=ns.dot(Wl);if(f>=0&&p<=f)return t.copy(i);const m=c*p-f*h;if(m<=0&&c>=0&&f<=0)return a=c/(c-f),t.copy(n).addScaledVector(ts,a);Xl.subVectors(e,r);const g=ts.dot(Xl),y=ns.dot(Xl);if(y>=0&&g<=y)return t.copy(r);const b=g*h-c*y;if(b<=0&&h>=0&&y<=0)return o=h/(h-y),t.copy(n).addScaledVector(ns,o);const x=f*y-g*p;if(x<=0&&p-f>=0&&g-y>=0)return fu.subVectors(r,i),o=(p-f)/(p-f+(g-y)),t.copy(i).addScaledVector(fu,o);const _=1/(x+b+m);return a=b*_,o=m*_,t.copy(n).addScaledVector(ts,a).addScaledVector(ns,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Mg=0;class Tn extends xi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Mg++}),this.uuid=Xn(),this.name="",this.type="Material",this.blending=Dr,this.side=Oi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=nh,this.blendDst=ih,this.blendEquation=Ar,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=No,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Sf,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Io,this.stencilZFail=Io,this.stencilZPass=Io,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Dr&&(n.blending=this.blending),this.side!==Oi&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=this.alphaHash),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const a=[];for(const o in r){const c=r[o];delete c.metadata,a.push(c)}return a}if(t){const r=i(e.textures),a=i(e.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const Ff={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ei={h:0,s:0,l:0},Wa={h:0,s:0,l:0};function ql(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class Ye{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Bt){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,jn.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=jn.workingColorSpace){return this.r=e,this.g=t,this.b=n,jn.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=jn.workingColorSpace){if(e=fh(e,1),t=jt(t,0,1),n=jt(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,a=2*n-r;this.r=ql(a,r,e+1/3),this.g=ql(a,r,e),this.b=ql(a,r,e-1/3)}return jn.toWorkingColorSpace(this,i),this}setStyle(e,t=Bt){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const a=i[1],o=i[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],a=r.length;if(a===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Bt){const n=Ff[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=xs(e.r),this.g=xs(e.g),this.b=xs(e.b),this}copyLinearToSRGB(e){return this.r=Ul(e.r),this.g=Ul(e.g),this.b=Ul(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Bt){return jn.fromWorkingColorSpace(bn.copy(this),e),Math.round(jt(bn.r*255,0,255))*65536+Math.round(jt(bn.g*255,0,255))*256+Math.round(jt(bn.b*255,0,255))}getHexString(e=Bt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=jn.workingColorSpace){jn.fromWorkingColorSpace(bn.copy(this),t);const n=bn.r,i=bn.g,r=bn.b,a=Math.max(n,i,r),o=Math.min(n,i,r);let c,h;const f=(o+a)/2;if(o===a)c=0,h=0;else{const p=a-o;switch(h=f<=.5?p/(a+o):p/(2-a-o),a){case n:c=(i-r)/p+(i<r?6:0);break;case i:c=(r-n)/p+2;break;case r:c=(n-i)/p+4;break}c/=6}return e.h=c,e.s=h,e.l=f,e}getRGB(e,t=jn.workingColorSpace){return jn.fromWorkingColorSpace(bn.copy(this),t),e.r=bn.r,e.g=bn.g,e.b=bn.b,e}getStyle(e=Bt){jn.fromWorkingColorSpace(bn.copy(this),e);const t=bn.r,n=bn.g,i=bn.b;return e!==Bt?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(ei),ei.h+=e,ei.s+=t,ei.l+=n,this.setHSL(ei.h,ei.s,ei.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(ei),e.getHSL(Wa);const n=Ks(ei.h,Wa.h,t),i=Ks(ei.s,Wa.s,t),r=Ks(ei.l,Wa.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const bn=new Ye;Ye.NAMES=Ff;class ki extends Tn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ye(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=xa,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Li=bg();function bg(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let c=0;c<256;++c){const h=c-127;h<-27?(n[c]=0,n[c|256]=32768,i[c]=24,i[c|256]=24):h<-14?(n[c]=1024>>-h-14,n[c|256]=1024>>-h-14|32768,i[c]=-h-1,i[c|256]=-h-1):h<=15?(n[c]=h+15<<10,n[c|256]=h+15<<10|32768,i[c]=13,i[c|256]=13):h<128?(n[c]=31744,n[c|256]=64512,i[c]=24,i[c|256]=24):(n[c]=31744,n[c|256]=64512,i[c]=13,i[c|256]=13)}const r=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let c=1;c<1024;++c){let h=c<<13,f=0;for(;!(h&8388608);)h<<=1,f-=8388608;h&=-8388609,f+=947912704,r[c]=h|f}for(let c=1024;c<2048;++c)r[c]=939524096+(c-1024<<13);for(let c=1;c<31;++c)a[c]=c<<23;a[31]=1199570944,a[32]=2147483648;for(let c=33;c<63;++c)a[c]=2147483648+(c-32<<23);a[63]=3347054592;for(let c=1;c<64;++c)c!==32&&(o[c]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:a,offsetTable:o}}function On(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=jt(s,-65504,65504),Li.floatView[0]=s;const e=Li.uint32View[0],t=e>>23&511;return Li.baseTable[t]+((e&8388607)>>Li.shiftTable[t])}function Zs(s){const e=s>>10;return Li.uint32View[0]=Li.mantissaTable[Li.offsetTable[e]+(s&1023)]+Li.exponentTable[e],Li.floatView[0]}const Sg={toHalfFloat:On,fromHalfFloat:Zs},rn=new U,Xa=new ge;class Ft{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=ca,this.updateRange={offset:0,count:-1},this.gpuType=gi,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Xa.fromBufferAttribute(this,t),Xa.applyMatrix3(e),this.setXY(t,Xa.x,Xa.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)rn.fromBufferAttribute(this,t),rn.applyMatrix3(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)rn.fromBufferAttribute(this,t),rn.applyMatrix4(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)rn.fromBufferAttribute(this,t),rn.applyNormalMatrix(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)rn.fromBufferAttribute(this,t),rn.transformDirection(e),this.setXYZ(t,rn.x,rn.y,rn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Bn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=Mt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Bn(t,this.array)),t}setX(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Bn(t,this.array)),t}setY(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Bn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Bn(t,this.array)),t}setW(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array),i=Mt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array),i=Mt(i,this.array),r=Mt(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==ca&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}class Eg extends Ft{constructor(e,t,n){super(new Int8Array(e),t,n)}}class Tg extends Ft{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class wg extends Ft{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Ag extends Ft{constructor(e,t,n){super(new Int16Array(e),t,n)}}class gh extends Ft{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Cg extends Ft{constructor(e,t,n){super(new Int32Array(e),t,n)}}class _h extends Ft{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Rg extends Ft{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=Zs(this.array[e*this.itemSize]);return this.normalized&&(t=Bn(t,this.array)),t}setX(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize]=On(t),this}getY(e){let t=Zs(this.array[e*this.itemSize+1]);return this.normalized&&(t=Bn(t,this.array)),t}setY(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize+1]=On(t),this}getZ(e){let t=Zs(this.array[e*this.itemSize+2]);return this.normalized&&(t=Bn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize+2]=On(t),this}getW(e){let t=Zs(this.array[e*this.itemSize+3]);return this.normalized&&(t=Bn(t,this.array)),t}setW(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize+3]=On(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array)),this.array[e+0]=On(t),this.array[e+1]=On(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array),i=Mt(i,this.array)),this.array[e+0]=On(t),this.array[e+1]=On(n),this.array[e+2]=On(i),this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array),i=Mt(i,this.array),r=Mt(r,this.array)),this.array[e+0]=On(t),this.array[e+1]=On(n),this.array[e+2]=On(i),this.array[e+3]=On(r),this}}class Ze extends Ft{constructor(e,t,n){super(new Float32Array(e),t,n)}}class Pg extends Ft{constructor(e,t,n){super(new Float64Array(e),t,n)}}let Lg=0;const Yn=new gt,Yl=new Dt,is=new U,Gn=new Mi,Vs=new Mi,pn=new U;class Tt extends xi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Lg++}),this.uuid=Xn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Uf(e)?_h:gh)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new Et().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Yn.makeRotationFromQuaternion(e),this.applyMatrix4(Yn),this}rotateX(e){return Yn.makeRotationX(e),this.applyMatrix4(Yn),this}rotateY(e){return Yn.makeRotationY(e),this.applyMatrix4(Yn),this}rotateZ(e){return Yn.makeRotationZ(e),this.applyMatrix4(Yn),this}translate(e,t,n){return Yn.makeTranslation(e,t,n),this.applyMatrix4(Yn),this}scale(e,t,n){return Yn.makeScale(e,t,n),this.applyMatrix4(Yn),this}lookAt(e){return Yl.lookAt(e),Yl.updateMatrix(),this.applyMatrix4(Yl.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(is).negate(),this.translate(is.x,is.y,is.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Ze(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Mi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new U(-1/0,-1/0,-1/0),new U(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];Gn.setFromBufferAttribute(r),this.morphTargetsRelative?(pn.addVectors(this.boundingBox.min,Gn.min),this.boundingBox.expandByPoint(pn),pn.addVectors(this.boundingBox.max,Gn.max),this.boundingBox.expandByPoint(pn)):(this.boundingBox.expandByPoint(Gn.min),this.boundingBox.expandByPoint(Gn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new ri);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new U,1/0);return}if(e){const n=this.boundingSphere.center;if(Gn.setFromBufferAttribute(e),t)for(let r=0,a=t.length;r<a;r++){const o=t[r];Vs.setFromBufferAttribute(o),this.morphTargetsRelative?(pn.addVectors(Gn.min,Vs.min),Gn.expandByPoint(pn),pn.addVectors(Gn.max,Vs.max),Gn.expandByPoint(pn)):(Gn.expandByPoint(Vs.min),Gn.expandByPoint(Vs.max))}Gn.getCenter(n);let i=0;for(let r=0,a=e.count;r<a;r++)pn.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(pn));if(t)for(let r=0,a=t.length;r<a;r++){const o=t[r],c=this.morphTargetsRelative;for(let h=0,f=o.count;h<f;h++)pn.fromBufferAttribute(o,h),c&&(is.fromBufferAttribute(e,h),pn.add(is)),i=Math.max(i,n.distanceToSquared(pn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,r=t.normal.array,a=t.uv.array,o=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ft(new Float32Array(4*o),4));const c=this.getAttribute("tangent").array,h=[],f=[];for(let D=0;D<o;D++)h[D]=new U,f[D]=new U;const p=new U,m=new U,g=new U,y=new ge,b=new ge,x=new ge,_=new U,w=new U;function S(D,le,te){p.fromArray(i,D*3),m.fromArray(i,le*3),g.fromArray(i,te*3),y.fromArray(a,D*2),b.fromArray(a,le*2),x.fromArray(a,te*2),m.sub(p),g.sub(p),b.sub(y),x.sub(y);const q=1/(b.x*x.y-x.x*b.y);isFinite(q)&&(_.copy(m).multiplyScalar(x.y).addScaledVector(g,-b.y).multiplyScalar(q),w.copy(g).multiplyScalar(b.x).addScaledVector(m,-x.x).multiplyScalar(q),h[D].add(_),h[le].add(_),h[te].add(_),f[D].add(w),f[le].add(w),f[te].add(w))}let T=this.groups;T.length===0&&(T=[{start:0,count:n.length}]);for(let D=0,le=T.length;D<le;++D){const te=T[D],q=te.start,J=te.count;for(let re=q,fe=q+J;re<fe;re+=3)S(n[re+0],n[re+1],n[re+2])}const L=new U,d=new U,I=new U,z=new U;function C(D){I.fromArray(r,D*3),z.copy(I);const le=h[D];L.copy(le),L.sub(I.multiplyScalar(I.dot(le))).normalize(),d.crossVectors(z,le);const q=d.dot(f[D])<0?-1:1;c[D*4]=L.x,c[D*4+1]=L.y,c[D*4+2]=L.z,c[D*4+3]=q}for(let D=0,le=T.length;D<le;++D){const te=T[D],q=te.start,J=te.count;for(let re=q,fe=q+J;re<fe;re+=3)C(n[re+0]),C(n[re+1]),C(n[re+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Ft(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,g=n.count;m<g;m++)n.setXYZ(m,0,0,0);const i=new U,r=new U,a=new U,o=new U,c=new U,h=new U,f=new U,p=new U;if(e)for(let m=0,g=e.count;m<g;m+=3){const y=e.getX(m+0),b=e.getX(m+1),x=e.getX(m+2);i.fromBufferAttribute(t,y),r.fromBufferAttribute(t,b),a.fromBufferAttribute(t,x),f.subVectors(a,r),p.subVectors(i,r),f.cross(p),o.fromBufferAttribute(n,y),c.fromBufferAttribute(n,b),h.fromBufferAttribute(n,x),o.add(f),c.add(f),h.add(f),n.setXYZ(y,o.x,o.y,o.z),n.setXYZ(b,c.x,c.y,c.z),n.setXYZ(x,h.x,h.y,h.z)}else for(let m=0,g=t.count;m<g;m+=3)i.fromBufferAttribute(t,m+0),r.fromBufferAttribute(t,m+1),a.fromBufferAttribute(t,m+2),f.subVectors(a,r),p.subVectors(i,r),f.cross(p),n.setXYZ(m+0,f.x,f.y,f.z),n.setXYZ(m+1,f.x,f.y,f.z),n.setXYZ(m+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)pn.fromBufferAttribute(e,t),pn.normalize(),e.setXYZ(t,pn.x,pn.y,pn.z)}toNonIndexed(){function e(o,c){const h=o.array,f=o.itemSize,p=o.normalized,m=new h.constructor(c.length*f);let g=0,y=0;for(let b=0,x=c.length;b<x;b++){o.isInterleavedBufferAttribute?g=c[b]*o.data.stride+o.offset:g=c[b]*f;for(let _=0;_<f;_++)m[y++]=h[g++]}return new Ft(m,f,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Tt,n=this.index.array,i=this.attributes;for(const o in i){const c=i[o],h=e(c,n);t.setAttribute(o,h)}const r=this.morphAttributes;for(const o in r){const c=[],h=r[o];for(let f=0,p=h.length;f<p;f++){const m=h[f],g=e(m,n);c.push(g)}t.morphAttributes[o]=c}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,c=a.length;o<c;o++){const h=a[o];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const h in c)c[h]!==void 0&&(e[h]=c[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const h=n[c];e.data.attributes[c]=h.toJSON(e.data)}const i={};let r=!1;for(const c in this.morphAttributes){const h=this.morphAttributes[c],f=[];for(let p=0,m=h.length;p<m;p++){const g=h[p];f.push(g.toJSON(e.data))}f.length>0&&(i[c]=f,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const f=i[h];this.setAttribute(h,f.clone(t))}const r=e.morphAttributes;for(const h in r){const f=[],p=r[h];for(let m=0,g=p.length;m<g;m++)f.push(p[m].clone(t));this.morphAttributes[h]=f}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let h=0,f=a.length;h<f;h++){const p=a[h];this.addGroup(p.start,p.count,p.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const pu=new gt,_r=new kr,qa=new ri,mu=new U,rs=new U,ss=new U,as=new U,jl=new U,Ya=new U,ja=new ge,Za=new ge,Ja=new ge,gu=new U,_u=new U,yu=new U,$a=new U,Ka=new U;class _n extends Dt{constructor(e=new Tt,t=new ki){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const o=this.morphTargetInfluences;if(r&&o){Ya.set(0,0,0);for(let c=0,h=r.length;c<h;c++){const f=o[c],p=r[c];f!==0&&(jl.fromBufferAttribute(p,e),a?Ya.addScaledVector(jl,f):Ya.addScaledVector(jl.sub(t),f))}t.add(Ya)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),qa.copy(n.boundingSphere),qa.applyMatrix4(r),_r.copy(e.ray).recast(e.near),!(qa.containsPoint(_r.origin)===!1&&(_r.intersectSphere(qa,mu)===null||_r.origin.distanceToSquared(mu)>(e.far-e.near)**2))&&(pu.copy(r).invert(),_r.copy(e.ray).applyMatrix4(pu),!(n.boundingBox!==null&&_r.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,_r)))}_computeIntersections(e,t,n){let i;const r=this.geometry,a=this.material,o=r.index,c=r.attributes.position,h=r.attributes.uv,f=r.attributes.uv1,p=r.attributes.normal,m=r.groups,g=r.drawRange;if(o!==null)if(Array.isArray(a))for(let y=0,b=m.length;y<b;y++){const x=m[y],_=a[x.materialIndex],w=Math.max(x.start,g.start),S=Math.min(o.count,Math.min(x.start+x.count,g.start+g.count));for(let T=w,L=S;T<L;T+=3){const d=o.getX(T),I=o.getX(T+1),z=o.getX(T+2);i=Qa(this,_,e,n,h,f,p,d,I,z),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,g.start),b=Math.min(o.count,g.start+g.count);for(let x=y,_=b;x<_;x+=3){const w=o.getX(x),S=o.getX(x+1),T=o.getX(x+2);i=Qa(this,a,e,n,h,f,p,w,S,T),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}else if(c!==void 0)if(Array.isArray(a))for(let y=0,b=m.length;y<b;y++){const x=m[y],_=a[x.materialIndex],w=Math.max(x.start,g.start),S=Math.min(c.count,Math.min(x.start+x.count,g.start+g.count));for(let T=w,L=S;T<L;T+=3){const d=T,I=T+1,z=T+2;i=Qa(this,_,e,n,h,f,p,d,I,z),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,g.start),b=Math.min(c.count,g.start+g.count);for(let x=y,_=b;x<_;x+=3){const w=x,S=x+1,T=x+2;i=Qa(this,a,e,n,h,f,p,w,S,T),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}}}function Ig(s,e,t,n,i,r,a,o){let c;if(e.side===In?c=n.intersectTriangle(a,r,i,!0,o):c=n.intersectTriangle(i,r,a,e.side===Oi,o),c===null)return null;Ka.copy(o),Ka.applyMatrix4(s.matrixWorld);const h=t.ray.origin.distanceTo(Ka);return h<t.near||h>t.far?null:{distance:h,point:Ka.clone(),object:s}}function Qa(s,e,t,n,i,r,a,o,c,h){s.getVertexPosition(o,rs),s.getVertexPosition(c,ss),s.getVertexPosition(h,as);const f=Ig(s,e,t,n,rs,ss,as,$a);if(f){i&&(ja.fromBufferAttribute(i,o),Za.fromBufferAttribute(i,c),Ja.fromBufferAttribute(i,h),f.uv=Fn.getInterpolation($a,rs,ss,as,ja,Za,Ja,new ge)),r&&(ja.fromBufferAttribute(r,o),Za.fromBufferAttribute(r,c),Ja.fromBufferAttribute(r,h),f.uv1=Fn.getInterpolation($a,rs,ss,as,ja,Za,Ja,new ge),f.uv2=f.uv1),a&&(gu.fromBufferAttribute(a,o),_u.fromBufferAttribute(a,c),yu.fromBufferAttribute(a,h),f.normal=Fn.getInterpolation($a,rs,ss,as,gu,_u,yu,new U),f.normal.dot(n.direction)>0&&f.normal.multiplyScalar(-1));const p={a:o,b:c,c:h,normal:new U,materialIndex:0};Fn.getNormal(rs,ss,as,p.normal),f.face=p}return f}class Bi extends Tt{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const o=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const c=[],h=[],f=[],p=[];let m=0,g=0;y("z","y","x",-1,-1,n,t,e,a,r,0),y("z","y","x",1,-1,n,t,-e,a,r,1),y("x","z","y",1,1,e,n,t,i,a,2),y("x","z","y",1,-1,e,n,-t,i,a,3),y("x","y","z",1,-1,e,t,n,i,r,4),y("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(c),this.setAttribute("position",new Ze(h,3)),this.setAttribute("normal",new Ze(f,3)),this.setAttribute("uv",new Ze(p,2));function y(b,x,_,w,S,T,L,d,I,z,C){const D=T/I,le=L/z,te=T/2,q=L/2,J=d/2,re=I+1,fe=z+1;let ue=0,pe=0;const Te=new U;for(let xe=0;xe<fe;xe++){const K=xe*le-q;for(let ae=0;ae<re;ae++){const Ue=ae*D-te;Te[b]=Ue*w,Te[x]=K*S,Te[_]=J,h.push(Te.x,Te.y,Te.z),Te[b]=0,Te[x]=0,Te[_]=d>0?1:-1,f.push(Te.x,Te.y,Te.z),p.push(ae/I),p.push(1-xe/z),ue+=1}}for(let xe=0;xe<z;xe++)for(let K=0;K<I;K++){const ae=m+K+re*xe,Ue=m+K+re*(xe+1),ze=m+(K+1)+re*(xe+1),Ge=m+(K+1)+re*xe;c.push(ae,Ue,Ge),c.push(Ue,ze,Ge),pe+=6}o.addGroup(g,pe,C),g+=pe,m+=ue}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Bi(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Es(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Ln(s){const e={};for(let t=0;t<s.length;t++){const n=Es(s[t]);for(const i in n)e[i]=n[i]}return e}function Dg(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function Bf(s){return s.getRenderTarget()===null?s.outputColorSpace:ni}const zf={clone:Es,merge:Ln};var Ug=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Ng=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class vi extends Tn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Ug,this.fragmentShader=Ng,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Es(e.uniforms),this.uniformsGroups=Dg(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class qo extends Dt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new gt,this.projectionMatrix=new gt,this.projectionMatrixInverse=new gt,this.coordinateSystem=_i}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class mn extends qo{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Ss*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Ur*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Ss*2*Math.atan(Math.tan(Ur*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Ur*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const c=a.fullWidth,h=a.fullHeight;r+=a.offsetX*i/c,t-=a.offsetY*n/h,i*=a.width/c,n*=a.height/h}const o=this.filmOffset;o!==0&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const os=-90,ls=1;class kf extends Dt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null;const i=new mn(os,ls,e,t);i.layers=this.layers,this.add(i);const r=new mn(os,ls,e,t);r.layers=this.layers,this.add(r);const a=new mn(os,ls,e,t);a.layers=this.layers,this.add(a);const o=new mn(os,ls,e,t);o.layers=this.layers,this.add(o);const c=new mn(os,ls,e,t);c.layers=this.layers,this.add(c);const h=new mn(os,ls,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,a,o,c]=t;for(const h of t)this.remove(h);if(e===_i)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(e===ha)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[i,r,a,o,c,h]=this.children,f=e.getRenderTarget(),p=e.xr.enabled;e.xr.enabled=!1;const m=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,o),e.setRenderTarget(n,4),e.render(t,c),n.texture.generateMipmaps=m,e.setRenderTarget(n,5),e.render(t,h),e.setRenderTarget(f),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class Sa extends tn{constructor(e,t,n,i,r,a,o,c,h,f){e=e!==void 0?e:[],t=t!==void 0?t:Fi,super(e,t,n,i,r,a,o,c,h,f),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Hf extends ii{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(Qs("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===er?Bt:tr),this.texture=new Sa(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:en}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Bi(5,5,5),r=new vi({name:"CubemapFromEquirect",uniforms:Es(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:In,blending:Di});r.uniforms.tEquirect.value=t;const a=new _n(i,r),o=t.minFilter;return t.minFilter===ir&&(t.minFilter=en),new kf(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(r)}}const Zl=new U,Og=new U,Fg=new Et;class Pi{constructor(e=new U(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Zl.subVectors(n,t).cross(Og.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Zl),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Fg.getNormalMatrix(e),i=this.coplanarPoint(Zl).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const yr=new ri,eo=new U;class Yo{constructor(e=new Pi,t=new Pi,n=new Pi,i=new Pi,r=new Pi,a=new Pi){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=_i){const n=this.planes,i=e.elements,r=i[0],a=i[1],o=i[2],c=i[3],h=i[4],f=i[5],p=i[6],m=i[7],g=i[8],y=i[9],b=i[10],x=i[11],_=i[12],w=i[13],S=i[14],T=i[15];if(n[0].setComponents(c-r,m-h,x-g,T-_).normalize(),n[1].setComponents(c+r,m+h,x+g,T+_).normalize(),n[2].setComponents(c+a,m+f,x+y,T+w).normalize(),n[3].setComponents(c-a,m-f,x-y,T-w).normalize(),n[4].setComponents(c-o,m-p,x-b,T-S).normalize(),t===_i)n[5].setComponents(c+o,m+p,x+b,T+S).normalize();else if(t===ha)n[5].setComponents(o,p,b,S).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),yr.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),yr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(yr)}intersectsSprite(e){return yr.center.set(0,0,0),yr.radius=.7071067811865476,yr.applyMatrix4(e.matrixWorld),this.intersectsSphere(yr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(eo.x=i.normal.x>0?e.max.x:e.min.x,eo.y=i.normal.y>0?e.max.y:e.min.y,eo.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(eo)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Vf(){let s=null,e=!1,t=null,n=null;function i(r,a){t(r,a),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function Bg(s,e){const t=e.isWebGL2,n=new WeakMap;function i(h,f){const p=h.array,m=h.usage,g=s.createBuffer();s.bindBuffer(f,g),s.bufferData(f,p,m),h.onUploadCallback();let y;if(p instanceof Float32Array)y=s.FLOAT;else if(p instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)y=s.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else y=s.UNSIGNED_SHORT;else if(p instanceof Int16Array)y=s.SHORT;else if(p instanceof Uint32Array)y=s.UNSIGNED_INT;else if(p instanceof Int32Array)y=s.INT;else if(p instanceof Int8Array)y=s.BYTE;else if(p instanceof Uint8Array)y=s.UNSIGNED_BYTE;else if(p instanceof Uint8ClampedArray)y=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+p);return{buffer:g,type:y,bytesPerElement:p.BYTES_PER_ELEMENT,version:h.version}}function r(h,f,p){const m=f.array,g=f.updateRange;s.bindBuffer(p,h),g.count===-1?s.bufferSubData(p,0,m):(t?s.bufferSubData(p,g.offset*m.BYTES_PER_ELEMENT,m,g.offset,g.count):s.bufferSubData(p,g.offset*m.BYTES_PER_ELEMENT,m.subarray(g.offset,g.offset+g.count)),g.count=-1),f.onUploadCallback()}function a(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function o(h){h.isInterleavedBufferAttribute&&(h=h.data);const f=n.get(h);f&&(s.deleteBuffer(f.buffer),n.delete(h))}function c(h,f){if(h.isGLBufferAttribute){const m=n.get(h);(!m||m.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const p=n.get(h);p===void 0?n.set(h,i(h,f)):p.version<h.version&&(r(p.buffer,h,f),p.version=h.version)}return{get:a,remove:o,update:c}}class As extends Tt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,a=t/2,o=Math.floor(n),c=Math.floor(i),h=o+1,f=c+1,p=e/o,m=t/c,g=[],y=[],b=[],x=[];for(let _=0;_<f;_++){const w=_*m-a;for(let S=0;S<h;S++){const T=S*p-r;y.push(T,-w,0),b.push(0,0,1),x.push(S/o),x.push(1-_/c)}}for(let _=0;_<c;_++)for(let w=0;w<o;w++){const S=w+h*_,T=w+h*(_+1),L=w+1+h*(_+1),d=w+1+h*_;g.push(S,T,d),g.push(T,L,d)}this.setIndex(g),this.setAttribute("position",new Ze(y,3)),this.setAttribute("normal",new Ze(b,3)),this.setAttribute("uv",new Ze(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new As(e.width,e.height,e.widthSegments,e.heightSegments)}}var zg=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,kg=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,Hg=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,Vg=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Gg=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Wg=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Xg=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,qg=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Yg=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,jg=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Zg=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,Jg=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,$g=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Kg=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Qg=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,e0=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,t0=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,n0=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,i0=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,r0=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,s0=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,a0=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,o0=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,l0=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,c0=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,h0=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,u0=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,d0=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,f0="gl_FragColor = linearToOutputTexel( gl_FragColor );",p0=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,m0=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,g0=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,_0=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,y0=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,v0=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,x0=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,M0=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,b0=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,S0=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,E0=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,T0=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,w0=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,A0=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,C0=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,R0=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,P0=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,L0=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,I0=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,D0=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,U0=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,N0=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,O0=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,F0=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,B0=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,z0=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,k0=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,H0=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,V0=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,G0=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,W0=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,X0=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,q0=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Y0=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,j0=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Z0=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,J0=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,$0=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,K0=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Q0=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,e_=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,t_=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,n_=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,i_=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,r_=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,s_=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,a_=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,o_=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,l_=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,c_=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,h_=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,u_=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,d_=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,f_=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,p_=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,m_=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,g_=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,__=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,y_=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,v_=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,x_=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,M_=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,b_=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,S_=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,E_=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,T_=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,w_=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,A_=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,C_=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,R_=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,P_=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,L_=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,I_=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,D_=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,U_=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,N_=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const O_=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,F_=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,B_=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,z_=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,k_=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,H_=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,V_=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,G_=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,W_=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,X_=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,q_=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Y_=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,j_=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Z_=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,J_=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,$_=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,K_=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Q_=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ey=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,ty=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ny=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,iy=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,ry=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,sy=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ay=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,oy=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ly=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,cy=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,hy=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,uy=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,dy=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fy=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,py=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,my=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,xt={alphahash_fragment:zg,alphahash_pars_fragment:kg,alphamap_fragment:Hg,alphamap_pars_fragment:Vg,alphatest_fragment:Gg,alphatest_pars_fragment:Wg,aomap_fragment:Xg,aomap_pars_fragment:qg,begin_vertex:Yg,beginnormal_vertex:jg,bsdfs:Zg,iridescence_fragment:Jg,bumpmap_pars_fragment:$g,clipping_planes_fragment:Kg,clipping_planes_pars_fragment:Qg,clipping_planes_pars_vertex:e0,clipping_planes_vertex:t0,color_fragment:n0,color_pars_fragment:i0,color_pars_vertex:r0,color_vertex:s0,common:a0,cube_uv_reflection_fragment:o0,defaultnormal_vertex:l0,displacementmap_pars_vertex:c0,displacementmap_vertex:h0,emissivemap_fragment:u0,emissivemap_pars_fragment:d0,colorspace_fragment:f0,colorspace_pars_fragment:p0,envmap_fragment:m0,envmap_common_pars_fragment:g0,envmap_pars_fragment:_0,envmap_pars_vertex:y0,envmap_physical_pars_fragment:P0,envmap_vertex:v0,fog_vertex:x0,fog_pars_vertex:M0,fog_fragment:b0,fog_pars_fragment:S0,gradientmap_pars_fragment:E0,lightmap_fragment:T0,lightmap_pars_fragment:w0,lights_lambert_fragment:A0,lights_lambert_pars_fragment:C0,lights_pars_begin:R0,lights_toon_fragment:L0,lights_toon_pars_fragment:I0,lights_phong_fragment:D0,lights_phong_pars_fragment:U0,lights_physical_fragment:N0,lights_physical_pars_fragment:O0,lights_fragment_begin:F0,lights_fragment_maps:B0,lights_fragment_end:z0,logdepthbuf_fragment:k0,logdepthbuf_pars_fragment:H0,logdepthbuf_pars_vertex:V0,logdepthbuf_vertex:G0,map_fragment:W0,map_pars_fragment:X0,map_particle_fragment:q0,map_particle_pars_fragment:Y0,metalnessmap_fragment:j0,metalnessmap_pars_fragment:Z0,morphcolor_vertex:J0,morphnormal_vertex:$0,morphtarget_pars_vertex:K0,morphtarget_vertex:Q0,normal_fragment_begin:e_,normal_fragment_maps:t_,normal_pars_fragment:n_,normal_pars_vertex:i_,normal_vertex:r_,normalmap_pars_fragment:s_,clearcoat_normal_fragment_begin:a_,clearcoat_normal_fragment_maps:o_,clearcoat_pars_fragment:l_,iridescence_pars_fragment:c_,opaque_fragment:h_,packing:u_,premultiplied_alpha_fragment:d_,project_vertex:f_,dithering_fragment:p_,dithering_pars_fragment:m_,roughnessmap_fragment:g_,roughnessmap_pars_fragment:__,shadowmap_pars_fragment:y_,shadowmap_pars_vertex:v_,shadowmap_vertex:x_,shadowmask_pars_fragment:M_,skinbase_vertex:b_,skinning_pars_vertex:S_,skinning_vertex:E_,skinnormal_vertex:T_,specularmap_fragment:w_,specularmap_pars_fragment:A_,tonemapping_fragment:C_,tonemapping_pars_fragment:R_,transmission_fragment:P_,transmission_pars_fragment:L_,uv_pars_fragment:I_,uv_pars_vertex:D_,uv_vertex:U_,worldpos_vertex:N_,background_vert:O_,background_frag:F_,backgroundCube_vert:B_,backgroundCube_frag:z_,cube_vert:k_,cube_frag:H_,depth_vert:V_,depth_frag:G_,distanceRGBA_vert:W_,distanceRGBA_frag:X_,equirect_vert:q_,equirect_frag:Y_,linedashed_vert:j_,linedashed_frag:Z_,meshbasic_vert:J_,meshbasic_frag:$_,meshlambert_vert:K_,meshlambert_frag:Q_,meshmatcap_vert:ey,meshmatcap_frag:ty,meshnormal_vert:ny,meshnormal_frag:iy,meshphong_vert:ry,meshphong_frag:sy,meshphysical_vert:ay,meshphysical_frag:oy,meshtoon_vert:ly,meshtoon_frag:cy,points_vert:hy,points_frag:uy,shadow_vert:dy,shadow_frag:fy,sprite_vert:py,sprite_frag:my},Oe={common:{diffuse:{value:new Ye(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Et},alphaMap:{value:null},alphaMapTransform:{value:new Et},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Et}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Et}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Et}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Et},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Et},normalScale:{value:new ge(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Et},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Et}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Et}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Et}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ye(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ye(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Et},alphaTest:{value:0},uvTransform:{value:new Et}},sprite:{diffuse:{value:new Ye(16777215)},opacity:{value:1},center:{value:new ge(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Et},alphaMap:{value:null},alphaMapTransform:{value:new Et},alphaTest:{value:0}}},ti={basic:{uniforms:Ln([Oe.common,Oe.specularmap,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.fog]),vertexShader:xt.meshbasic_vert,fragmentShader:xt.meshbasic_frag},lambert:{uniforms:Ln([Oe.common,Oe.specularmap,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.fog,Oe.lights,{emissive:{value:new Ye(0)}}]),vertexShader:xt.meshlambert_vert,fragmentShader:xt.meshlambert_frag},phong:{uniforms:Ln([Oe.common,Oe.specularmap,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.fog,Oe.lights,{emissive:{value:new Ye(0)},specular:{value:new Ye(1118481)},shininess:{value:30}}]),vertexShader:xt.meshphong_vert,fragmentShader:xt.meshphong_frag},standard:{uniforms:Ln([Oe.common,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.roughnessmap,Oe.metalnessmap,Oe.fog,Oe.lights,{emissive:{value:new Ye(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:xt.meshphysical_vert,fragmentShader:xt.meshphysical_frag},toon:{uniforms:Ln([Oe.common,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.gradientmap,Oe.fog,Oe.lights,{emissive:{value:new Ye(0)}}]),vertexShader:xt.meshtoon_vert,fragmentShader:xt.meshtoon_frag},matcap:{uniforms:Ln([Oe.common,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.fog,{matcap:{value:null}}]),vertexShader:xt.meshmatcap_vert,fragmentShader:xt.meshmatcap_frag},points:{uniforms:Ln([Oe.points,Oe.fog]),vertexShader:xt.points_vert,fragmentShader:xt.points_frag},dashed:{uniforms:Ln([Oe.common,Oe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:xt.linedashed_vert,fragmentShader:xt.linedashed_frag},depth:{uniforms:Ln([Oe.common,Oe.displacementmap]),vertexShader:xt.depth_vert,fragmentShader:xt.depth_frag},normal:{uniforms:Ln([Oe.common,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,{opacity:{value:1}}]),vertexShader:xt.meshnormal_vert,fragmentShader:xt.meshnormal_frag},sprite:{uniforms:Ln([Oe.sprite,Oe.fog]),vertexShader:xt.sprite_vert,fragmentShader:xt.sprite_frag},background:{uniforms:{uvTransform:{value:new Et},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:xt.background_vert,fragmentShader:xt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:xt.backgroundCube_vert,fragmentShader:xt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:xt.cube_vert,fragmentShader:xt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:xt.equirect_vert,fragmentShader:xt.equirect_frag},distanceRGBA:{uniforms:Ln([Oe.common,Oe.displacementmap,{referencePosition:{value:new U},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:xt.distanceRGBA_vert,fragmentShader:xt.distanceRGBA_frag},shadow:{uniforms:Ln([Oe.lights,Oe.fog,{color:{value:new Ye(0)},opacity:{value:1}}]),vertexShader:xt.shadow_vert,fragmentShader:xt.shadow_frag}};ti.physical={uniforms:Ln([ti.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Et},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Et},clearcoatNormalScale:{value:new ge(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Et},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Et},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Et},sheen:{value:0},sheenColor:{value:new Ye(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Et},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Et},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Et},transmissionSamplerSize:{value:new ge},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Et},attenuationDistance:{value:0},attenuationColor:{value:new Ye(0)},specularColor:{value:new Ye(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Et},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Et},anisotropyVector:{value:new ge},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Et}}]),vertexShader:xt.meshphysical_vert,fragmentShader:xt.meshphysical_frag};const to={r:0,b:0,g:0};function gy(s,e,t,n,i,r,a){const o=new Ye(0);let c=r===!0?0:1,h,f,p=null,m=0,g=null;function y(x,_){let w=!1,S=_.isScene===!0?_.background:null;S&&S.isTexture&&(S=(_.backgroundBlurriness>0?t:e).get(S)),S===null?b(o,c):S&&S.isColor&&(b(S,1),w=!0);const T=s.xr.getEnvironmentBlendMode();T==="additive"?n.buffers.color.setClear(0,0,0,1,a):T==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,a),(s.autoClear||w)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),S&&(S.isCubeTexture||S.mapping===ws)?(f===void 0&&(f=new _n(new Bi(1,1,1),new vi({name:"BackgroundCubeMaterial",uniforms:Es(ti.backgroundCube.uniforms),vertexShader:ti.backgroundCube.vertexShader,fragmentShader:ti.backgroundCube.fragmentShader,side:In,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(L,d,I){this.matrixWorld.copyPosition(I.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(f)),f.material.uniforms.envMap.value=S,f.material.uniforms.flipEnvMap.value=S.isCubeTexture&&S.isRenderTargetTexture===!1?-1:1,f.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,f.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,f.material.toneMapped=S.colorSpace!==Bt,(p!==S||m!==S.version||g!==s.toneMapping)&&(f.material.needsUpdate=!0,p=S,m=S.version,g=s.toneMapping),f.layers.enableAll(),x.unshift(f,f.geometry,f.material,0,0,null)):S&&S.isTexture&&(h===void 0&&(h=new _n(new As(2,2),new vi({name:"BackgroundMaterial",uniforms:Es(ti.background.uniforms),vertexShader:ti.background.vertexShader,fragmentShader:ti.background.fragmentShader,side:Oi,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=S,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.toneMapped=S.colorSpace!==Bt,S.matrixAutoUpdate===!0&&S.updateMatrix(),h.material.uniforms.uvTransform.value.copy(S.matrix),(p!==S||m!==S.version||g!==s.toneMapping)&&(h.material.needsUpdate=!0,p=S,m=S.version,g=s.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null))}function b(x,_){x.getRGB(to,Bf(s)),n.buffers.color.setClear(to.r,to.g,to.b,_,a)}return{getClearColor:function(){return o},setClearColor:function(x,_=1){o.set(x),c=_,b(o,c)},getClearAlpha:function(){return c},setClearAlpha:function(x){c=x,b(o,c)},render:y}}function _y(s,e,t,n){const i=s.getParameter(s.MAX_VERTEX_ATTRIBS),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),a=n.isWebGL2||r!==null,o={},c=x(null);let h=c,f=!1;function p(J,re,fe,ue,pe){let Te=!1;if(a){const xe=b(ue,fe,re);h!==xe&&(h=xe,g(h.object)),Te=_(J,ue,fe,pe),Te&&w(J,ue,fe,pe)}else{const xe=re.wireframe===!0;(h.geometry!==ue.id||h.program!==fe.id||h.wireframe!==xe)&&(h.geometry=ue.id,h.program=fe.id,h.wireframe=xe,Te=!0)}pe!==null&&t.update(pe,s.ELEMENT_ARRAY_BUFFER),(Te||f)&&(f=!1,z(J,re,fe,ue),pe!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.get(pe).buffer))}function m(){return n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()}function g(J){return n.isWebGL2?s.bindVertexArray(J):r.bindVertexArrayOES(J)}function y(J){return n.isWebGL2?s.deleteVertexArray(J):r.deleteVertexArrayOES(J)}function b(J,re,fe){const ue=fe.wireframe===!0;let pe=o[J.id];pe===void 0&&(pe={},o[J.id]=pe);let Te=pe[re.id];Te===void 0&&(Te={},pe[re.id]=Te);let xe=Te[ue];return xe===void 0&&(xe=x(m()),Te[ue]=xe),xe}function x(J){const re=[],fe=[],ue=[];for(let pe=0;pe<i;pe++)re[pe]=0,fe[pe]=0,ue[pe]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:re,enabledAttributes:fe,attributeDivisors:ue,object:J,attributes:{},index:null}}function _(J,re,fe,ue){const pe=h.attributes,Te=re.attributes;let xe=0;const K=fe.getAttributes();for(const ae in K)if(K[ae].location>=0){const ze=pe[ae];let Ge=Te[ae];if(Ge===void 0&&(ae==="instanceMatrix"&&J.instanceMatrix&&(Ge=J.instanceMatrix),ae==="instanceColor"&&J.instanceColor&&(Ge=J.instanceColor)),ze===void 0||ze.attribute!==Ge||Ge&&ze.data!==Ge.data)return!0;xe++}return h.attributesNum!==xe||h.index!==ue}function w(J,re,fe,ue){const pe={},Te=re.attributes;let xe=0;const K=fe.getAttributes();for(const ae in K)if(K[ae].location>=0){let ze=Te[ae];ze===void 0&&(ae==="instanceMatrix"&&J.instanceMatrix&&(ze=J.instanceMatrix),ae==="instanceColor"&&J.instanceColor&&(ze=J.instanceColor));const Ge={};Ge.attribute=ze,ze&&ze.data&&(Ge.data=ze.data),pe[ae]=Ge,xe++}h.attributes=pe,h.attributesNum=xe,h.index=ue}function S(){const J=h.newAttributes;for(let re=0,fe=J.length;re<fe;re++)J[re]=0}function T(J){L(J,0)}function L(J,re){const fe=h.newAttributes,ue=h.enabledAttributes,pe=h.attributeDivisors;fe[J]=1,ue[J]===0&&(s.enableVertexAttribArray(J),ue[J]=1),pe[J]!==re&&((n.isWebGL2?s:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](J,re),pe[J]=re)}function d(){const J=h.newAttributes,re=h.enabledAttributes;for(let fe=0,ue=re.length;fe<ue;fe++)re[fe]!==J[fe]&&(s.disableVertexAttribArray(fe),re[fe]=0)}function I(J,re,fe,ue,pe,Te,xe){xe===!0?s.vertexAttribIPointer(J,re,fe,pe,Te):s.vertexAttribPointer(J,re,fe,ue,pe,Te)}function z(J,re,fe,ue){if(n.isWebGL2===!1&&(J.isInstancedMesh||ue.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;S();const pe=ue.attributes,Te=fe.getAttributes(),xe=re.defaultAttributeValues;for(const K in Te){const ae=Te[K];if(ae.location>=0){let Ue=pe[K];if(Ue===void 0&&(K==="instanceMatrix"&&J.instanceMatrix&&(Ue=J.instanceMatrix),K==="instanceColor"&&J.instanceColor&&(Ue=J.instanceColor)),Ue!==void 0){const ze=Ue.normalized,Ge=Ue.itemSize,tt=t.get(Ue);if(tt===void 0)continue;const Qe=tt.buffer,je=tt.type,_t=tt.bytesPerElement,Pt=n.isWebGL2===!0&&(je===s.INT||je===s.UNSIGNED_INT||Ue.gpuType===sh);if(Ue.isInterleavedBufferAttribute){const nt=Ue.data,k=nt.stride,Pe=Ue.offset;if(nt.isInstancedInterleavedBuffer){for(let me=0;me<ae.locationSize;me++)L(ae.location+me,nt.meshPerAttribute);J.isInstancedMesh!==!0&&ue._maxInstanceCount===void 0&&(ue._maxInstanceCount=nt.meshPerAttribute*nt.count)}else for(let me=0;me<ae.locationSize;me++)T(ae.location+me);s.bindBuffer(s.ARRAY_BUFFER,Qe);for(let me=0;me<ae.locationSize;me++)I(ae.location+me,Ge/ae.locationSize,je,ze,k*_t,(Pe+Ge/ae.locationSize*me)*_t,Pt)}else{if(Ue.isInstancedBufferAttribute){for(let nt=0;nt<ae.locationSize;nt++)L(ae.location+nt,Ue.meshPerAttribute);J.isInstancedMesh!==!0&&ue._maxInstanceCount===void 0&&(ue._maxInstanceCount=Ue.meshPerAttribute*Ue.count)}else for(let nt=0;nt<ae.locationSize;nt++)T(ae.location+nt);s.bindBuffer(s.ARRAY_BUFFER,Qe);for(let nt=0;nt<ae.locationSize;nt++)I(ae.location+nt,Ge/ae.locationSize,je,ze,Ge*_t,Ge/ae.locationSize*nt*_t,Pt)}}else if(xe!==void 0){const ze=xe[K];if(ze!==void 0)switch(ze.length){case 2:s.vertexAttrib2fv(ae.location,ze);break;case 3:s.vertexAttrib3fv(ae.location,ze);break;case 4:s.vertexAttrib4fv(ae.location,ze);break;default:s.vertexAttrib1fv(ae.location,ze)}}}}d()}function C(){te();for(const J in o){const re=o[J];for(const fe in re){const ue=re[fe];for(const pe in ue)y(ue[pe].object),delete ue[pe];delete re[fe]}delete o[J]}}function D(J){if(o[J.id]===void 0)return;const re=o[J.id];for(const fe in re){const ue=re[fe];for(const pe in ue)y(ue[pe].object),delete ue[pe];delete re[fe]}delete o[J.id]}function le(J){for(const re in o){const fe=o[re];if(fe[J.id]===void 0)continue;const ue=fe[J.id];for(const pe in ue)y(ue[pe].object),delete ue[pe];delete fe[J.id]}}function te(){q(),f=!0,h!==c&&(h=c,g(h.object))}function q(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:p,reset:te,resetDefaultState:q,dispose:C,releaseStatesOfGeometry:D,releaseStatesOfProgram:le,initAttributes:S,enableAttribute:T,disableUnusedAttributes:d}}function yy(s,e,t,n){const i=n.isWebGL2;let r;function a(h){r=h}function o(h,f){s.drawArrays(r,h,f),t.update(f,r,1)}function c(h,f,p){if(p===0)return;let m,g;if(i)m=s,g="drawArraysInstanced";else if(m=e.get("ANGLE_instanced_arrays"),g="drawArraysInstancedANGLE",m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[g](r,h,f,p),t.update(f,r,p)}this.setMode=a,this.render=o,this.renderInstances=c}function vy(s,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const I=e.get("EXT_texture_filter_anisotropic");n=s.getParameter(I.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(I){if(I==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";I="mediump"}return I==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&s.constructor.name==="WebGL2RenderingContext";let o=t.precision!==void 0?t.precision:"highp";const c=r(o);c!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",c,"instead."),o=c);const h=a||e.has("WEBGL_draw_buffers"),f=t.logarithmicDepthBuffer===!0,p=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),m=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),g=s.getParameter(s.MAX_TEXTURE_SIZE),y=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),b=s.getParameter(s.MAX_VERTEX_ATTRIBS),x=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),_=s.getParameter(s.MAX_VARYING_VECTORS),w=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),S=m>0,T=a||e.has("OES_texture_float"),L=S&&T,d=a?s.getParameter(s.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:r,precision:o,logarithmicDepthBuffer:f,maxTextures:p,maxVertexTextures:m,maxTextureSize:g,maxCubemapSize:y,maxAttributes:b,maxVertexUniforms:x,maxVaryings:_,maxFragmentUniforms:w,vertexTextures:S,floatFragmentTextures:T,floatVertexTextures:L,maxSamples:d}}function xy(s){const e=this;let t=null,n=0,i=!1,r=!1;const a=new Pi,o=new Et,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const g=p.length!==0||m||n!==0||i;return i=m,n=p.length,g},this.beginShadows=function(){r=!0,f(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(p,m){t=f(p,m,0)},this.setState=function(p,m,g){const y=p.clippingPlanes,b=p.clipIntersection,x=p.clipShadows,_=s.get(p);if(!i||y===null||y.length===0||r&&!x)r?f(null):h();else{const w=r?0:n,S=w*4;let T=_.clippingState||null;c.value=T,T=f(y,m,S,g);for(let L=0;L!==S;++L)T[L]=t[L];_.clippingState=T,this.numIntersection=b?this.numPlanes:0,this.numPlanes+=w}};function h(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function f(p,m,g,y){const b=p!==null?p.length:0;let x=null;if(b!==0){if(x=c.value,y!==!0||x===null){const _=g+b*4,w=m.matrixWorldInverse;o.getNormalMatrix(w),(x===null||x.length<_)&&(x=new Float32Array(_));for(let S=0,T=g;S!==b;++S,T+=4)a.copy(p[S]).applyMatrix4(w,o),a.normal.toArray(x,T),x[T+3]=a.constant}c.value=x,c.needsUpdate=!0}return e.numPlanes=b,e.numIntersection=0,x}}function My(s){let e=new WeakMap;function t(a,o){return o===na?a.mapping=Fi:o===ia&&(a.mapping=nr),a}function n(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const o=a.mapping;if(o===na||o===ia)if(e.has(a)){const c=e.get(a).texture;return t(c,a.mapping)}else{const c=a.image;if(c&&c.height>0){const h=new Hf(c.height/2);return h.fromEquirectangularTexture(s,a),e.set(a,h),a.addEventListener("dispose",i),t(h.texture,a.mapping)}else return null}}return a}function i(a){const o=a.target;o.removeEventListener("dispose",i);const c=e.get(o);c!==void 0&&(e.delete(o),c.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}class jo extends qo{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,a=n+e,o=i+t,c=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=h*this.view.offsetX,a=r+h*this.view.width,o-=f*this.view.offsetY,c=o-f*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,c,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const _s=4,vu=[.125,.215,.35,.446,.526,.582],Cr=20,Jl=new jo,xu=new Ye;let $l=null;const wr=(1+Math.sqrt(5))/2,cs=1/wr,Mu=[new U(1,1,1),new U(-1,1,1),new U(1,1,-1),new U(-1,1,-1),new U(0,wr,cs),new U(0,wr,-cs),new U(cs,0,wr),new U(-cs,0,wr),new U(wr,cs,0),new U(-wr,cs,0)];class qc{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){$l=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Eu(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Su(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget($l),e.scissorTest=!1,no(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Fi||e.mapping===nr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),$l=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:en,minFilter:en,generateMipmaps:!1,type:bs,format:Wn,colorSpace:ni,depthBuffer:!1},i=bu(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=bu(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=by(r)),this._blurMaterial=Sy(r,e,t)}return i}_compileMaterial(e){const t=new _n(this._lodPlanes[0],e);this._renderer.compile(t,Jl)}_sceneToCubeUV(e,t,n,i){const o=new mn(90,1,t,n),c=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],f=this._renderer,p=f.autoClear,m=f.toneMapping;f.getClearColor(xu),f.toneMapping=Ui,f.autoClear=!1;const g=new ki({name:"PMREM.Background",side:In,depthWrite:!1,depthTest:!1}),y=new _n(new Bi,g);let b=!1;const x=e.background;x?x.isColor&&(g.color.copy(x),e.background=null,b=!0):(g.color.copy(xu),b=!0);for(let _=0;_<6;_++){const w=_%3;w===0?(o.up.set(0,c[_],0),o.lookAt(h[_],0,0)):w===1?(o.up.set(0,0,c[_]),o.lookAt(0,h[_],0)):(o.up.set(0,c[_],0),o.lookAt(0,0,h[_]));const S=this._cubeSize;no(i,w*S,_>2?S:0,S,S),f.setRenderTarget(i),b&&f.render(y,o),f.render(e,o)}y.geometry.dispose(),y.material.dispose(),f.toneMapping=m,f.autoClear=p,e.background=x}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Fi||e.mapping===nr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Eu()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Su());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new _n(this._lodPlanes[0],r),o=r.uniforms;o.envMap.value=e;const c=this._cubeSize;no(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(a,Jl)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),a=Mu[(i-1)%Mu.length];this._blur(e,i-1,i,r,a)}t.autoClear=n}_blur(e,t,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,o){const c=this._renderer,h=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const f=3,p=new _n(this._lodPlanes[i],h),m=h.uniforms,g=this._sizeLods[n]-1,y=isFinite(r)?Math.PI/(2*g):2*Math.PI/(2*Cr-1),b=r/y,x=isFinite(r)?1+Math.floor(f*b):Cr;x>Cr&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${Cr}`);const _=[];let w=0;for(let I=0;I<Cr;++I){const z=I/b,C=Math.exp(-z*z/2);_.push(C),I===0?w+=C:I<x&&(w+=2*C)}for(let I=0;I<_.length;I++)_[I]=_[I]/w;m.envMap.value=e.texture,m.samples.value=x,m.weights.value=_,m.latitudinal.value=a==="latitudinal",o&&(m.poleAxis.value=o);const{_lodMax:S}=this;m.dTheta.value=y,m.mipInt.value=S-n;const T=this._sizeLods[i],L=3*T*(i>S-_s?i-S+_s:0),d=4*(this._cubeSize-T);no(t,L,d,3*T,2*T),c.setRenderTarget(t),c.render(p,Jl)}}function by(s){const e=[],t=[],n=[];let i=s;const r=s-_s+1+vu.length;for(let a=0;a<r;a++){const o=Math.pow(2,i);t.push(o);let c=1/o;a>s-_s?c=vu[a-s+_s-1]:a===0&&(c=0),n.push(c);const h=1/(o-2),f=-h,p=1+h,m=[f,f,p,f,p,p,f,f,p,p,f,p],g=6,y=6,b=3,x=2,_=1,w=new Float32Array(b*y*g),S=new Float32Array(x*y*g),T=new Float32Array(_*y*g);for(let d=0;d<g;d++){const I=d%3*2/3-1,z=d>2?0:-1,C=[I,z,0,I+2/3,z,0,I+2/3,z+1,0,I,z,0,I+2/3,z+1,0,I,z+1,0];w.set(C,b*y*d),S.set(m,x*y*d);const D=[d,d,d,d,d,d];T.set(D,_*y*d)}const L=new Tt;L.setAttribute("position",new Ft(w,b)),L.setAttribute("uv",new Ft(S,x)),L.setAttribute("faceIndex",new Ft(T,_)),e.push(L),i>_s&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function bu(s,e,t){const n=new ii(s,e,t);return n.texture.mapping=ws,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function no(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function Sy(s,e,t){const n=new Float32Array(Cr),i=new U(0,1,0);return new vi({name:"SphericalGaussianBlur",defines:{n:Cr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:yh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Di,depthTest:!1,depthWrite:!1})}function Su(){return new vi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:yh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Di,depthTest:!1,depthWrite:!1})}function Eu(){return new vi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:yh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Di,depthTest:!1,depthWrite:!1})}function yh(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Ey(s){let e=new WeakMap,t=null;function n(o){if(o&&o.isTexture){const c=o.mapping,h=c===na||c===ia,f=c===Fi||c===nr;if(h||f)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let p=e.get(o);return t===null&&(t=new qc(s)),p=h?t.fromEquirectangular(o,p):t.fromCubemap(o,p),e.set(o,p),p.texture}else{if(e.has(o))return e.get(o).texture;{const p=o.image;if(h&&p&&p.height>0||f&&p&&i(p)){t===null&&(t=new qc(s));const m=h?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,m),o.addEventListener("dispose",r),m.texture}else return null}}}return o}function i(o){let c=0;const h=6;for(let f=0;f<h;f++)o[f]!==void 0&&c++;return c===h}function r(o){const c=o.target;c.removeEventListener("dispose",r);const h=e.get(c);h!==void 0&&(e.delete(c),h.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function Ty(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function wy(s,e,t,n){const i={},r=new WeakMap;function a(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);for(const y in m.morphAttributes){const b=m.morphAttributes[y];for(let x=0,_=b.length;x<_;x++)e.remove(b[x])}m.removeEventListener("dispose",a),delete i[m.id];const g=r.get(m);g&&(e.remove(g),r.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function o(p,m){return i[m.id]===!0||(m.addEventListener("dispose",a),i[m.id]=!0,t.memory.geometries++),m}function c(p){const m=p.attributes;for(const y in m)e.update(m[y],s.ARRAY_BUFFER);const g=p.morphAttributes;for(const y in g){const b=g[y];for(let x=0,_=b.length;x<_;x++)e.update(b[x],s.ARRAY_BUFFER)}}function h(p){const m=[],g=p.index,y=p.attributes.position;let b=0;if(g!==null){const w=g.array;b=g.version;for(let S=0,T=w.length;S<T;S+=3){const L=w[S+0],d=w[S+1],I=w[S+2];m.push(L,d,d,I,I,L)}}else if(y!==void 0){const w=y.array;b=y.version;for(let S=0,T=w.length/3-1;S<T;S+=3){const L=S+0,d=S+1,I=S+2;m.push(L,d,d,I,I,L)}}else return;const x=new(Uf(m)?_h:gh)(m,1);x.version=b;const _=r.get(p);_&&e.remove(_),r.set(p,x)}function f(p){const m=r.get(p);if(m){const g=p.index;g!==null&&m.version<g.version&&h(p)}else h(p);return r.get(p)}return{get:o,update:c,getWireframeAttribute:f}}function Ay(s,e,t,n){const i=n.isWebGL2;let r;function a(m){r=m}let o,c;function h(m){o=m.type,c=m.bytesPerElement}function f(m,g){s.drawElements(r,g,o,m*c),t.update(g,r,1)}function p(m,g,y){if(y===0)return;let b,x;if(i)b=s,x="drawElementsInstanced";else if(b=e.get("ANGLE_instanced_arrays"),x="drawElementsInstancedANGLE",b===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}b[x](r,g,o,m*c,y),t.update(g,r,y)}this.setMode=a,this.setIndex=h,this.render=f,this.renderInstances=p}function Cy(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,a,o){switch(t.calls++,a){case s.TRIANGLES:t.triangles+=o*(r/3);break;case s.LINES:t.lines+=o*(r/2);break;case s.LINE_STRIP:t.lines+=o*(r-1);break;case s.LINE_LOOP:t.lines+=o*r;break;case s.POINTS:t.points+=o*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function Ry(s,e){return s[0]-e[0]}function Py(s,e){return Math.abs(e[1])-Math.abs(s[1])}function Ly(s,e,t){const n={},i=new Float32Array(8),r=new WeakMap,a=new Ot,o=[];for(let h=0;h<8;h++)o[h]=[h,0];function c(h,f,p){const m=h.morphTargetInfluences;if(e.isWebGL2===!0){const y=f.morphAttributes.position||f.morphAttributes.normal||f.morphAttributes.color,b=y!==void 0?y.length:0;let x=r.get(f);if(x===void 0||x.count!==b){let re=function(){q.dispose(),r.delete(f),f.removeEventListener("dispose",re)};var g=re;x!==void 0&&x.texture.dispose();const S=f.morphAttributes.position!==void 0,T=f.morphAttributes.normal!==void 0,L=f.morphAttributes.color!==void 0,d=f.morphAttributes.position||[],I=f.morphAttributes.normal||[],z=f.morphAttributes.color||[];let C=0;S===!0&&(C=1),T===!0&&(C=2),L===!0&&(C=3);let D=f.attributes.position.count*C,le=1;D>e.maxTextureSize&&(le=Math.ceil(D/e.maxTextureSize),D=e.maxTextureSize);const te=new Float32Array(D*le*4*b),q=new Wo(te,D,le,b);q.type=gi,q.needsUpdate=!0;const J=C*4;for(let fe=0;fe<b;fe++){const ue=d[fe],pe=I[fe],Te=z[fe],xe=D*le*4*fe;for(let K=0;K<ue.count;K++){const ae=K*J;S===!0&&(a.fromBufferAttribute(ue,K),te[xe+ae+0]=a.x,te[xe+ae+1]=a.y,te[xe+ae+2]=a.z,te[xe+ae+3]=0),T===!0&&(a.fromBufferAttribute(pe,K),te[xe+ae+4]=a.x,te[xe+ae+5]=a.y,te[xe+ae+6]=a.z,te[xe+ae+7]=0),L===!0&&(a.fromBufferAttribute(Te,K),te[xe+ae+8]=a.x,te[xe+ae+9]=a.y,te[xe+ae+10]=a.z,te[xe+ae+11]=Te.itemSize===4?a.w:1)}}x={count:b,texture:q,size:new ge(D,le)},r.set(f,x),f.addEventListener("dispose",re)}let _=0;for(let S=0;S<m.length;S++)_+=m[S];const w=f.morphTargetsRelative?1:1-_;p.getUniforms().setValue(s,"morphTargetBaseInfluence",w),p.getUniforms().setValue(s,"morphTargetInfluences",m),p.getUniforms().setValue(s,"morphTargetsTexture",x.texture,t),p.getUniforms().setValue(s,"morphTargetsTextureSize",x.size)}else{const y=m===void 0?0:m.length;let b=n[f.id];if(b===void 0||b.length!==y){b=[];for(let T=0;T<y;T++)b[T]=[T,0];n[f.id]=b}for(let T=0;T<y;T++){const L=b[T];L[0]=T,L[1]=m[T]}b.sort(Py);for(let T=0;T<8;T++)T<y&&b[T][1]?(o[T][0]=b[T][0],o[T][1]=b[T][1]):(o[T][0]=Number.MAX_SAFE_INTEGER,o[T][1]=0);o.sort(Ry);const x=f.morphAttributes.position,_=f.morphAttributes.normal;let w=0;for(let T=0;T<8;T++){const L=o[T],d=L[0],I=L[1];d!==Number.MAX_SAFE_INTEGER&&I?(x&&f.getAttribute("morphTarget"+T)!==x[d]&&f.setAttribute("morphTarget"+T,x[d]),_&&f.getAttribute("morphNormal"+T)!==_[d]&&f.setAttribute("morphNormal"+T,_[d]),i[T]=I,w+=I):(x&&f.hasAttribute("morphTarget"+T)===!0&&f.deleteAttribute("morphTarget"+T),_&&f.hasAttribute("morphNormal"+T)===!0&&f.deleteAttribute("morphNormal"+T),i[T]=0)}const S=f.morphTargetsRelative?1:1-w;p.getUniforms().setValue(s,"morphTargetBaseInfluence",S),p.getUniforms().setValue(s,"morphTargetInfluences",i)}}return{update:c}}function Iy(s,e,t,n){let i=new WeakMap;function r(c){const h=n.render.frame,f=c.geometry,p=e.get(c,f);if(i.get(p)!==h&&(e.update(p),i.set(p,h)),c.isInstancedMesh&&(c.hasEventListener("dispose",o)===!1&&c.addEventListener("dispose",o),i.get(c)!==h&&(t.update(c.instanceMatrix,s.ARRAY_BUFFER),c.instanceColor!==null&&t.update(c.instanceColor,s.ARRAY_BUFFER),i.set(c,h))),c.isSkinnedMesh){const m=c.skeleton;i.get(m)!==h&&(m.update(),i.set(m,h))}return p}function a(){i=new WeakMap}function o(c){const h=c.target;h.removeEventListener("dispose",o),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:r,dispose:a}}const Gf=new tn,Wf=new Wo,Xf=new mh,qf=new Sa,Tu=[],wu=[],Au=new Float32Array(16),Cu=new Float32Array(9),Ru=new Float32Array(4);function Cs(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=Tu[i];if(r===void 0&&(r=new Float32Array(i),Tu[i]=r),e!==0){n.toArray(r,0);for(let a=1,o=0;a!==e;++a)o+=t,s[a].toArray(r,o)}return r}function cn(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function hn(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function Zo(s,e){let t=wu[e];t===void 0&&(t=new Int32Array(e),wu[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function Dy(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function Uy(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(cn(t,e))return;s.uniform2fv(this.addr,e),hn(t,e)}}function Ny(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(cn(t,e))return;s.uniform3fv(this.addr,e),hn(t,e)}}function Oy(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(cn(t,e))return;s.uniform4fv(this.addr,e),hn(t,e)}}function Fy(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(cn(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),hn(t,e)}else{if(cn(t,n))return;Ru.set(n),s.uniformMatrix2fv(this.addr,!1,Ru),hn(t,n)}}function By(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(cn(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),hn(t,e)}else{if(cn(t,n))return;Cu.set(n),s.uniformMatrix3fv(this.addr,!1,Cu),hn(t,n)}}function zy(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(cn(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),hn(t,e)}else{if(cn(t,n))return;Au.set(n),s.uniformMatrix4fv(this.addr,!1,Au),hn(t,n)}}function ky(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function Hy(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(cn(t,e))return;s.uniform2iv(this.addr,e),hn(t,e)}}function Vy(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(cn(t,e))return;s.uniform3iv(this.addr,e),hn(t,e)}}function Gy(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(cn(t,e))return;s.uniform4iv(this.addr,e),hn(t,e)}}function Wy(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function Xy(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(cn(t,e))return;s.uniform2uiv(this.addr,e),hn(t,e)}}function qy(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(cn(t,e))return;s.uniform3uiv(this.addr,e),hn(t,e)}}function Yy(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(cn(t,e))return;s.uniform4uiv(this.addr,e),hn(t,e)}}function jy(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||Gf,i)}function Zy(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Xf,i)}function Jy(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||qf,i)}function $y(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Wf,i)}function Ky(s){switch(s){case 5126:return Dy;case 35664:return Uy;case 35665:return Ny;case 35666:return Oy;case 35674:return Fy;case 35675:return By;case 35676:return zy;case 5124:case 35670:return ky;case 35667:case 35671:return Hy;case 35668:case 35672:return Vy;case 35669:case 35673:return Gy;case 5125:return Wy;case 36294:return Xy;case 36295:return qy;case 36296:return Yy;case 35678:case 36198:case 36298:case 36306:case 35682:return jy;case 35679:case 36299:case 36307:return Zy;case 35680:case 36300:case 36308:case 36293:return Jy;case 36289:case 36303:case 36311:case 36292:return $y}}function Qy(s,e){s.uniform1fv(this.addr,e)}function ev(s,e){const t=Cs(e,this.size,2);s.uniform2fv(this.addr,t)}function tv(s,e){const t=Cs(e,this.size,3);s.uniform3fv(this.addr,t)}function nv(s,e){const t=Cs(e,this.size,4);s.uniform4fv(this.addr,t)}function iv(s,e){const t=Cs(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function rv(s,e){const t=Cs(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function sv(s,e){const t=Cs(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function av(s,e){s.uniform1iv(this.addr,e)}function ov(s,e){s.uniform2iv(this.addr,e)}function lv(s,e){s.uniform3iv(this.addr,e)}function cv(s,e){s.uniform4iv(this.addr,e)}function hv(s,e){s.uniform1uiv(this.addr,e)}function uv(s,e){s.uniform2uiv(this.addr,e)}function dv(s,e){s.uniform3uiv(this.addr,e)}function fv(s,e){s.uniform4uiv(this.addr,e)}function pv(s,e,t){const n=this.cache,i=e.length,r=Zo(t,i);cn(n,r)||(s.uniform1iv(this.addr,r),hn(n,r));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||Gf,r[a])}function mv(s,e,t){const n=this.cache,i=e.length,r=Zo(t,i);cn(n,r)||(s.uniform1iv(this.addr,r),hn(n,r));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||Xf,r[a])}function gv(s,e,t){const n=this.cache,i=e.length,r=Zo(t,i);cn(n,r)||(s.uniform1iv(this.addr,r),hn(n,r));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||qf,r[a])}function _v(s,e,t){const n=this.cache,i=e.length,r=Zo(t,i);cn(n,r)||(s.uniform1iv(this.addr,r),hn(n,r));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||Wf,r[a])}function yv(s){switch(s){case 5126:return Qy;case 35664:return ev;case 35665:return tv;case 35666:return nv;case 35674:return iv;case 35675:return rv;case 35676:return sv;case 5124:case 35670:return av;case 35667:case 35671:return ov;case 35668:case 35672:return lv;case 35669:case 35673:return cv;case 5125:return hv;case 36294:return uv;case 36295:return dv;case 36296:return fv;case 35678:case 36198:case 36298:case 36306:case 35682:return pv;case 35679:case 36299:case 36307:return mv;case 35680:case 36300:case 36308:case 36293:return gv;case 36289:case 36303:case 36311:case 36292:return _v}}class vv{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=Ky(t.type)}}class xv{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=yv(t.type)}}class Mv{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const o=i[r];o.setValue(e,t[o.id],n)}}}const Kl=/(\w+)(\])?(\[|\.)?/g;function Pu(s,e){s.seq.push(e),s.map[e.id]=e}function bv(s,e,t){const n=s.name,i=n.length;for(Kl.lastIndex=0;;){const r=Kl.exec(n),a=Kl.lastIndex;let o=r[1];const c=r[2]==="]",h=r[3];if(c&&(o=o|0),h===void 0||h==="["&&a+2===i){Pu(t,h===void 0?new vv(o,s,e):new xv(o,s,e));break}else{let p=t.map[o];p===void 0&&(p=new Mv(o),Pu(t,p)),t=p}}}class Do{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),a=e.getUniformLocation(t,r.name);bv(r,a,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,a=t.length;r!==a;++r){const o=t[r],c=n[o.id];c.needsUpdate!==!1&&o.setValue(e,c.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const a=e[i];a.id in t&&n.push(a)}return n}}function Lu(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}let Sv=0;function Ev(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let a=i;a<r;a++){const o=a+1;n.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return n.join(`
`)}function Tv(s){switch(s){case ni:return["Linear","( value )"];case Bt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",s),["Linear","( value )"]}}function Iu(s,e,t){const n=s.getShaderParameter(e,s.COMPILE_STATUS),i=s.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const a=parseInt(r[1]);return t.toUpperCase()+`

`+i+`

`+Ev(s.getShaderSource(e),a)}else return i}function wv(s,e){const t=Tv(e);return"vec4 "+s+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function Av(s,e){let t;switch(e){case nf:t="Linear";break;case rf:t="Reinhard";break;case sf:t="OptimizedCineon";break;case af:t="ACESFilmic";break;case of:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function Cv(s){return[s.extensionDerivatives||s.envMapCubeUVHeight||s.bumpMap||s.normalMapTangentSpace||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Js).join(`
`)}function Rv(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function Pv(s,e){const t={},n=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),a=r.name;let o=1;r.type===s.FLOAT_MAT2&&(o=2),r.type===s.FLOAT_MAT3&&(o=3),r.type===s.FLOAT_MAT4&&(o=4),t[a]={type:r.type,location:s.getAttribLocation(e,a),locationSize:o}}return t}function Js(s){return s!==""}function Du(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Uu(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Lv=/^[ \t]*#include +<([\w\d./]+)>/gm;function Yc(s){return s.replace(Lv,Dv)}const Iv=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function Dv(s,e){let t=xt[e];if(t===void 0){const n=Iv.get(e);if(n!==void 0)t=xt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return Yc(t)}const Uv=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Nu(s){return s.replace(Uv,Nv)}function Nv(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function Ou(s){let e="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Ov(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===th?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===Ud?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===pi&&(e="SHADOWMAP_TYPE_VSM"),e}function Fv(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Fi:case nr:e="ENVMAP_TYPE_CUBE";break;case ws:e="ENVMAP_TYPE_CUBE_UV";break}return e}function Bv(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case nr:e="ENVMAP_MODE_REFRACTION";break}return e}function zv(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case xa:e="ENVMAP_BLENDING_MULTIPLY";break;case ef:e="ENVMAP_BLENDING_MIX";break;case tf:e="ENVMAP_BLENDING_ADD";break}return e}function kv(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function Hv(s,e,t,n){const i=s.getContext(),r=t.defines;let a=t.vertexShader,o=t.fragmentShader;const c=Ov(t),h=Fv(t),f=Bv(t),p=zv(t),m=kv(t),g=t.isWebGL2?"":Cv(t),y=Rv(r),b=i.createProgram();let x,_,w=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(x=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(Js).join(`
`),x.length>0&&(x+=`
`),_=[g,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(Js).join(`
`),_.length>0&&(_+=`
`)):(x=[Ou(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Js).join(`
`),_=[g,Ou(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Ui?"#define TONE_MAPPING":"",t.toneMapping!==Ui?xt.tonemapping_pars_fragment:"",t.toneMapping!==Ui?Av("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",xt.colorspace_pars_fragment,wv("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Js).join(`
`)),a=Yc(a),a=Du(a,t),a=Uu(a,t),o=Yc(o),o=Du(o,t),o=Uu(o,t),a=Nu(a),o=Nu(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,x=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,_=["#define varying in",t.glslVersion===Wc?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Wc?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const S=w+x+a,T=w+_+o,L=Lu(i,i.VERTEX_SHADER,S),d=Lu(i,i.FRAGMENT_SHADER,T);if(i.attachShader(b,L),i.attachShader(b,d),t.index0AttributeName!==void 0?i.bindAttribLocation(b,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(b,0,"position"),i.linkProgram(b),s.debug.checkShaderErrors){const C=i.getProgramInfoLog(b).trim(),D=i.getShaderInfoLog(L).trim(),le=i.getShaderInfoLog(d).trim();let te=!0,q=!0;if(i.getProgramParameter(b,i.LINK_STATUS)===!1)if(te=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,b,L,d);else{const J=Iu(i,L,"vertex"),re=Iu(i,d,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(b,i.VALIDATE_STATUS)+`

Program Info Log: `+C+`
`+J+`
`+re)}else C!==""?console.warn("THREE.WebGLProgram: Program Info Log:",C):(D===""||le==="")&&(q=!1);q&&(this.diagnostics={runnable:te,programLog:C,vertexShader:{log:D,prefix:x},fragmentShader:{log:le,prefix:_}})}i.deleteShader(L),i.deleteShader(d);let I;this.getUniforms=function(){return I===void 0&&(I=new Do(i,b)),I};let z;return this.getAttributes=function(){return z===void 0&&(z=Pv(i,b)),z},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(b),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=Sv++,this.cacheKey=e,this.usedTimes=1,this.program=b,this.vertexShader=L,this.fragmentShader=d,this}let Vv=0;class Gv{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new Wv(e),t.set(e,n)),n}}class Wv{constructor(e){this.id=Vv++,this.code=e,this.usedTimes=0}}function Xv(s,e,t,n,i,r,a){const o=new Xo,c=new Gv,h=[],f=i.isWebGL2,p=i.logarithmicDepthBuffer,m=i.vertexTextures;let g=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function b(C){return C===0?"uv":`uv${C}`}function x(C,D,le,te,q){const J=te.fog,re=q.geometry,fe=C.isMeshStandardMaterial?te.environment:null,ue=(C.isMeshStandardMaterial?t:e).get(C.envMap||fe),pe=ue&&ue.mapping===ws?ue.image.height:null,Te=y[C.type];C.precision!==null&&(g=i.getMaxPrecision(C.precision),g!==C.precision&&console.warn("THREE.WebGLProgram.getParameters:",C.precision,"not supported, using",g,"instead."));const xe=re.morphAttributes.position||re.morphAttributes.normal||re.morphAttributes.color,K=xe!==void 0?xe.length:0;let ae=0;re.morphAttributes.position!==void 0&&(ae=1),re.morphAttributes.normal!==void 0&&(ae=2),re.morphAttributes.color!==void 0&&(ae=3);let Ue,ze,Ge,tt;if(Te){const Lt=ti[Te];Ue=Lt.vertexShader,ze=Lt.fragmentShader}else Ue=C.vertexShader,ze=C.fragmentShader,c.update(C),Ge=c.getVertexShaderID(C),tt=c.getFragmentShaderID(C);const Qe=s.getRenderTarget(),je=q.isInstancedMesh===!0,_t=!!C.map,Pt=!!C.matcap,nt=!!ue,k=!!C.aoMap,Pe=!!C.lightMap,me=!!C.bumpMap,Ee=!!C.normalMap,Me=!!C.displacementMap,$e=!!C.emissiveMap,ke=!!C.metalnessMap,Fe=!!C.roughnessMap,et=C.anisotropy>0,pt=C.clearcoat>0,Ie=C.iridescence>0,O=C.sheen>0,R=C.transmission>0,Q=et&&!!C.anisotropyMap,Re=pt&&!!C.clearcoatMap,Se=pt&&!!C.clearcoatNormalMap,Ce=pt&&!!C.clearcoatRoughnessMap,We=Ie&&!!C.iridescenceMap,Ae=Ie&&!!C.iridescenceThicknessMap,ne=O&&!!C.sheenColorMap,V=O&&!!C.sheenRoughnessMap,ve=!!C.specularMap,Be=!!C.specularColorMap,Le=!!C.specularIntensityMap,De=R&&!!C.transmissionMap,st=R&&!!C.thicknessMap,bt=!!C.gradientMap,G=!!C.alphaMap,Ne=C.alphaTest>0,se=!!C.alphaHash,be=!!C.extensions,we=!!re.attributes.uv1,vt=!!re.attributes.uv2,Ut=!!re.attributes.uv3;let Nt=Ui;return C.toneMapped&&(Qe===null||Qe.isXRRenderTarget===!0)&&(Nt=s.toneMapping),{isWebGL2:f,shaderID:Te,shaderType:C.type,shaderName:C.name,vertexShader:Ue,fragmentShader:ze,defines:C.defines,customVertexShaderID:Ge,customFragmentShaderID:tt,isRawShaderMaterial:C.isRawShaderMaterial===!0,glslVersion:C.glslVersion,precision:g,instancing:je,instancingColor:je&&q.instanceColor!==null,supportsVertexTextures:m,outputColorSpace:Qe===null?s.outputColorSpace:Qe.isXRRenderTarget===!0?Qe.texture.colorSpace:ni,map:_t,matcap:Pt,envMap:nt,envMapMode:nt&&ue.mapping,envMapCubeUVHeight:pe,aoMap:k,lightMap:Pe,bumpMap:me,normalMap:Ee,displacementMap:m&&Me,emissiveMap:$e,normalMapObjectSpace:Ee&&C.normalMapType===bf,normalMapTangentSpace:Ee&&C.normalMapType===sr,metalnessMap:ke,roughnessMap:Fe,anisotropy:et,anisotropyMap:Q,clearcoat:pt,clearcoatMap:Re,clearcoatNormalMap:Se,clearcoatRoughnessMap:Ce,iridescence:Ie,iridescenceMap:We,iridescenceThicknessMap:Ae,sheen:O,sheenColorMap:ne,sheenRoughnessMap:V,specularMap:ve,specularColorMap:Be,specularIntensityMap:Le,transmission:R,transmissionMap:De,thicknessMap:st,gradientMap:bt,opaque:C.transparent===!1&&C.blending===Dr,alphaMap:G,alphaTest:Ne,alphaHash:se,combine:C.combine,mapUv:_t&&b(C.map.channel),aoMapUv:k&&b(C.aoMap.channel),lightMapUv:Pe&&b(C.lightMap.channel),bumpMapUv:me&&b(C.bumpMap.channel),normalMapUv:Ee&&b(C.normalMap.channel),displacementMapUv:Me&&b(C.displacementMap.channel),emissiveMapUv:$e&&b(C.emissiveMap.channel),metalnessMapUv:ke&&b(C.metalnessMap.channel),roughnessMapUv:Fe&&b(C.roughnessMap.channel),anisotropyMapUv:Q&&b(C.anisotropyMap.channel),clearcoatMapUv:Re&&b(C.clearcoatMap.channel),clearcoatNormalMapUv:Se&&b(C.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Ce&&b(C.clearcoatRoughnessMap.channel),iridescenceMapUv:We&&b(C.iridescenceMap.channel),iridescenceThicknessMapUv:Ae&&b(C.iridescenceThicknessMap.channel),sheenColorMapUv:ne&&b(C.sheenColorMap.channel),sheenRoughnessMapUv:V&&b(C.sheenRoughnessMap.channel),specularMapUv:ve&&b(C.specularMap.channel),specularColorMapUv:Be&&b(C.specularColorMap.channel),specularIntensityMapUv:Le&&b(C.specularIntensityMap.channel),transmissionMapUv:De&&b(C.transmissionMap.channel),thicknessMapUv:st&&b(C.thicknessMap.channel),alphaMapUv:G&&b(C.alphaMap.channel),vertexTangents:!!re.attributes.tangent&&(Ee||et),vertexColors:C.vertexColors,vertexAlphas:C.vertexColors===!0&&!!re.attributes.color&&re.attributes.color.itemSize===4,vertexUv1s:we,vertexUv2s:vt,vertexUv3s:Ut,pointsUvs:q.isPoints===!0&&!!re.attributes.uv&&(_t||G),fog:!!J,useFog:C.fog===!0,fogExp2:J&&J.isFogExp2,flatShading:C.flatShading===!0,sizeAttenuation:C.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:q.isSkinnedMesh===!0,morphTargets:re.morphAttributes.position!==void 0,morphNormals:re.morphAttributes.normal!==void 0,morphColors:re.morphAttributes.color!==void 0,morphTargetsCount:K,morphTextureStride:ae,numDirLights:D.directional.length,numPointLights:D.point.length,numSpotLights:D.spot.length,numSpotLightMaps:D.spotLightMap.length,numRectAreaLights:D.rectArea.length,numHemiLights:D.hemi.length,numDirLightShadows:D.directionalShadowMap.length,numPointLightShadows:D.pointShadowMap.length,numSpotLightShadows:D.spotShadowMap.length,numSpotLightShadowsWithMaps:D.numSpotLightShadowsWithMaps,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:C.dithering,shadowMapEnabled:s.shadowMap.enabled&&le.length>0,shadowMapType:s.shadowMap.type,toneMapping:Nt,useLegacyLights:s._useLegacyLights,decodeVideoTexture:_t&&C.map.isVideoTexture===!0&&C.map.colorSpace===Bt,premultipliedAlpha:C.premultipliedAlpha,doubleSided:C.side===mi,flipSided:C.side===In,useDepthPacking:C.depthPacking>=0,depthPacking:C.depthPacking||0,index0AttributeName:C.index0AttributeName,extensionDerivatives:be&&C.extensions.derivatives===!0,extensionFragDepth:be&&C.extensions.fragDepth===!0,extensionDrawBuffers:be&&C.extensions.drawBuffers===!0,extensionShaderTextureLOD:be&&C.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:f||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:f||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:f||n.has("EXT_shader_texture_lod"),customProgramCacheKey:C.customProgramCacheKey()}}function _(C){const D=[];if(C.shaderID?D.push(C.shaderID):(D.push(C.customVertexShaderID),D.push(C.customFragmentShaderID)),C.defines!==void 0)for(const le in C.defines)D.push(le),D.push(C.defines[le]);return C.isRawShaderMaterial===!1&&(w(D,C),S(D,C),D.push(s.outputColorSpace)),D.push(C.customProgramCacheKey),D.join()}function w(C,D){C.push(D.precision),C.push(D.outputColorSpace),C.push(D.envMapMode),C.push(D.envMapCubeUVHeight),C.push(D.mapUv),C.push(D.alphaMapUv),C.push(D.lightMapUv),C.push(D.aoMapUv),C.push(D.bumpMapUv),C.push(D.normalMapUv),C.push(D.displacementMapUv),C.push(D.emissiveMapUv),C.push(D.metalnessMapUv),C.push(D.roughnessMapUv),C.push(D.anisotropyMapUv),C.push(D.clearcoatMapUv),C.push(D.clearcoatNormalMapUv),C.push(D.clearcoatRoughnessMapUv),C.push(D.iridescenceMapUv),C.push(D.iridescenceThicknessMapUv),C.push(D.sheenColorMapUv),C.push(D.sheenRoughnessMapUv),C.push(D.specularMapUv),C.push(D.specularColorMapUv),C.push(D.specularIntensityMapUv),C.push(D.transmissionMapUv),C.push(D.thicknessMapUv),C.push(D.combine),C.push(D.fogExp2),C.push(D.sizeAttenuation),C.push(D.morphTargetsCount),C.push(D.morphAttributeCount),C.push(D.numDirLights),C.push(D.numPointLights),C.push(D.numSpotLights),C.push(D.numSpotLightMaps),C.push(D.numHemiLights),C.push(D.numRectAreaLights),C.push(D.numDirLightShadows),C.push(D.numPointLightShadows),C.push(D.numSpotLightShadows),C.push(D.numSpotLightShadowsWithMaps),C.push(D.shadowMapType),C.push(D.toneMapping),C.push(D.numClippingPlanes),C.push(D.numClipIntersection),C.push(D.depthPacking)}function S(C,D){o.disableAll(),D.isWebGL2&&o.enable(0),D.supportsVertexTextures&&o.enable(1),D.instancing&&o.enable(2),D.instancingColor&&o.enable(3),D.matcap&&o.enable(4),D.envMap&&o.enable(5),D.normalMapObjectSpace&&o.enable(6),D.normalMapTangentSpace&&o.enable(7),D.clearcoat&&o.enable(8),D.iridescence&&o.enable(9),D.alphaTest&&o.enable(10),D.vertexColors&&o.enable(11),D.vertexAlphas&&o.enable(12),D.vertexUv1s&&o.enable(13),D.vertexUv2s&&o.enable(14),D.vertexUv3s&&o.enable(15),D.vertexTangents&&o.enable(16),D.anisotropy&&o.enable(17),C.push(o.mask),o.disableAll(),D.fog&&o.enable(0),D.useFog&&o.enable(1),D.flatShading&&o.enable(2),D.logarithmicDepthBuffer&&o.enable(3),D.skinning&&o.enable(4),D.morphTargets&&o.enable(5),D.morphNormals&&o.enable(6),D.morphColors&&o.enable(7),D.premultipliedAlpha&&o.enable(8),D.shadowMapEnabled&&o.enable(9),D.useLegacyLights&&o.enable(10),D.doubleSided&&o.enable(11),D.flipSided&&o.enable(12),D.useDepthPacking&&o.enable(13),D.dithering&&o.enable(14),D.transmission&&o.enable(15),D.sheen&&o.enable(16),D.opaque&&o.enable(17),D.pointsUvs&&o.enable(18),D.decodeVideoTexture&&o.enable(19),C.push(o.mask)}function T(C){const D=y[C.type];let le;if(D){const te=ti[D];le=zf.clone(te.uniforms)}else le=C.uniforms;return le}function L(C,D){let le;for(let te=0,q=h.length;te<q;te++){const J=h[te];if(J.cacheKey===D){le=J,++le.usedTimes;break}}return le===void 0&&(le=new Hv(s,D,C,r),h.push(le)),le}function d(C){if(--C.usedTimes===0){const D=h.indexOf(C);h[D]=h[h.length-1],h.pop(),C.destroy()}}function I(C){c.remove(C)}function z(){c.dispose()}return{getParameters:x,getProgramCacheKey:_,getUniforms:T,acquireProgram:L,releaseProgram:d,releaseShaderCache:I,programs:h,dispose:z}}function qv(){let s=new WeakMap;function e(r){let a=s.get(r);return a===void 0&&(a={},s.set(r,a)),a}function t(r){s.delete(r)}function n(r,a,o){s.get(r)[a]=o}function i(){s=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function Yv(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function Fu(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function Bu(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function a(p,m,g,y,b,x){let _=s[e];return _===void 0?(_={id:p.id,object:p,geometry:m,material:g,groupOrder:y,renderOrder:p.renderOrder,z:b,group:x},s[e]=_):(_.id=p.id,_.object=p,_.geometry=m,_.material=g,_.groupOrder=y,_.renderOrder=p.renderOrder,_.z=b,_.group=x),e++,_}function o(p,m,g,y,b,x){const _=a(p,m,g,y,b,x);g.transmission>0?n.push(_):g.transparent===!0?i.push(_):t.push(_)}function c(p,m,g,y,b,x){const _=a(p,m,g,y,b,x);g.transmission>0?n.unshift(_):g.transparent===!0?i.unshift(_):t.unshift(_)}function h(p,m){t.length>1&&t.sort(p||Yv),n.length>1&&n.sort(m||Fu),i.length>1&&i.sort(m||Fu)}function f(){for(let p=e,m=s.length;p<m;p++){const g=s[p];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:o,unshift:c,finish:f,sort:h}}function jv(){let s=new WeakMap;function e(n,i){const r=s.get(n);let a;return r===void 0?(a=new Bu,s.set(n,[a])):i>=r.length?(a=new Bu,r.push(a)):a=r[i],a}function t(){s=new WeakMap}return{get:e,dispose:t}}function Zv(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new U,color:new Ye};break;case"SpotLight":t={position:new U,direction:new U,color:new Ye,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new U,color:new Ye,distance:0,decay:0};break;case"HemisphereLight":t={direction:new U,skyColor:new Ye,groundColor:new Ye};break;case"RectAreaLight":t={color:new Ye,position:new U,halfWidth:new U,halfHeight:new U};break}return s[e.id]=t,t}}}function Jv(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ge};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ge};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ge,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let $v=0;function Kv(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function Qv(s,e){const t=new Zv,n=Jv(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let f=0;f<9;f++)i.probe.push(new U);const r=new U,a=new gt,o=new gt;function c(f,p){let m=0,g=0,y=0;for(let le=0;le<9;le++)i.probe[le].set(0,0,0);let b=0,x=0,_=0,w=0,S=0,T=0,L=0,d=0,I=0,z=0;f.sort(Kv);const C=p===!0?Math.PI:1;for(let le=0,te=f.length;le<te;le++){const q=f[le],J=q.color,re=q.intensity,fe=q.distance,ue=q.shadow&&q.shadow.map?q.shadow.map.texture:null;if(q.isAmbientLight)m+=J.r*re*C,g+=J.g*re*C,y+=J.b*re*C;else if(q.isLightProbe)for(let pe=0;pe<9;pe++)i.probe[pe].addScaledVector(q.sh.coefficients[pe],re);else if(q.isDirectionalLight){const pe=t.get(q);if(pe.color.copy(q.color).multiplyScalar(q.intensity*C),q.castShadow){const Te=q.shadow,xe=n.get(q);xe.shadowBias=Te.bias,xe.shadowNormalBias=Te.normalBias,xe.shadowRadius=Te.radius,xe.shadowMapSize=Te.mapSize,i.directionalShadow[b]=xe,i.directionalShadowMap[b]=ue,i.directionalShadowMatrix[b]=q.shadow.matrix,T++}i.directional[b]=pe,b++}else if(q.isSpotLight){const pe=t.get(q);pe.position.setFromMatrixPosition(q.matrixWorld),pe.color.copy(J).multiplyScalar(re*C),pe.distance=fe,pe.coneCos=Math.cos(q.angle),pe.penumbraCos=Math.cos(q.angle*(1-q.penumbra)),pe.decay=q.decay,i.spot[_]=pe;const Te=q.shadow;if(q.map&&(i.spotLightMap[I]=q.map,I++,Te.updateMatrices(q),q.castShadow&&z++),i.spotLightMatrix[_]=Te.matrix,q.castShadow){const xe=n.get(q);xe.shadowBias=Te.bias,xe.shadowNormalBias=Te.normalBias,xe.shadowRadius=Te.radius,xe.shadowMapSize=Te.mapSize,i.spotShadow[_]=xe,i.spotShadowMap[_]=ue,d++}_++}else if(q.isRectAreaLight){const pe=t.get(q);pe.color.copy(J).multiplyScalar(re),pe.halfWidth.set(q.width*.5,0,0),pe.halfHeight.set(0,q.height*.5,0),i.rectArea[w]=pe,w++}else if(q.isPointLight){const pe=t.get(q);if(pe.color.copy(q.color).multiplyScalar(q.intensity*C),pe.distance=q.distance,pe.decay=q.decay,q.castShadow){const Te=q.shadow,xe=n.get(q);xe.shadowBias=Te.bias,xe.shadowNormalBias=Te.normalBias,xe.shadowRadius=Te.radius,xe.shadowMapSize=Te.mapSize,xe.shadowCameraNear=Te.camera.near,xe.shadowCameraFar=Te.camera.far,i.pointShadow[x]=xe,i.pointShadowMap[x]=ue,i.pointShadowMatrix[x]=q.shadow.matrix,L++}i.point[x]=pe,x++}else if(q.isHemisphereLight){const pe=t.get(q);pe.skyColor.copy(q.color).multiplyScalar(re*C),pe.groundColor.copy(q.groundColor).multiplyScalar(re*C),i.hemi[S]=pe,S++}}w>0&&(e.isWebGL2||s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Oe.LTC_FLOAT_1,i.rectAreaLTC2=Oe.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Oe.LTC_HALF_1,i.rectAreaLTC2=Oe.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=m,i.ambient[1]=g,i.ambient[2]=y;const D=i.hash;(D.directionalLength!==b||D.pointLength!==x||D.spotLength!==_||D.rectAreaLength!==w||D.hemiLength!==S||D.numDirectionalShadows!==T||D.numPointShadows!==L||D.numSpotShadows!==d||D.numSpotMaps!==I)&&(i.directional.length=b,i.spot.length=_,i.rectArea.length=w,i.point.length=x,i.hemi.length=S,i.directionalShadow.length=T,i.directionalShadowMap.length=T,i.pointShadow.length=L,i.pointShadowMap.length=L,i.spotShadow.length=d,i.spotShadowMap.length=d,i.directionalShadowMatrix.length=T,i.pointShadowMatrix.length=L,i.spotLightMatrix.length=d+I-z,i.spotLightMap.length=I,i.numSpotLightShadowsWithMaps=z,D.directionalLength=b,D.pointLength=x,D.spotLength=_,D.rectAreaLength=w,D.hemiLength=S,D.numDirectionalShadows=T,D.numPointShadows=L,D.numSpotShadows=d,D.numSpotMaps=I,i.version=$v++)}function h(f,p){let m=0,g=0,y=0,b=0,x=0;const _=p.matrixWorldInverse;for(let w=0,S=f.length;w<S;w++){const T=f[w];if(T.isDirectionalLight){const L=i.directional[m];L.direction.setFromMatrixPosition(T.matrixWorld),r.setFromMatrixPosition(T.target.matrixWorld),L.direction.sub(r),L.direction.transformDirection(_),m++}else if(T.isSpotLight){const L=i.spot[y];L.position.setFromMatrixPosition(T.matrixWorld),L.position.applyMatrix4(_),L.direction.setFromMatrixPosition(T.matrixWorld),r.setFromMatrixPosition(T.target.matrixWorld),L.direction.sub(r),L.direction.transformDirection(_),y++}else if(T.isRectAreaLight){const L=i.rectArea[b];L.position.setFromMatrixPosition(T.matrixWorld),L.position.applyMatrix4(_),o.identity(),a.copy(T.matrixWorld),a.premultiply(_),o.extractRotation(a),L.halfWidth.set(T.width*.5,0,0),L.halfHeight.set(0,T.height*.5,0),L.halfWidth.applyMatrix4(o),L.halfHeight.applyMatrix4(o),b++}else if(T.isPointLight){const L=i.point[g];L.position.setFromMatrixPosition(T.matrixWorld),L.position.applyMatrix4(_),g++}else if(T.isHemisphereLight){const L=i.hemi[x];L.direction.setFromMatrixPosition(T.matrixWorld),L.direction.transformDirection(_),x++}}}return{setup:c,setupView:h,state:i}}function zu(s,e){const t=new Qv(s,e),n=[],i=[];function r(){n.length=0,i.length=0}function a(p){n.push(p)}function o(p){i.push(p)}function c(p){t.setup(n,p)}function h(p){t.setupView(n,p)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:c,setupLightsView:h,pushLight:a,pushShadow:o}}function ex(s,e){let t=new WeakMap;function n(r,a=0){const o=t.get(r);let c;return o===void 0?(c=new zu(s,e),t.set(r,[c])):a>=o.length?(c=new zu(s,e),o.push(c)):c=o[a],c}function i(){t=new WeakMap}return{get:n,dispose:i}}class vh extends Tn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=xf,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class xh extends Tn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const tx=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,nx=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function ix(s,e,t){let n=new Yo;const i=new ge,r=new ge,a=new Ot,o=new vh({depthPacking:Mf}),c=new xh,h={},f=t.maxTextureSize,p={[Oi]:In,[In]:Oi,[mi]:mi},m=new vi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ge},radius:{value:4}},vertexShader:tx,fragmentShader:nx}),g=m.clone();g.defines.HORIZONTAL_PASS=1;const y=new Tt;y.setAttribute("position",new Ft(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new _n(y,m),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=th;let _=this.type;this.render=function(L,d,I){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||L.length===0)return;const z=s.getRenderTarget(),C=s.getActiveCubeFace(),D=s.getActiveMipmapLevel(),le=s.state;le.setBlending(Di),le.buffers.color.setClear(1,1,1,1),le.buffers.depth.setTest(!0),le.setScissorTest(!1);const te=_!==pi&&this.type===pi,q=_===pi&&this.type!==pi;for(let J=0,re=L.length;J<re;J++){const fe=L[J],ue=fe.shadow;if(ue===void 0){console.warn("THREE.WebGLShadowMap:",fe,"has no shadow.");continue}if(ue.autoUpdate===!1&&ue.needsUpdate===!1)continue;i.copy(ue.mapSize);const pe=ue.getFrameExtents();if(i.multiply(pe),r.copy(ue.mapSize),(i.x>f||i.y>f)&&(i.x>f&&(r.x=Math.floor(f/pe.x),i.x=r.x*pe.x,ue.mapSize.x=r.x),i.y>f&&(r.y=Math.floor(f/pe.y),i.y=r.y*pe.y,ue.mapSize.y=r.y)),ue.map===null||te===!0||q===!0){const xe=this.type!==pi?{minFilter:Qt,magFilter:Qt}:{};ue.map!==null&&ue.map.dispose(),ue.map=new ii(i.x,i.y,xe),ue.map.texture.name=fe.name+".shadowMap",ue.camera.updateProjectionMatrix()}s.setRenderTarget(ue.map),s.clear();const Te=ue.getViewportCount();for(let xe=0;xe<Te;xe++){const K=ue.getViewport(xe);a.set(r.x*K.x,r.y*K.y,r.x*K.z,r.y*K.w),le.viewport(a),ue.updateMatrices(fe,xe),n=ue.getFrustum(),T(d,I,ue.camera,fe,this.type)}ue.isPointLightShadow!==!0&&this.type===pi&&w(ue,I),ue.needsUpdate=!1}_=this.type,x.needsUpdate=!1,s.setRenderTarget(z,C,D)};function w(L,d){const I=e.update(b);m.defines.VSM_SAMPLES!==L.blurSamples&&(m.defines.VSM_SAMPLES=L.blurSamples,g.defines.VSM_SAMPLES=L.blurSamples,m.needsUpdate=!0,g.needsUpdate=!0),L.mapPass===null&&(L.mapPass=new ii(i.x,i.y)),m.uniforms.shadow_pass.value=L.map.texture,m.uniforms.resolution.value=L.mapSize,m.uniforms.radius.value=L.radius,s.setRenderTarget(L.mapPass),s.clear(),s.renderBufferDirect(d,null,I,m,b,null),g.uniforms.shadow_pass.value=L.mapPass.texture,g.uniforms.resolution.value=L.mapSize,g.uniforms.radius.value=L.radius,s.setRenderTarget(L.map),s.clear(),s.renderBufferDirect(d,null,I,g,b,null)}function S(L,d,I,z){let C=null;const D=I.isPointLight===!0?L.customDistanceMaterial:L.customDepthMaterial;if(D!==void 0)C=D;else if(C=I.isPointLight===!0?c:o,s.localClippingEnabled&&d.clipShadows===!0&&Array.isArray(d.clippingPlanes)&&d.clippingPlanes.length!==0||d.displacementMap&&d.displacementScale!==0||d.alphaMap&&d.alphaTest>0||d.map&&d.alphaTest>0){const le=C.uuid,te=d.uuid;let q=h[le];q===void 0&&(q={},h[le]=q);let J=q[te];J===void 0&&(J=C.clone(),q[te]=J),C=J}if(C.visible=d.visible,C.wireframe=d.wireframe,z===pi?C.side=d.shadowSide!==null?d.shadowSide:d.side:C.side=d.shadowSide!==null?d.shadowSide:p[d.side],C.alphaMap=d.alphaMap,C.alphaTest=d.alphaTest,C.map=d.map,C.clipShadows=d.clipShadows,C.clippingPlanes=d.clippingPlanes,C.clipIntersection=d.clipIntersection,C.displacementMap=d.displacementMap,C.displacementScale=d.displacementScale,C.displacementBias=d.displacementBias,C.wireframeLinewidth=d.wireframeLinewidth,C.linewidth=d.linewidth,I.isPointLight===!0&&C.isMeshDistanceMaterial===!0){const le=s.properties.get(C);le.light=I}return C}function T(L,d,I,z,C){if(L.visible===!1)return;if(L.layers.test(d.layers)&&(L.isMesh||L.isLine||L.isPoints)&&(L.castShadow||L.receiveShadow&&C===pi)&&(!L.frustumCulled||n.intersectsObject(L))){L.modelViewMatrix.multiplyMatrices(I.matrixWorldInverse,L.matrixWorld);const te=e.update(L),q=L.material;if(Array.isArray(q)){const J=te.groups;for(let re=0,fe=J.length;re<fe;re++){const ue=J[re],pe=q[ue.materialIndex];if(pe&&pe.visible){const Te=S(L,pe,z,C);s.renderBufferDirect(I,null,te,Te,L,ue)}}}else if(q.visible){const J=S(L,q,z,C);s.renderBufferDirect(I,null,te,J,L,null)}}const le=L.children;for(let te=0,q=le.length;te<q;te++)T(le[te],d,I,z,C)}}function rx(s,e,t){const n=t.isWebGL2;function i(){let G=!1;const Ne=new Ot;let se=null;const be=new Ot(0,0,0,0);return{setMask:function(we){se!==we&&!G&&(s.colorMask(we,we,we,we),se=we)},setLocked:function(we){G=we},setClear:function(we,vt,Ut,Nt,yn){yn===!0&&(we*=Nt,vt*=Nt,Ut*=Nt),Ne.set(we,vt,Ut,Nt),be.equals(Ne)===!1&&(s.clearColor(we,vt,Ut,Nt),be.copy(Ne))},reset:function(){G=!1,se=null,be.set(-1,0,0,0)}}}function r(){let G=!1,Ne=null,se=null,be=null;return{setTest:function(we){we?Qe(s.DEPTH_TEST):je(s.DEPTH_TEST)},setMask:function(we){Ne!==we&&!G&&(s.depthMask(we),Ne=we)},setFunc:function(we){if(se!==we){switch(we){case Yd:s.depthFunc(s.NEVER);break;case jd:s.depthFunc(s.ALWAYS);break;case Zd:s.depthFunc(s.LESS);break;case No:s.depthFunc(s.LEQUAL);break;case Jd:s.depthFunc(s.EQUAL);break;case $d:s.depthFunc(s.GEQUAL);break;case Kd:s.depthFunc(s.GREATER);break;case Qd:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}se=we}},setLocked:function(we){G=we},setClear:function(we){be!==we&&(s.clearDepth(we),be=we)},reset:function(){G=!1,Ne=null,se=null,be=null}}}function a(){let G=!1,Ne=null,se=null,be=null,we=null,vt=null,Ut=null,Nt=null,yn=null;return{setTest:function(Lt){G||(Lt?Qe(s.STENCIL_TEST):je(s.STENCIL_TEST))},setMask:function(Lt){Ne!==Lt&&!G&&(s.stencilMask(Lt),Ne=Lt)},setFunc:function(Lt,gn,sn){(se!==Lt||be!==gn||we!==sn)&&(s.stencilFunc(Lt,gn,sn),se=Lt,be=gn,we=sn)},setOp:function(Lt,gn,sn){(vt!==Lt||Ut!==gn||Nt!==sn)&&(s.stencilOp(Lt,gn,sn),vt=Lt,Ut=gn,Nt=sn)},setLocked:function(Lt){G=Lt},setClear:function(Lt){yn!==Lt&&(s.clearStencil(Lt),yn=Lt)},reset:function(){G=!1,Ne=null,se=null,be=null,we=null,vt=null,Ut=null,Nt=null,yn=null}}}const o=new i,c=new r,h=new a,f=new WeakMap,p=new WeakMap;let m={},g={},y=new WeakMap,b=[],x=null,_=!1,w=null,S=null,T=null,L=null,d=null,I=null,z=null,C=!1,D=null,le=null,te=null,q=null,J=null;const re=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let fe=!1,ue=0;const pe=s.getParameter(s.VERSION);pe.indexOf("WebGL")!==-1?(ue=parseFloat(/^WebGL (\d)/.exec(pe)[1]),fe=ue>=1):pe.indexOf("OpenGL ES")!==-1&&(ue=parseFloat(/^OpenGL ES (\d)/.exec(pe)[1]),fe=ue>=2);let Te=null,xe={};const K=s.getParameter(s.SCISSOR_BOX),ae=s.getParameter(s.VIEWPORT),Ue=new Ot().fromArray(K),ze=new Ot().fromArray(ae);function Ge(G,Ne,se,be){const we=new Uint8Array(4),vt=s.createTexture();s.bindTexture(G,vt),s.texParameteri(G,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(G,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let Ut=0;Ut<se;Ut++)n&&(G===s.TEXTURE_3D||G===s.TEXTURE_2D_ARRAY)?s.texImage3D(Ne,0,s.RGBA,1,1,be,0,s.RGBA,s.UNSIGNED_BYTE,we):s.texImage2D(Ne+Ut,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,we);return vt}const tt={};tt[s.TEXTURE_2D]=Ge(s.TEXTURE_2D,s.TEXTURE_2D,1),tt[s.TEXTURE_CUBE_MAP]=Ge(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(tt[s.TEXTURE_2D_ARRAY]=Ge(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),tt[s.TEXTURE_3D]=Ge(s.TEXTURE_3D,s.TEXTURE_3D,1,1)),o.setClear(0,0,0,1),c.setClear(1),h.setClear(0),Qe(s.DEPTH_TEST),c.setFunc(No),Me(!1),$e(fc),Qe(s.CULL_FACE),me(Di);function Qe(G){m[G]!==!0&&(s.enable(G),m[G]=!0)}function je(G){m[G]!==!1&&(s.disable(G),m[G]=!1)}function _t(G,Ne){return g[G]!==Ne?(s.bindFramebuffer(G,Ne),g[G]=Ne,n&&(G===s.DRAW_FRAMEBUFFER&&(g[s.FRAMEBUFFER]=Ne),G===s.FRAMEBUFFER&&(g[s.DRAW_FRAMEBUFFER]=Ne)),!0):!1}function Pt(G,Ne){let se=b,be=!1;if(G)if(se=y.get(Ne),se===void 0&&(se=[],y.set(Ne,se)),G.isWebGLMultipleRenderTargets){const we=G.texture;if(se.length!==we.length||se[0]!==s.COLOR_ATTACHMENT0){for(let vt=0,Ut=we.length;vt<Ut;vt++)se[vt]=s.COLOR_ATTACHMENT0+vt;se.length=we.length,be=!0}}else se[0]!==s.COLOR_ATTACHMENT0&&(se[0]=s.COLOR_ATTACHMENT0,be=!0);else se[0]!==s.BACK&&(se[0]=s.BACK,be=!0);be&&(t.isWebGL2?s.drawBuffers(se):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(se))}function nt(G){return x!==G?(s.useProgram(G),x=G,!0):!1}const k={[Ar]:s.FUNC_ADD,[Od]:s.FUNC_SUBTRACT,[Fd]:s.FUNC_REVERSE_SUBTRACT};if(n)k[_c]=s.MIN,k[yc]=s.MAX;else{const G=e.get("EXT_blend_minmax");G!==null&&(k[_c]=G.MIN_EXT,k[yc]=G.MAX_EXT)}const Pe={[Bd]:s.ZERO,[zd]:s.ONE,[kd]:s.SRC_COLOR,[nh]:s.SRC_ALPHA,[qd]:s.SRC_ALPHA_SATURATE,[Wd]:s.DST_COLOR,[Vd]:s.DST_ALPHA,[Hd]:s.ONE_MINUS_SRC_COLOR,[ih]:s.ONE_MINUS_SRC_ALPHA,[Xd]:s.ONE_MINUS_DST_COLOR,[Gd]:s.ONE_MINUS_DST_ALPHA};function me(G,Ne,se,be,we,vt,Ut,Nt){if(G===Di){_===!0&&(je(s.BLEND),_=!1);return}if(_===!1&&(Qe(s.BLEND),_=!0),G!==Nd){if(G!==w||Nt!==C){if((S!==Ar||d!==Ar)&&(s.blendEquation(s.FUNC_ADD),S=Ar,d=Ar),Nt)switch(G){case Dr:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case pc:s.blendFunc(s.ONE,s.ONE);break;case mc:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case gc:s.blendFuncSeparate(s.ZERO,s.SRC_COLOR,s.ZERO,s.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}else switch(G){case Dr:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case pc:s.blendFunc(s.SRC_ALPHA,s.ONE);break;case mc:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case gc:s.blendFunc(s.ZERO,s.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}T=null,L=null,I=null,z=null,w=G,C=Nt}return}we=we||Ne,vt=vt||se,Ut=Ut||be,(Ne!==S||we!==d)&&(s.blendEquationSeparate(k[Ne],k[we]),S=Ne,d=we),(se!==T||be!==L||vt!==I||Ut!==z)&&(s.blendFuncSeparate(Pe[se],Pe[be],Pe[vt],Pe[Ut]),T=se,L=be,I=vt,z=Ut),w=G,C=!1}function Ee(G,Ne){G.side===mi?je(s.CULL_FACE):Qe(s.CULL_FACE);let se=G.side===In;Ne&&(se=!se),Me(se),G.blending===Dr&&G.transparent===!1?me(Di):me(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.premultipliedAlpha),c.setFunc(G.depthFunc),c.setTest(G.depthTest),c.setMask(G.depthWrite),o.setMask(G.colorWrite);const be=G.stencilWrite;h.setTest(be),be&&(h.setMask(G.stencilWriteMask),h.setFunc(G.stencilFunc,G.stencilRef,G.stencilFuncMask),h.setOp(G.stencilFail,G.stencilZFail,G.stencilZPass)),Fe(G.polygonOffset,G.polygonOffsetFactor,G.polygonOffsetUnits),G.alphaToCoverage===!0?Qe(s.SAMPLE_ALPHA_TO_COVERAGE):je(s.SAMPLE_ALPHA_TO_COVERAGE)}function Me(G){D!==G&&(G?s.frontFace(s.CW):s.frontFace(s.CCW),D=G)}function $e(G){G!==Id?(Qe(s.CULL_FACE),G!==le&&(G===fc?s.cullFace(s.BACK):G===Dd?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):je(s.CULL_FACE),le=G}function ke(G){G!==te&&(fe&&s.lineWidth(G),te=G)}function Fe(G,Ne,se){G?(Qe(s.POLYGON_OFFSET_FILL),(q!==Ne||J!==se)&&(s.polygonOffset(Ne,se),q=Ne,J=se)):je(s.POLYGON_OFFSET_FILL)}function et(G){G?Qe(s.SCISSOR_TEST):je(s.SCISSOR_TEST)}function pt(G){G===void 0&&(G=s.TEXTURE0+re-1),Te!==G&&(s.activeTexture(G),Te=G)}function Ie(G,Ne,se){se===void 0&&(Te===null?se=s.TEXTURE0+re-1:se=Te);let be=xe[se];be===void 0&&(be={type:void 0,texture:void 0},xe[se]=be),(be.type!==G||be.texture!==Ne)&&(Te!==se&&(s.activeTexture(se),Te=se),s.bindTexture(G,Ne||tt[G]),be.type=G,be.texture=Ne)}function O(){const G=xe[Te];G!==void 0&&G.type!==void 0&&(s.bindTexture(G.type,null),G.type=void 0,G.texture=void 0)}function R(){try{s.compressedTexImage2D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Q(){try{s.compressedTexImage3D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Re(){try{s.texSubImage2D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Se(){try{s.texSubImage3D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ce(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function We(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ae(){try{s.texStorage2D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ne(){try{s.texStorage3D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function V(){try{s.texImage2D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ve(){try{s.texImage3D.apply(s,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Be(G){Ue.equals(G)===!1&&(s.scissor(G.x,G.y,G.z,G.w),Ue.copy(G))}function Le(G){ze.equals(G)===!1&&(s.viewport(G.x,G.y,G.z,G.w),ze.copy(G))}function De(G,Ne){let se=p.get(Ne);se===void 0&&(se=new WeakMap,p.set(Ne,se));let be=se.get(G);be===void 0&&(be=s.getUniformBlockIndex(Ne,G.name),se.set(G,be))}function st(G,Ne){const be=p.get(Ne).get(G);f.get(Ne)!==be&&(s.uniformBlockBinding(Ne,be,G.__bindingPointIndex),f.set(Ne,be))}function bt(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),n===!0&&(s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),m={},Te=null,xe={},g={},y=new WeakMap,b=[],x=null,_=!1,w=null,S=null,T=null,L=null,d=null,I=null,z=null,C=!1,D=null,le=null,te=null,q=null,J=null,Ue.set(0,0,s.canvas.width,s.canvas.height),ze.set(0,0,s.canvas.width,s.canvas.height),o.reset(),c.reset(),h.reset()}return{buffers:{color:o,depth:c,stencil:h},enable:Qe,disable:je,bindFramebuffer:_t,drawBuffers:Pt,useProgram:nt,setBlending:me,setMaterial:Ee,setFlipSided:Me,setCullFace:$e,setLineWidth:ke,setPolygonOffset:Fe,setScissorTest:et,activeTexture:pt,bindTexture:Ie,unbindTexture:O,compressedTexImage2D:R,compressedTexImage3D:Q,texImage2D:V,texImage3D:ve,updateUBOMapping:De,uniformBlockBinding:st,texStorage2D:Ae,texStorage3D:ne,texSubImage2D:Re,texSubImage3D:Se,compressedTexSubImage2D:Ce,compressedTexSubImage3D:We,scissor:Be,viewport:Le,reset:bt}}function sx(s,e,t,n,i,r,a){const o=i.isWebGL2,c=i.maxTextures,h=i.maxCubemapSize,f=i.maxTextureSize,p=i.maxSamples,m=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,g=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),y=new WeakMap;let b;const x=new WeakMap;let _=!1;try{_=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function w(O,R){return _?new OffscreenCanvas(O,R):ua("canvas")}function S(O,R,Q,Re){let Se=1;if((O.width>Re||O.height>Re)&&(Se=Re/Math.max(O.width,O.height)),Se<1||R===!0)if(typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&O instanceof ImageBitmap){const Ce=R?Bo:Math.floor,We=Ce(Se*O.width),Ae=Ce(Se*O.height);b===void 0&&(b=w(We,Ae));const ne=Q?w(We,Ae):b;return ne.width=We,ne.height=Ae,ne.getContext("2d").drawImage(O,0,0,We,Ae),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+O.width+"x"+O.height+") to ("+We+"x"+Ae+")."),ne}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+O.width+"x"+O.height+")."),O;return O}function T(O){return Xc(O.width)&&Xc(O.height)}function L(O){return o?!1:O.wrapS!==Sn||O.wrapT!==Sn||O.minFilter!==Qt&&O.minFilter!==en}function d(O,R){return O.generateMipmaps&&R&&O.minFilter!==Qt&&O.minFilter!==en}function I(O){s.generateMipmap(O)}function z(O,R,Q,Re,Se=!1){if(o===!1)return R;if(O!==null){if(s[O]!==void 0)return s[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}let Ce=R;return R===s.RED&&(Q===s.FLOAT&&(Ce=s.R32F),Q===s.HALF_FLOAT&&(Ce=s.R16F),Q===s.UNSIGNED_BYTE&&(Ce=s.R8)),R===s.RED_INTEGER&&(Q===s.UNSIGNED_BYTE&&(Ce=s.R8UI),Q===s.UNSIGNED_SHORT&&(Ce=s.R16UI),Q===s.UNSIGNED_INT&&(Ce=s.R32UI),Q===s.BYTE&&(Ce=s.R8I),Q===s.SHORT&&(Ce=s.R16I),Q===s.INT&&(Ce=s.R32I)),R===s.RG&&(Q===s.FLOAT&&(Ce=s.RG32F),Q===s.HALF_FLOAT&&(Ce=s.RG16F),Q===s.UNSIGNED_BYTE&&(Ce=s.RG8)),R===s.RGBA&&(Q===s.FLOAT&&(Ce=s.RGBA32F),Q===s.HALF_FLOAT&&(Ce=s.RGBA16F),Q===s.UNSIGNED_BYTE&&(Ce=Re===Bt&&Se===!1?s.SRGB8_ALPHA8:s.RGBA8),Q===s.UNSIGNED_SHORT_4_4_4_4&&(Ce=s.RGBA4),Q===s.UNSIGNED_SHORT_5_5_5_1&&(Ce=s.RGB5_A1)),(Ce===s.R16F||Ce===s.R32F||Ce===s.RG16F||Ce===s.RG32F||Ce===s.RGBA16F||Ce===s.RGBA32F)&&e.get("EXT_color_buffer_float"),Ce}function C(O,R,Q){return d(O,Q)===!0||O.isFramebufferTexture&&O.minFilter!==Qt&&O.minFilter!==en?Math.log2(Math.max(R.width,R.height))+1:O.mipmaps!==void 0&&O.mipmaps.length>0?O.mipmaps.length:O.isCompressedTexture&&Array.isArray(O.image)?R.mipmaps.length:1}function D(O){return O===Qt||O===Oo||O===$s?s.NEAREST:s.LINEAR}function le(O){const R=O.target;R.removeEventListener("dispose",le),q(R),R.isVideoTexture&&y.delete(R)}function te(O){const R=O.target;R.removeEventListener("dispose",te),re(R)}function q(O){const R=n.get(O);if(R.__webglInit===void 0)return;const Q=O.source,Re=x.get(Q);if(Re){const Se=Re[R.__cacheKey];Se.usedTimes--,Se.usedTimes===0&&J(O),Object.keys(Re).length===0&&x.delete(Q)}n.remove(O)}function J(O){const R=n.get(O);s.deleteTexture(R.__webglTexture);const Q=O.source,Re=x.get(Q);delete Re[R.__cacheKey],a.memory.textures--}function re(O){const R=O.texture,Q=n.get(O),Re=n.get(R);if(Re.__webglTexture!==void 0&&(s.deleteTexture(Re.__webglTexture),a.memory.textures--),O.depthTexture&&O.depthTexture.dispose(),O.isWebGLCubeRenderTarget)for(let Se=0;Se<6;Se++){if(Array.isArray(Q.__webglFramebuffer[Se]))for(let Ce=0;Ce<Q.__webglFramebuffer[Se].length;Ce++)s.deleteFramebuffer(Q.__webglFramebuffer[Se][Ce]);else s.deleteFramebuffer(Q.__webglFramebuffer[Se]);Q.__webglDepthbuffer&&s.deleteRenderbuffer(Q.__webglDepthbuffer[Se])}else{if(Array.isArray(Q.__webglFramebuffer))for(let Se=0;Se<Q.__webglFramebuffer.length;Se++)s.deleteFramebuffer(Q.__webglFramebuffer[Se]);else s.deleteFramebuffer(Q.__webglFramebuffer);if(Q.__webglDepthbuffer&&s.deleteRenderbuffer(Q.__webglDepthbuffer),Q.__webglMultisampledFramebuffer&&s.deleteFramebuffer(Q.__webglMultisampledFramebuffer),Q.__webglColorRenderbuffer)for(let Se=0;Se<Q.__webglColorRenderbuffer.length;Se++)Q.__webglColorRenderbuffer[Se]&&s.deleteRenderbuffer(Q.__webglColorRenderbuffer[Se]);Q.__webglDepthRenderbuffer&&s.deleteRenderbuffer(Q.__webglDepthRenderbuffer)}if(O.isWebGLMultipleRenderTargets)for(let Se=0,Ce=R.length;Se<Ce;Se++){const We=n.get(R[Se]);We.__webglTexture&&(s.deleteTexture(We.__webglTexture),a.memory.textures--),n.remove(R[Se])}n.remove(R),n.remove(O)}let fe=0;function ue(){fe=0}function pe(){const O=fe;return O>=c&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+c),fe+=1,O}function Te(O){const R=[];return R.push(O.wrapS),R.push(O.wrapT),R.push(O.wrapR||0),R.push(O.magFilter),R.push(O.minFilter),R.push(O.anisotropy),R.push(O.internalFormat),R.push(O.format),R.push(O.type),R.push(O.generateMipmaps),R.push(O.premultiplyAlpha),R.push(O.flipY),R.push(O.unpackAlignment),R.push(O.colorSpace),R.join()}function xe(O,R){const Q=n.get(O);if(O.isVideoTexture&&pt(O),O.isRenderTargetTexture===!1&&O.version>0&&Q.__version!==O.version){const Re=O.image;if(Re===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Re.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{_t(Q,O,R);return}}t.bindTexture(s.TEXTURE_2D,Q.__webglTexture,s.TEXTURE0+R)}function K(O,R){const Q=n.get(O);if(O.version>0&&Q.__version!==O.version){_t(Q,O,R);return}t.bindTexture(s.TEXTURE_2D_ARRAY,Q.__webglTexture,s.TEXTURE0+R)}function ae(O,R){const Q=n.get(O);if(O.version>0&&Q.__version!==O.version){_t(Q,O,R);return}t.bindTexture(s.TEXTURE_3D,Q.__webglTexture,s.TEXTURE0+R)}function Ue(O,R){const Q=n.get(O);if(O.version>0&&Q.__version!==O.version){Pt(Q,O,R);return}t.bindTexture(s.TEXTURE_CUBE_MAP,Q.__webglTexture,s.TEXTURE0+R)}const ze={[ra]:s.REPEAT,[Sn]:s.CLAMP_TO_EDGE,[sa]:s.MIRRORED_REPEAT},Ge={[Qt]:s.NEAREST,[Oo]:s.NEAREST_MIPMAP_NEAREST,[$s]:s.NEAREST_MIPMAP_LINEAR,[en]:s.LINEAR,[rh]:s.LINEAR_MIPMAP_NEAREST,[ir]:s.LINEAR_MIPMAP_LINEAR},tt={[Ef]:s.NEVER,[Lf]:s.ALWAYS,[Tf]:s.LESS,[Af]:s.LEQUAL,[wf]:s.EQUAL,[Pf]:s.GEQUAL,[Cf]:s.GREATER,[Rf]:s.NOTEQUAL};function Qe(O,R,Q){if(Q?(s.texParameteri(O,s.TEXTURE_WRAP_S,ze[R.wrapS]),s.texParameteri(O,s.TEXTURE_WRAP_T,ze[R.wrapT]),(O===s.TEXTURE_3D||O===s.TEXTURE_2D_ARRAY)&&s.texParameteri(O,s.TEXTURE_WRAP_R,ze[R.wrapR]),s.texParameteri(O,s.TEXTURE_MAG_FILTER,Ge[R.magFilter]),s.texParameteri(O,s.TEXTURE_MIN_FILTER,Ge[R.minFilter])):(s.texParameteri(O,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(O,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE),(O===s.TEXTURE_3D||O===s.TEXTURE_2D_ARRAY)&&s.texParameteri(O,s.TEXTURE_WRAP_R,s.CLAMP_TO_EDGE),(R.wrapS!==Sn||R.wrapT!==Sn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(O,s.TEXTURE_MAG_FILTER,D(R.magFilter)),s.texParameteri(O,s.TEXTURE_MIN_FILTER,D(R.minFilter)),R.minFilter!==Qt&&R.minFilter!==en&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),R.compareFunction&&(s.texParameteri(O,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(O,s.TEXTURE_COMPARE_FUNC,tt[R.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const Re=e.get("EXT_texture_filter_anisotropic");if(R.magFilter===Qt||R.minFilter!==$s&&R.minFilter!==ir||R.type===gi&&e.has("OES_texture_float_linear")===!1||o===!1&&R.type===bs&&e.has("OES_texture_half_float_linear")===!1)return;(R.anisotropy>1||n.get(R).__currentAnisotropy)&&(s.texParameterf(O,Re.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,i.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy)}}function je(O,R){let Q=!1;O.__webglInit===void 0&&(O.__webglInit=!0,R.addEventListener("dispose",le));const Re=R.source;let Se=x.get(Re);Se===void 0&&(Se={},x.set(Re,Se));const Ce=Te(R);if(Ce!==O.__cacheKey){Se[Ce]===void 0&&(Se[Ce]={texture:s.createTexture(),usedTimes:0},a.memory.textures++,Q=!0),Se[Ce].usedTimes++;const We=Se[O.__cacheKey];We!==void 0&&(Se[O.__cacheKey].usedTimes--,We.usedTimes===0&&J(R)),O.__cacheKey=Ce,O.__webglTexture=Se[Ce].texture}return Q}function _t(O,R,Q){let Re=s.TEXTURE_2D;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(Re=s.TEXTURE_2D_ARRAY),R.isData3DTexture&&(Re=s.TEXTURE_3D);const Se=je(O,R),Ce=R.source;t.bindTexture(Re,O.__webglTexture,s.TEXTURE0+Q);const We=n.get(Ce);if(Ce.version!==We.__version||Se===!0){t.activeTexture(s.TEXTURE0+Q),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,R.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,R.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE);const Ae=L(R)&&T(R.image)===!1;let ne=S(R.image,Ae,!1,f);ne=Ie(R,ne);const V=T(ne)||o,ve=r.convert(R.format,R.colorSpace);let Be=r.convert(R.type),Le=z(R.internalFormat,ve,Be,R.colorSpace,R.isVideoTexture);Qe(Re,R,V);let De;const st=R.mipmaps,bt=o&&R.isVideoTexture!==!0,G=We.__version===void 0||Se===!0,Ne=C(R,ne,V);if(R.isDepthTexture)Le=s.DEPTH_COMPONENT,o?R.type===gi?Le=s.DEPTH_COMPONENT32F:R.type===Ii?Le=s.DEPTH_COMPONENT24:R.type===Ki?Le=s.DEPTH24_STENCIL8:Le=s.DEPTH_COMPONENT16:R.type===gi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),R.format===Qi&&Le===s.DEPTH_COMPONENT&&R.type!==Vo&&R.type!==Ii&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),R.type=Ii,Be=r.convert(R.type)),R.format===Or&&Le===s.DEPTH_COMPONENT&&(Le=s.DEPTH_STENCIL,R.type!==Ki&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),R.type=Ki,Be=r.convert(R.type))),G&&(bt?t.texStorage2D(s.TEXTURE_2D,1,Le,ne.width,ne.height):t.texImage2D(s.TEXTURE_2D,0,Le,ne.width,ne.height,0,ve,Be,null));else if(R.isDataTexture)if(st.length>0&&V){bt&&G&&t.texStorage2D(s.TEXTURE_2D,Ne,Le,st[0].width,st[0].height);for(let se=0,be=st.length;se<be;se++)De=st[se],bt?t.texSubImage2D(s.TEXTURE_2D,se,0,0,De.width,De.height,ve,Be,De.data):t.texImage2D(s.TEXTURE_2D,se,Le,De.width,De.height,0,ve,Be,De.data);R.generateMipmaps=!1}else bt?(G&&t.texStorage2D(s.TEXTURE_2D,Ne,Le,ne.width,ne.height),t.texSubImage2D(s.TEXTURE_2D,0,0,0,ne.width,ne.height,ve,Be,ne.data)):t.texImage2D(s.TEXTURE_2D,0,Le,ne.width,ne.height,0,ve,Be,ne.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){bt&&G&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Ne,Le,st[0].width,st[0].height,ne.depth);for(let se=0,be=st.length;se<be;se++)De=st[se],R.format!==Wn?ve!==null?bt?t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,se,0,0,0,De.width,De.height,ne.depth,ve,De.data,0,0):t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,se,Le,De.width,De.height,ne.depth,0,De.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):bt?t.texSubImage3D(s.TEXTURE_2D_ARRAY,se,0,0,0,De.width,De.height,ne.depth,ve,Be,De.data):t.texImage3D(s.TEXTURE_2D_ARRAY,se,Le,De.width,De.height,ne.depth,0,ve,Be,De.data)}else{bt&&G&&t.texStorage2D(s.TEXTURE_2D,Ne,Le,st[0].width,st[0].height);for(let se=0,be=st.length;se<be;se++)De=st[se],R.format!==Wn?ve!==null?bt?t.compressedTexSubImage2D(s.TEXTURE_2D,se,0,0,De.width,De.height,ve,De.data):t.compressedTexImage2D(s.TEXTURE_2D,se,Le,De.width,De.height,0,De.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):bt?t.texSubImage2D(s.TEXTURE_2D,se,0,0,De.width,De.height,ve,Be,De.data):t.texImage2D(s.TEXTURE_2D,se,Le,De.width,De.height,0,ve,Be,De.data)}else if(R.isDataArrayTexture)bt?(G&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Ne,Le,ne.width,ne.height,ne.depth),t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,ne.width,ne.height,ne.depth,ve,Be,ne.data)):t.texImage3D(s.TEXTURE_2D_ARRAY,0,Le,ne.width,ne.height,ne.depth,0,ve,Be,ne.data);else if(R.isData3DTexture)bt?(G&&t.texStorage3D(s.TEXTURE_3D,Ne,Le,ne.width,ne.height,ne.depth),t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,ne.width,ne.height,ne.depth,ve,Be,ne.data)):t.texImage3D(s.TEXTURE_3D,0,Le,ne.width,ne.height,ne.depth,0,ve,Be,ne.data);else if(R.isFramebufferTexture){if(G)if(bt)t.texStorage2D(s.TEXTURE_2D,Ne,Le,ne.width,ne.height);else{let se=ne.width,be=ne.height;for(let we=0;we<Ne;we++)t.texImage2D(s.TEXTURE_2D,we,Le,se,be,0,ve,Be,null),se>>=1,be>>=1}}else if(st.length>0&&V){bt&&G&&t.texStorage2D(s.TEXTURE_2D,Ne,Le,st[0].width,st[0].height);for(let se=0,be=st.length;se<be;se++)De=st[se],bt?t.texSubImage2D(s.TEXTURE_2D,se,0,0,ve,Be,De):t.texImage2D(s.TEXTURE_2D,se,Le,ve,Be,De);R.generateMipmaps=!1}else bt?(G&&t.texStorage2D(s.TEXTURE_2D,Ne,Le,ne.width,ne.height),t.texSubImage2D(s.TEXTURE_2D,0,0,0,ve,Be,ne)):t.texImage2D(s.TEXTURE_2D,0,Le,ve,Be,ne);d(R,V)&&I(Re),We.__version=Ce.version,R.onUpdate&&R.onUpdate(R)}O.__version=R.version}function Pt(O,R,Q){if(R.image.length!==6)return;const Re=je(O,R),Se=R.source;t.bindTexture(s.TEXTURE_CUBE_MAP,O.__webglTexture,s.TEXTURE0+Q);const Ce=n.get(Se);if(Se.version!==Ce.__version||Re===!0){t.activeTexture(s.TEXTURE0+Q),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,R.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,R.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE);const We=R.isCompressedTexture||R.image[0].isCompressedTexture,Ae=R.image[0]&&R.image[0].isDataTexture,ne=[];for(let se=0;se<6;se++)!We&&!Ae?ne[se]=S(R.image[se],!1,!0,h):ne[se]=Ae?R.image[se].image:R.image[se],ne[se]=Ie(R,ne[se]);const V=ne[0],ve=T(V)||o,Be=r.convert(R.format,R.colorSpace),Le=r.convert(R.type),De=z(R.internalFormat,Be,Le,R.colorSpace),st=o&&R.isVideoTexture!==!0,bt=Ce.__version===void 0||Re===!0;let G=C(R,V,ve);Qe(s.TEXTURE_CUBE_MAP,R,ve);let Ne;if(We){st&&bt&&t.texStorage2D(s.TEXTURE_CUBE_MAP,G,De,V.width,V.height);for(let se=0;se<6;se++){Ne=ne[se].mipmaps;for(let be=0;be<Ne.length;be++){const we=Ne[be];R.format!==Wn?Be!==null?st?t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+se,be,0,0,we.width,we.height,Be,we.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+se,be,De,we.width,we.height,0,we.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):st?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+se,be,0,0,we.width,we.height,Be,Le,we.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+se,be,De,we.width,we.height,0,Be,Le,we.data)}}}else{Ne=R.mipmaps,st&&bt&&(Ne.length>0&&G++,t.texStorage2D(s.TEXTURE_CUBE_MAP,G,De,ne[0].width,ne[0].height));for(let se=0;se<6;se++)if(Ae){st?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+se,0,0,0,ne[se].width,ne[se].height,Be,Le,ne[se].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+se,0,De,ne[se].width,ne[se].height,0,Be,Le,ne[se].data);for(let be=0;be<Ne.length;be++){const vt=Ne[be].image[se].image;st?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+se,be+1,0,0,vt.width,vt.height,Be,Le,vt.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+se,be+1,De,vt.width,vt.height,0,Be,Le,vt.data)}}else{st?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+se,0,0,0,Be,Le,ne[se]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+se,0,De,Be,Le,ne[se]);for(let be=0;be<Ne.length;be++){const we=Ne[be];st?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+se,be+1,0,0,Be,Le,we.image[se]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+se,be+1,De,Be,Le,we.image[se])}}}d(R,ve)&&I(s.TEXTURE_CUBE_MAP),Ce.__version=Se.version,R.onUpdate&&R.onUpdate(R)}O.__version=R.version}function nt(O,R,Q,Re,Se,Ce){const We=r.convert(Q.format,Q.colorSpace),Ae=r.convert(Q.type),ne=z(Q.internalFormat,We,Ae,Q.colorSpace);if(!n.get(R).__hasExternalTextures){const ve=Math.max(1,R.width>>Ce),Be=Math.max(1,R.height>>Ce);Se===s.TEXTURE_3D||Se===s.TEXTURE_2D_ARRAY?t.texImage3D(Se,Ce,ne,ve,Be,R.depth,0,We,Ae,null):t.texImage2D(Se,Ce,ne,ve,Be,0,We,Ae,null)}t.bindFramebuffer(s.FRAMEBUFFER,O),et(R)?m.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,Re,Se,n.get(Q).__webglTexture,0,Fe(R)):(Se===s.TEXTURE_2D||Se>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&Se<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,Re,Se,n.get(Q).__webglTexture,Ce),t.bindFramebuffer(s.FRAMEBUFFER,null)}function k(O,R,Q){if(s.bindRenderbuffer(s.RENDERBUFFER,O),R.depthBuffer&&!R.stencilBuffer){let Re=s.DEPTH_COMPONENT16;if(Q||et(R)){const Se=R.depthTexture;Se&&Se.isDepthTexture&&(Se.type===gi?Re=s.DEPTH_COMPONENT32F:Se.type===Ii&&(Re=s.DEPTH_COMPONENT24));const Ce=Fe(R);et(R)?m.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Ce,Re,R.width,R.height):s.renderbufferStorageMultisample(s.RENDERBUFFER,Ce,Re,R.width,R.height)}else s.renderbufferStorage(s.RENDERBUFFER,Re,R.width,R.height);s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.RENDERBUFFER,O)}else if(R.depthBuffer&&R.stencilBuffer){const Re=Fe(R);Q&&et(R)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,Re,s.DEPTH24_STENCIL8,R.width,R.height):et(R)?m.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Re,s.DEPTH24_STENCIL8,R.width,R.height):s.renderbufferStorage(s.RENDERBUFFER,s.DEPTH_STENCIL,R.width,R.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.RENDERBUFFER,O)}else{const Re=R.isWebGLMultipleRenderTargets===!0?R.texture:[R.texture];for(let Se=0;Se<Re.length;Se++){const Ce=Re[Se],We=r.convert(Ce.format,Ce.colorSpace),Ae=r.convert(Ce.type),ne=z(Ce.internalFormat,We,Ae,Ce.colorSpace),V=Fe(R);Q&&et(R)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,V,ne,R.width,R.height):et(R)?m.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,V,ne,R.width,R.height):s.renderbufferStorage(s.RENDERBUFFER,ne,R.width,R.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function Pe(O,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,O),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(R.depthTexture).__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),xe(R.depthTexture,0);const Re=n.get(R.depthTexture).__webglTexture,Se=Fe(R);if(R.depthTexture.format===Qi)et(R)?m.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,Re,0,Se):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,Re,0);else if(R.depthTexture.format===Or)et(R)?m.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,Re,0,Se):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,Re,0);else throw new Error("Unknown depthTexture format")}function me(O){const R=n.get(O),Q=O.isWebGLCubeRenderTarget===!0;if(O.depthTexture&&!R.__autoAllocateDepthBuffer){if(Q)throw new Error("target.depthTexture not supported in Cube render targets");Pe(R.__webglFramebuffer,O)}else if(Q){R.__webglDepthbuffer=[];for(let Re=0;Re<6;Re++)t.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer[Re]),R.__webglDepthbuffer[Re]=s.createRenderbuffer(),k(R.__webglDepthbuffer[Re],O,!1)}else t.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer),R.__webglDepthbuffer=s.createRenderbuffer(),k(R.__webglDepthbuffer,O,!1);t.bindFramebuffer(s.FRAMEBUFFER,null)}function Ee(O,R,Q){const Re=n.get(O);R!==void 0&&nt(Re.__webglFramebuffer,O,O.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),Q!==void 0&&me(O)}function Me(O){const R=O.texture,Q=n.get(O),Re=n.get(R);O.addEventListener("dispose",te),O.isWebGLMultipleRenderTargets!==!0&&(Re.__webglTexture===void 0&&(Re.__webglTexture=s.createTexture()),Re.__version=R.version,a.memory.textures++);const Se=O.isWebGLCubeRenderTarget===!0,Ce=O.isWebGLMultipleRenderTargets===!0,We=T(O)||o;if(Se){Q.__webglFramebuffer=[];for(let Ae=0;Ae<6;Ae++)if(o&&R.mipmaps&&R.mipmaps.length>0){Q.__webglFramebuffer[Ae]=[];for(let ne=0;ne<R.mipmaps.length;ne++)Q.__webglFramebuffer[Ae][ne]=s.createFramebuffer()}else Q.__webglFramebuffer[Ae]=s.createFramebuffer()}else{if(o&&R.mipmaps&&R.mipmaps.length>0){Q.__webglFramebuffer=[];for(let Ae=0;Ae<R.mipmaps.length;Ae++)Q.__webglFramebuffer[Ae]=s.createFramebuffer()}else Q.__webglFramebuffer=s.createFramebuffer();if(Ce)if(i.drawBuffers){const Ae=O.texture;for(let ne=0,V=Ae.length;ne<V;ne++){const ve=n.get(Ae[ne]);ve.__webglTexture===void 0&&(ve.__webglTexture=s.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&O.samples>0&&et(O)===!1){const Ae=Ce?R:[R];Q.__webglMultisampledFramebuffer=s.createFramebuffer(),Q.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,Q.__webglMultisampledFramebuffer);for(let ne=0;ne<Ae.length;ne++){const V=Ae[ne];Q.__webglColorRenderbuffer[ne]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,Q.__webglColorRenderbuffer[ne]);const ve=r.convert(V.format,V.colorSpace),Be=r.convert(V.type),Le=z(V.internalFormat,ve,Be,V.colorSpace,O.isXRRenderTarget===!0),De=Fe(O);s.renderbufferStorageMultisample(s.RENDERBUFFER,De,Le,O.width,O.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+ne,s.RENDERBUFFER,Q.__webglColorRenderbuffer[ne])}s.bindRenderbuffer(s.RENDERBUFFER,null),O.depthBuffer&&(Q.__webglDepthRenderbuffer=s.createRenderbuffer(),k(Q.__webglDepthRenderbuffer,O,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(Se){t.bindTexture(s.TEXTURE_CUBE_MAP,Re.__webglTexture),Qe(s.TEXTURE_CUBE_MAP,R,We);for(let Ae=0;Ae<6;Ae++)if(o&&R.mipmaps&&R.mipmaps.length>0)for(let ne=0;ne<R.mipmaps.length;ne++)nt(Q.__webglFramebuffer[Ae][ne],O,R,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Ae,ne);else nt(Q.__webglFramebuffer[Ae],O,R,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Ae,0);d(R,We)&&I(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Ce){const Ae=O.texture;for(let ne=0,V=Ae.length;ne<V;ne++){const ve=Ae[ne],Be=n.get(ve);t.bindTexture(s.TEXTURE_2D,Be.__webglTexture),Qe(s.TEXTURE_2D,ve,We),nt(Q.__webglFramebuffer,O,ve,s.COLOR_ATTACHMENT0+ne,s.TEXTURE_2D,0),d(ve,We)&&I(s.TEXTURE_2D)}t.unbindTexture()}else{let Ae=s.TEXTURE_2D;if((O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(o?Ae=O.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Ae,Re.__webglTexture),Qe(Ae,R,We),o&&R.mipmaps&&R.mipmaps.length>0)for(let ne=0;ne<R.mipmaps.length;ne++)nt(Q.__webglFramebuffer[ne],O,R,s.COLOR_ATTACHMENT0,Ae,ne);else nt(Q.__webglFramebuffer,O,R,s.COLOR_ATTACHMENT0,Ae,0);d(R,We)&&I(Ae),t.unbindTexture()}O.depthBuffer&&me(O)}function $e(O){const R=T(O)||o,Q=O.isWebGLMultipleRenderTargets===!0?O.texture:[O.texture];for(let Re=0,Se=Q.length;Re<Se;Re++){const Ce=Q[Re];if(d(Ce,R)){const We=O.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:s.TEXTURE_2D,Ae=n.get(Ce).__webglTexture;t.bindTexture(We,Ae),I(We),t.unbindTexture()}}}function ke(O){if(o&&O.samples>0&&et(O)===!1){const R=O.isWebGLMultipleRenderTargets?O.texture:[O.texture],Q=O.width,Re=O.height;let Se=s.COLOR_BUFFER_BIT;const Ce=[],We=O.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Ae=n.get(O),ne=O.isWebGLMultipleRenderTargets===!0;if(ne)for(let V=0;V<R.length;V++)t.bindFramebuffer(s.FRAMEBUFFER,Ae.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+V,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,Ae.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+V,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,Ae.__webglMultisampledFramebuffer),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Ae.__webglFramebuffer);for(let V=0;V<R.length;V++){Ce.push(s.COLOR_ATTACHMENT0+V),O.depthBuffer&&Ce.push(We);const ve=Ae.__ignoreDepthValues!==void 0?Ae.__ignoreDepthValues:!1;if(ve===!1&&(O.depthBuffer&&(Se|=s.DEPTH_BUFFER_BIT),O.stencilBuffer&&(Se|=s.STENCIL_BUFFER_BIT)),ne&&s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,Ae.__webglColorRenderbuffer[V]),ve===!0&&(s.invalidateFramebuffer(s.READ_FRAMEBUFFER,[We]),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[We])),ne){const Be=n.get(R[V]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,Be,0)}s.blitFramebuffer(0,0,Q,Re,0,0,Q,Re,Se,s.NEAREST),g&&s.invalidateFramebuffer(s.READ_FRAMEBUFFER,Ce)}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),ne)for(let V=0;V<R.length;V++){t.bindFramebuffer(s.FRAMEBUFFER,Ae.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+V,s.RENDERBUFFER,Ae.__webglColorRenderbuffer[V]);const ve=n.get(R[V]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,Ae.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+V,s.TEXTURE_2D,ve,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Ae.__webglMultisampledFramebuffer)}}function Fe(O){return Math.min(p,O.samples)}function et(O){const R=n.get(O);return o&&O.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function pt(O){const R=a.render.frame;y.get(O)!==R&&(y.set(O,R),O.update())}function Ie(O,R){const Q=O.colorSpace,Re=O.format,Se=O.type;return O.isCompressedTexture===!0||O.isVideoTexture===!0||O.format===Fo||Q!==ni&&Q!==tr&&(Q===Bt||Q===Ma?o===!1?e.has("EXT_sRGB")===!0&&Re===Wn?(O.format=Fo,O.minFilter=en,O.generateMipmaps=!1):R=ph.sRGBToLinear(R):(Re!==Wn||Se!==Ni)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Q)),R}this.allocateTextureUnit=pe,this.resetTextureUnits=ue,this.setTexture2D=xe,this.setTexture2DArray=K,this.setTexture3D=ae,this.setTextureCube=Ue,this.rebindTextures=Ee,this.setupRenderTarget=Me,this.updateRenderTargetMipmap=$e,this.updateMultisampleRenderTarget=ke,this.setupDepthRenderbuffer=me,this.setupFrameBufferTexture=nt,this.useMultisampledRTT=et}const ax=0,ln=1;function Yf(s,e,t){const n=t.isWebGL2;function i(r,a=tr){let o;const c=a===Bt||a===Ma?ln:ax;if(r===Ni)return s.UNSIGNED_BYTE;if(r===ah)return s.UNSIGNED_SHORT_4_4_4_4;if(r===oh)return s.UNSIGNED_SHORT_5_5_5_1;if(r===lf)return s.BYTE;if(r===cf)return s.SHORT;if(r===Vo)return s.UNSIGNED_SHORT;if(r===sh)return s.INT;if(r===Ii)return s.UNSIGNED_INT;if(r===gi)return s.FLOAT;if(r===bs)return n?s.HALF_FLOAT:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(r===hf)return s.ALPHA;if(r===Wn)return s.RGBA;if(r===uf)return s.LUMINANCE;if(r===df)return s.LUMINANCE_ALPHA;if(r===Qi)return s.DEPTH_COMPONENT;if(r===Or)return s.DEPTH_STENCIL;if(r===Fo)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(r===ff)return s.RED;if(r===lh)return s.RED_INTEGER;if(r===pf)return s.RG;if(r===ch)return s.RG_INTEGER;if(r===hh)return s.RGBA_INTEGER;if(r===wo||r===Ao||r===Co||r===Ro)if(c===ln)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(r===wo)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Ao)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===Co)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===Ro)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(r===wo)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Ao)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Co)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===Ro)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===vc||r===xc||r===Mc||r===bc)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(r===vc)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===xc)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Mc)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===bc)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===mf)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===Sc||r===Ec)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(r===Sc)return c===ln?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(r===Ec)return c===ln?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===Tc||r===wc||r===Ac||r===Cc||r===Rc||r===Pc||r===Lc||r===Ic||r===Dc||r===Uc||r===Nc||r===Oc||r===Fc||r===Bc)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(r===Tc)return c===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===wc)return c===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===Ac)return c===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===Cc)return c===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===Rc)return c===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===Pc)return c===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===Lc)return c===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===Ic)return c===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===Dc)return c===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===Uc)return c===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===Nc)return c===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===Oc)return c===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===Fc)return c===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===Bc)return c===ln?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===Po||r===zc||r===kc)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(r===Po)return c===ln?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(r===zc)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(r===kc)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(r===gf||r===Hc||r===Vc||r===Gc)if(o=e.get("EXT_texture_compression_rgtc"),o!==null){if(r===Po)return o.COMPRESSED_RED_RGTC1_EXT;if(r===Hc)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===Vc)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===Gc)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===Ki?n?s.UNSIGNED_INT_24_8:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):s[r]!==void 0?s[r]:null}return{convert:i}}class jf extends mn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class ys extends Dt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const ox={type:"move"};class Ql{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ys,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ys,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new U,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new U),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ys,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new U,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new U),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null;const o=this._targetRay,c=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){a=!0;for(const b of e.hand.values()){const x=t.getJointPose(b,n),_=this._getHandJoint(h,b);x!==null&&(_.matrix.fromArray(x.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=x.radius),_.visible=x!==null}const f=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=f.position.distanceTo(p.position),g=.02,y=.005;h.inputState.pinching&&m>g+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=g-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1));o!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(ox)))}return o!==null&&(o.visible=i!==null),c!==null&&(c.visible=r!==null),h!==null&&(h.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new ys;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class Zf extends tn{constructor(e,t,n,i,r,a,o,c,h,f){if(f=f!==void 0?f:Qi,f!==Qi&&f!==Or)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&f===Qi&&(n=Ii),n===void 0&&f===Or&&(n=Ki),super(null,i,r,a,o,c,f,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:Qt,this.minFilter=c!==void 0?c:Qt,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class lx extends xi{constructor(e,t){super();const n=this;let i=null,r=1,a=null,o="local-floor",c=1,h=null,f=null,p=null,m=null,g=null,y=null;const b=t.getContextAttributes();let x=null,_=null;const w=[],S=[],T=new mn;T.layers.enable(1),T.viewport=new Ot;const L=new mn;L.layers.enable(2),L.viewport=new Ot;const d=[T,L],I=new jf;I.layers.enable(1),I.layers.enable(2);let z=null,C=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(K){let ae=w[K];return ae===void 0&&(ae=new Ql,w[K]=ae),ae.getTargetRaySpace()},this.getControllerGrip=function(K){let ae=w[K];return ae===void 0&&(ae=new Ql,w[K]=ae),ae.getGripSpace()},this.getHand=function(K){let ae=w[K];return ae===void 0&&(ae=new Ql,w[K]=ae),ae.getHandSpace()};function D(K){const ae=S.indexOf(K.inputSource);if(ae===-1)return;const Ue=w[ae];Ue!==void 0&&(Ue.update(K.inputSource,K.frame,h||a),Ue.dispatchEvent({type:K.type,data:K.inputSource}))}function le(){i.removeEventListener("select",D),i.removeEventListener("selectstart",D),i.removeEventListener("selectend",D),i.removeEventListener("squeeze",D),i.removeEventListener("squeezestart",D),i.removeEventListener("squeezeend",D),i.removeEventListener("end",le),i.removeEventListener("inputsourceschange",te);for(let K=0;K<w.length;K++){const ae=S[K];ae!==null&&(S[K]=null,w[K].disconnect(ae))}z=null,C=null,e.setRenderTarget(x),g=null,m=null,p=null,i=null,_=null,xe.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(K){r=K,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(K){o=K,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||a},this.setReferenceSpace=function(K){h=K},this.getBaseLayer=function(){return m!==null?m:g},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return i},this.setSession=async function(K){if(i=K,i!==null){if(x=e.getRenderTarget(),i.addEventListener("select",D),i.addEventListener("selectstart",D),i.addEventListener("selectend",D),i.addEventListener("squeeze",D),i.addEventListener("squeezestart",D),i.addEventListener("squeezeend",D),i.addEventListener("end",le),i.addEventListener("inputsourceschange",te),b.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const ae={antialias:i.renderState.layers===void 0?b.antialias:!0,alpha:!0,depth:b.depth,stencil:b.stencil,framebufferScaleFactor:r};g=new XRWebGLLayer(i,t,ae),i.updateRenderState({baseLayer:g}),_=new ii(g.framebufferWidth,g.framebufferHeight,{format:Wn,type:Ni,colorSpace:e.outputColorSpace,stencilBuffer:b.stencil})}else{let ae=null,Ue=null,ze=null;b.depth&&(ze=b.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,ae=b.stencil?Or:Qi,Ue=b.stencil?Ki:Ii);const Ge={colorFormat:t.RGBA8,depthFormat:ze,scaleFactor:r};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(Ge),i.updateRenderState({layers:[m]}),_=new ii(m.textureWidth,m.textureHeight,{format:Wn,type:Ni,depthTexture:new Zf(m.textureWidth,m.textureHeight,Ue,void 0,void 0,void 0,void 0,void 0,void 0,ae),stencilBuffer:b.stencil,colorSpace:e.outputColorSpace,samples:b.antialias?4:0});const tt=e.properties.get(_);tt.__ignoreDepthValues=m.ignoreDepthValues}_.isXRRenderTarget=!0,this.setFoveation(c),h=null,a=await i.requestReferenceSpace(o),xe.setContext(i),xe.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function te(K){for(let ae=0;ae<K.removed.length;ae++){const Ue=K.removed[ae],ze=S.indexOf(Ue);ze>=0&&(S[ze]=null,w[ze].disconnect(Ue))}for(let ae=0;ae<K.added.length;ae++){const Ue=K.added[ae];let ze=S.indexOf(Ue);if(ze===-1){for(let tt=0;tt<w.length;tt++)if(tt>=S.length){S.push(Ue),ze=tt;break}else if(S[tt]===null){S[tt]=Ue,ze=tt;break}if(ze===-1)break}const Ge=w[ze];Ge&&Ge.connect(Ue)}}const q=new U,J=new U;function re(K,ae,Ue){q.setFromMatrixPosition(ae.matrixWorld),J.setFromMatrixPosition(Ue.matrixWorld);const ze=q.distanceTo(J),Ge=ae.projectionMatrix.elements,tt=Ue.projectionMatrix.elements,Qe=Ge[14]/(Ge[10]-1),je=Ge[14]/(Ge[10]+1),_t=(Ge[9]+1)/Ge[5],Pt=(Ge[9]-1)/Ge[5],nt=(Ge[8]-1)/Ge[0],k=(tt[8]+1)/tt[0],Pe=Qe*nt,me=Qe*k,Ee=ze/(-nt+k),Me=Ee*-nt;ae.matrixWorld.decompose(K.position,K.quaternion,K.scale),K.translateX(Me),K.translateZ(Ee),K.matrixWorld.compose(K.position,K.quaternion,K.scale),K.matrixWorldInverse.copy(K.matrixWorld).invert();const $e=Qe+Ee,ke=je+Ee,Fe=Pe-Me,et=me+(ze-Me),pt=_t*je/ke*$e,Ie=Pt*je/ke*$e;K.projectionMatrix.makePerspective(Fe,et,pt,Ie,$e,ke),K.projectionMatrixInverse.copy(K.projectionMatrix).invert()}function fe(K,ae){ae===null?K.matrixWorld.copy(K.matrix):K.matrixWorld.multiplyMatrices(ae.matrixWorld,K.matrix),K.matrixWorldInverse.copy(K.matrixWorld).invert()}this.updateCamera=function(K){if(i===null)return;I.near=L.near=T.near=K.near,I.far=L.far=T.far=K.far,(z!==I.near||C!==I.far)&&(i.updateRenderState({depthNear:I.near,depthFar:I.far}),z=I.near,C=I.far);const ae=K.parent,Ue=I.cameras;fe(I,ae);for(let ze=0;ze<Ue.length;ze++)fe(Ue[ze],ae);Ue.length===2?re(I,T,L):I.projectionMatrix.copy(T.projectionMatrix),ue(K,I,ae)};function ue(K,ae,Ue){Ue===null?K.matrix.copy(ae.matrixWorld):(K.matrix.copy(Ue.matrixWorld),K.matrix.invert(),K.matrix.multiply(ae.matrixWorld)),K.matrix.decompose(K.position,K.quaternion,K.scale),K.updateMatrixWorld(!0),K.projectionMatrix.copy(ae.projectionMatrix),K.projectionMatrixInverse.copy(ae.projectionMatrixInverse),K.isPerspectiveCamera&&(K.fov=Ss*2*Math.atan(1/K.projectionMatrix.elements[5]),K.zoom=1)}this.getCamera=function(){return I},this.getFoveation=function(){if(!(m===null&&g===null))return c},this.setFoveation=function(K){c=K,m!==null&&(m.fixedFoveation=K),g!==null&&g.fixedFoveation!==void 0&&(g.fixedFoveation=K)};let pe=null;function Te(K,ae){if(f=ae.getViewerPose(h||a),y=ae,f!==null){const Ue=f.views;g!==null&&(e.setRenderTargetFramebuffer(_,g.framebuffer),e.setRenderTarget(_));let ze=!1;Ue.length!==I.cameras.length&&(I.cameras.length=0,ze=!0);for(let Ge=0;Ge<Ue.length;Ge++){const tt=Ue[Ge];let Qe=null;if(g!==null)Qe=g.getViewport(tt);else{const _t=p.getViewSubImage(m,tt);Qe=_t.viewport,Ge===0&&(e.setRenderTargetTextures(_,_t.colorTexture,m.ignoreDepthValues?void 0:_t.depthStencilTexture),e.setRenderTarget(_))}let je=d[Ge];je===void 0&&(je=new mn,je.layers.enable(Ge),je.viewport=new Ot,d[Ge]=je),je.matrix.fromArray(tt.transform.matrix),je.matrix.decompose(je.position,je.quaternion,je.scale),je.projectionMatrix.fromArray(tt.projectionMatrix),je.projectionMatrixInverse.copy(je.projectionMatrix).invert(),je.viewport.set(Qe.x,Qe.y,Qe.width,Qe.height),Ge===0&&(I.matrix.copy(je.matrix),I.matrix.decompose(I.position,I.quaternion,I.scale)),ze===!0&&I.cameras.push(je)}}for(let Ue=0;Ue<w.length;Ue++){const ze=S[Ue],Ge=w[Ue];ze!==null&&Ge!==void 0&&Ge.update(ze,ae,h||a)}pe&&pe(K,ae),ae.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:ae}),y=null}const xe=new Vf;xe.setAnimationLoop(Te),this.setAnimationLoop=function(K){pe=K},this.dispose=function(){}}}function cx(s,e){function t(x,_){x.matrixAutoUpdate===!0&&x.updateMatrix(),_.value.copy(x.matrix)}function n(x,_){_.color.getRGB(x.fogColor.value,Bf(s)),_.isFog?(x.fogNear.value=_.near,x.fogFar.value=_.far):_.isFogExp2&&(x.fogDensity.value=_.density)}function i(x,_,w,S,T){_.isMeshBasicMaterial||_.isMeshLambertMaterial?r(x,_):_.isMeshToonMaterial?(r(x,_),p(x,_)):_.isMeshPhongMaterial?(r(x,_),f(x,_)):_.isMeshStandardMaterial?(r(x,_),m(x,_),_.isMeshPhysicalMaterial&&g(x,_,T)):_.isMeshMatcapMaterial?(r(x,_),y(x,_)):_.isMeshDepthMaterial?r(x,_):_.isMeshDistanceMaterial?(r(x,_),b(x,_)):_.isMeshNormalMaterial?r(x,_):_.isLineBasicMaterial?(a(x,_),_.isLineDashedMaterial&&o(x,_)):_.isPointsMaterial?c(x,_,w,S):_.isSpriteMaterial?h(x,_):_.isShadowMaterial?(x.color.value.copy(_.color),x.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function r(x,_){x.opacity.value=_.opacity,_.color&&x.diffuse.value.copy(_.color),_.emissive&&x.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(x.map.value=_.map,t(_.map,x.mapTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.bumpMap&&(x.bumpMap.value=_.bumpMap,t(_.bumpMap,x.bumpMapTransform),x.bumpScale.value=_.bumpScale,_.side===In&&(x.bumpScale.value*=-1)),_.normalMap&&(x.normalMap.value=_.normalMap,t(_.normalMap,x.normalMapTransform),x.normalScale.value.copy(_.normalScale),_.side===In&&x.normalScale.value.negate()),_.displacementMap&&(x.displacementMap.value=_.displacementMap,t(_.displacementMap,x.displacementMapTransform),x.displacementScale.value=_.displacementScale,x.displacementBias.value=_.displacementBias),_.emissiveMap&&(x.emissiveMap.value=_.emissiveMap,t(_.emissiveMap,x.emissiveMapTransform)),_.specularMap&&(x.specularMap.value=_.specularMap,t(_.specularMap,x.specularMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest);const w=e.get(_).envMap;if(w&&(x.envMap.value=w,x.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=_.reflectivity,x.ior.value=_.ior,x.refractionRatio.value=_.refractionRatio),_.lightMap){x.lightMap.value=_.lightMap;const S=s._useLegacyLights===!0?Math.PI:1;x.lightMapIntensity.value=_.lightMapIntensity*S,t(_.lightMap,x.lightMapTransform)}_.aoMap&&(x.aoMap.value=_.aoMap,x.aoMapIntensity.value=_.aoMapIntensity,t(_.aoMap,x.aoMapTransform))}function a(x,_){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,_.map&&(x.map.value=_.map,t(_.map,x.mapTransform))}function o(x,_){x.dashSize.value=_.dashSize,x.totalSize.value=_.dashSize+_.gapSize,x.scale.value=_.scale}function c(x,_,w,S){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,x.size.value=_.size*w,x.scale.value=S*.5,_.map&&(x.map.value=_.map,t(_.map,x.uvTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest)}function h(x,_){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,x.rotation.value=_.rotation,_.map&&(x.map.value=_.map,t(_.map,x.mapTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest)}function f(x,_){x.specular.value.copy(_.specular),x.shininess.value=Math.max(_.shininess,1e-4)}function p(x,_){_.gradientMap&&(x.gradientMap.value=_.gradientMap)}function m(x,_){x.metalness.value=_.metalness,_.metalnessMap&&(x.metalnessMap.value=_.metalnessMap,t(_.metalnessMap,x.metalnessMapTransform)),x.roughness.value=_.roughness,_.roughnessMap&&(x.roughnessMap.value=_.roughnessMap,t(_.roughnessMap,x.roughnessMapTransform)),e.get(_).envMap&&(x.envMapIntensity.value=_.envMapIntensity)}function g(x,_,w){x.ior.value=_.ior,_.sheen>0&&(x.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),x.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(x.sheenColorMap.value=_.sheenColorMap,t(_.sheenColorMap,x.sheenColorMapTransform)),_.sheenRoughnessMap&&(x.sheenRoughnessMap.value=_.sheenRoughnessMap,t(_.sheenRoughnessMap,x.sheenRoughnessMapTransform))),_.clearcoat>0&&(x.clearcoat.value=_.clearcoat,x.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(x.clearcoatMap.value=_.clearcoatMap,t(_.clearcoatMap,x.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,t(_.clearcoatRoughnessMap,x.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(x.clearcoatNormalMap.value=_.clearcoatNormalMap,t(_.clearcoatNormalMap,x.clearcoatNormalMapTransform),x.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===In&&x.clearcoatNormalScale.value.negate())),_.iridescence>0&&(x.iridescence.value=_.iridescence,x.iridescenceIOR.value=_.iridescenceIOR,x.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(x.iridescenceMap.value=_.iridescenceMap,t(_.iridescenceMap,x.iridescenceMapTransform)),_.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=_.iridescenceThicknessMap,t(_.iridescenceThicknessMap,x.iridescenceThicknessMapTransform))),_.transmission>0&&(x.transmission.value=_.transmission,x.transmissionSamplerMap.value=w.texture,x.transmissionSamplerSize.value.set(w.width,w.height),_.transmissionMap&&(x.transmissionMap.value=_.transmissionMap,t(_.transmissionMap,x.transmissionMapTransform)),x.thickness.value=_.thickness,_.thicknessMap&&(x.thicknessMap.value=_.thicknessMap,t(_.thicknessMap,x.thicknessMapTransform)),x.attenuationDistance.value=_.attenuationDistance,x.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(x.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(x.anisotropyMap.value=_.anisotropyMap,t(_.anisotropyMap,x.anisotropyMapTransform))),x.specularIntensity.value=_.specularIntensity,x.specularColor.value.copy(_.specularColor),_.specularColorMap&&(x.specularColorMap.value=_.specularColorMap,t(_.specularColorMap,x.specularColorMapTransform)),_.specularIntensityMap&&(x.specularIntensityMap.value=_.specularIntensityMap,t(_.specularIntensityMap,x.specularIntensityMapTransform))}function y(x,_){_.matcap&&(x.matcap.value=_.matcap)}function b(x,_){const w=e.get(_).light;x.referencePosition.value.setFromMatrixPosition(w.matrixWorld),x.nearDistance.value=w.shadow.camera.near,x.farDistance.value=w.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function hx(s,e,t,n){let i={},r={},a=[];const o=t.isWebGL2?s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS):0;function c(w,S){const T=S.program;n.uniformBlockBinding(w,T)}function h(w,S){let T=i[w.id];T===void 0&&(y(w),T=f(w),i[w.id]=T,w.addEventListener("dispose",x));const L=S.program;n.updateUBOMapping(w,L);const d=e.render.frame;r[w.id]!==d&&(m(w),r[w.id]=d)}function f(w){const S=p();w.__bindingPointIndex=S;const T=s.createBuffer(),L=w.__size,d=w.usage;return s.bindBuffer(s.UNIFORM_BUFFER,T),s.bufferData(s.UNIFORM_BUFFER,L,d),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,S,T),T}function p(){for(let w=0;w<o;w++)if(a.indexOf(w)===-1)return a.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(w){const S=i[w.id],T=w.uniforms,L=w.__cache;s.bindBuffer(s.UNIFORM_BUFFER,S);for(let d=0,I=T.length;d<I;d++){const z=T[d];if(g(z,d,L)===!0){const C=z.__offset,D=Array.isArray(z.value)?z.value:[z.value];let le=0;for(let te=0;te<D.length;te++){const q=D[te],J=b(q);typeof q=="number"?(z.__data[0]=q,s.bufferSubData(s.UNIFORM_BUFFER,C+le,z.__data)):q.isMatrix3?(z.__data[0]=q.elements[0],z.__data[1]=q.elements[1],z.__data[2]=q.elements[2],z.__data[3]=q.elements[0],z.__data[4]=q.elements[3],z.__data[5]=q.elements[4],z.__data[6]=q.elements[5],z.__data[7]=q.elements[0],z.__data[8]=q.elements[6],z.__data[9]=q.elements[7],z.__data[10]=q.elements[8],z.__data[11]=q.elements[0]):(q.toArray(z.__data,le),le+=J.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,C,z.__data)}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function g(w,S,T){const L=w.value;if(T[S]===void 0){if(typeof L=="number")T[S]=L;else{const d=Array.isArray(L)?L:[L],I=[];for(let z=0;z<d.length;z++)I.push(d[z].clone());T[S]=I}return!0}else if(typeof L=="number"){if(T[S]!==L)return T[S]=L,!0}else{const d=Array.isArray(T[S])?T[S]:[T[S]],I=Array.isArray(L)?L:[L];for(let z=0;z<d.length;z++){const C=d[z];if(C.equals(I[z])===!1)return C.copy(I[z]),!0}}return!1}function y(w){const S=w.uniforms;let T=0;const L=16;let d=0;for(let I=0,z=S.length;I<z;I++){const C=S[I],D={boundary:0,storage:0},le=Array.isArray(C.value)?C.value:[C.value];for(let te=0,q=le.length;te<q;te++){const J=le[te],re=b(J);D.boundary+=re.boundary,D.storage+=re.storage}if(C.__data=new Float32Array(D.storage/Float32Array.BYTES_PER_ELEMENT),C.__offset=T,I>0){d=T%L;const te=L-d;d!==0&&te-D.boundary<0&&(T+=L-d,C.__offset=T)}T+=D.storage}return d=T%L,d>0&&(T+=L-d),w.__size=T,w.__cache={},this}function b(w){const S={boundary:0,storage:0};return typeof w=="number"?(S.boundary=4,S.storage=4):w.isVector2?(S.boundary=8,S.storage=8):w.isVector3||w.isColor?(S.boundary=16,S.storage=12):w.isVector4?(S.boundary=16,S.storage=16):w.isMatrix3?(S.boundary=48,S.storage=48):w.isMatrix4?(S.boundary=64,S.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),S}function x(w){const S=w.target;S.removeEventListener("dispose",x);const T=a.indexOf(S.__bindingPointIndex);a.splice(T,1),s.deleteBuffer(i[S.id]),delete i[S.id],delete r[S.id]}function _(){for(const w in i)s.deleteBuffer(i[w]);a=[],i={},r={}}return{bind:c,update:h,dispose:_}}class Mh{constructor(e={}){const{canvas:t=Nf(),context:n=null,depth:i=!0,stencil:r=!0,alpha:a=!1,antialias:o=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:h=!1,powerPreference:f="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let m;n!==null?m=n.getContextAttributes().alpha:m=a;const g=new Uint32Array(4),y=new Int32Array(4);let b=null,x=null;const _=[],w=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=Bt,this._useLegacyLights=!1,this.toneMapping=Ui,this.toneMappingExposure=1;const S=this;let T=!1,L=0,d=0,I=null,z=-1,C=null;const D=new Ot,le=new Ot;let te=null;const q=new Ye(0);let J=0,re=t.width,fe=t.height,ue=1,pe=null,Te=null;const xe=new Ot(0,0,re,fe),K=new Ot(0,0,re,fe);let ae=!1;const Ue=new Yo;let ze=!1,Ge=!1,tt=null;const Qe=new gt,je=new ge,_t=new U,Pt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function nt(){return I===null?ue:1}let k=n;function Pe(N,Y){for(let ce=0;ce<N.length;ce++){const Z=N[ce],he=t.getContext(Z,Y);if(he!==null)return he}return null}try{const N={alpha:!0,depth:i,stencil:r,antialias:o,premultipliedAlpha:c,preserveDrawingBuffer:h,powerPreference:f,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${ko}`),t.addEventListener("webglcontextlost",Ne,!1),t.addEventListener("webglcontextrestored",se,!1),t.addEventListener("webglcontextcreationerror",be,!1),k===null){const Y=["webgl2","webgl","experimental-webgl"];if(S.isWebGL1Renderer===!0&&Y.shift(),k=Pe(Y,N),k===null)throw Pe(Y)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&k instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),k.getShaderPrecisionFormat===void 0&&(k.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(N){throw console.error("THREE.WebGLRenderer: "+N.message),N}let me,Ee,Me,$e,ke,Fe,et,pt,Ie,O,R,Q,Re,Se,Ce,We,Ae,ne,V,ve,Be,Le,De,st;function bt(){me=new Ty(k),Ee=new vy(k,me,e),me.init(Ee),Le=new Yf(k,me,Ee),Me=new rx(k,me,Ee),$e=new Cy(k),ke=new qv,Fe=new sx(k,me,Me,ke,Ee,Le,$e),et=new My(S),pt=new Ey(S),Ie=new Bg(k,Ee),De=new _y(k,me,Ie,Ee),O=new wy(k,Ie,$e,De),R=new Iy(k,O,Ie,$e),V=new Ly(k,Ee,Fe),We=new xy(ke),Q=new Xv(S,et,pt,me,Ee,De,We),Re=new cx(S,ke),Se=new jv,Ce=new ex(me,Ee),ne=new gy(S,et,pt,Me,R,m,c),Ae=new ix(S,R,Ee),st=new hx(k,$e,Ee,Me),ve=new yy(k,me,$e,Ee),Be=new Ay(k,me,$e,Ee),$e.programs=Q.programs,S.capabilities=Ee,S.extensions=me,S.properties=ke,S.renderLists=Se,S.shadowMap=Ae,S.state=Me,S.info=$e}bt();const G=new lx(S,k);this.xr=G,this.getContext=function(){return k},this.getContextAttributes=function(){return k.getContextAttributes()},this.forceContextLoss=function(){const N=me.get("WEBGL_lose_context");N&&N.loseContext()},this.forceContextRestore=function(){const N=me.get("WEBGL_lose_context");N&&N.restoreContext()},this.getPixelRatio=function(){return ue},this.setPixelRatio=function(N){N!==void 0&&(ue=N,this.setSize(re,fe,!1))},this.getSize=function(N){return N.set(re,fe)},this.setSize=function(N,Y,ce=!0){if(G.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}re=N,fe=Y,t.width=Math.floor(N*ue),t.height=Math.floor(Y*ue),ce===!0&&(t.style.width=N+"px",t.style.height=Y+"px"),this.setViewport(0,0,N,Y)},this.getDrawingBufferSize=function(N){return N.set(re*ue,fe*ue).floor()},this.setDrawingBufferSize=function(N,Y,ce){re=N,fe=Y,ue=ce,t.width=Math.floor(N*ce),t.height=Math.floor(Y*ce),this.setViewport(0,0,N,Y)},this.getCurrentViewport=function(N){return N.copy(D)},this.getViewport=function(N){return N.copy(xe)},this.setViewport=function(N,Y,ce,Z){N.isVector4?xe.set(N.x,N.y,N.z,N.w):xe.set(N,Y,ce,Z),Me.viewport(D.copy(xe).multiplyScalar(ue).floor())},this.getScissor=function(N){return N.copy(K)},this.setScissor=function(N,Y,ce,Z){N.isVector4?K.set(N.x,N.y,N.z,N.w):K.set(N,Y,ce,Z),Me.scissor(le.copy(K).multiplyScalar(ue).floor())},this.getScissorTest=function(){return ae},this.setScissorTest=function(N){Me.setScissorTest(ae=N)},this.setOpaqueSort=function(N){pe=N},this.setTransparentSort=function(N){Te=N},this.getClearColor=function(N){return N.copy(ne.getClearColor())},this.setClearColor=function(){ne.setClearColor.apply(ne,arguments)},this.getClearAlpha=function(){return ne.getClearAlpha()},this.setClearAlpha=function(){ne.setClearAlpha.apply(ne,arguments)},this.clear=function(N=!0,Y=!0,ce=!0){let Z=0;if(N){let he=!1;if(I!==null){const He=I.texture.format;he=He===hh||He===ch||He===lh}if(he){const He=I.texture.type,it=He===Ni||He===Ii||He===Vo||He===Ki||He===ah||He===oh,ot=ne.getClearColor(),lt=ne.getClearAlpha(),St=ot.r,at=ot.g,yt=ot.b;it?(g[0]=St,g[1]=at,g[2]=yt,g[3]=lt,k.clearBufferuiv(k.COLOR,0,g)):(y[0]=St,y[1]=at,y[2]=yt,y[3]=lt,k.clearBufferiv(k.COLOR,0,y))}else Z|=k.COLOR_BUFFER_BIT}Y&&(Z|=k.DEPTH_BUFFER_BIT),ce&&(Z|=k.STENCIL_BUFFER_BIT),k.clear(Z)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ne,!1),t.removeEventListener("webglcontextrestored",se,!1),t.removeEventListener("webglcontextcreationerror",be,!1),Se.dispose(),Ce.dispose(),ke.dispose(),et.dispose(),pt.dispose(),R.dispose(),De.dispose(),st.dispose(),Q.dispose(),G.dispose(),G.removeEventListener("sessionstart",Lt),G.removeEventListener("sessionend",gn),tt&&(tt.dispose(),tt=null),sn.stop()};function Ne(N){N.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),T=!0}function se(){console.log("THREE.WebGLRenderer: Context Restored."),T=!1;const N=$e.autoReset,Y=Ae.enabled,ce=Ae.autoUpdate,Z=Ae.needsUpdate,he=Ae.type;bt(),$e.autoReset=N,Ae.enabled=Y,Ae.autoUpdate=ce,Ae.needsUpdate=Z,Ae.type=he}function be(N){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",N.statusMessage)}function we(N){const Y=N.target;Y.removeEventListener("dispose",we),vt(Y)}function vt(N){Ut(N),ke.remove(N)}function Ut(N){const Y=ke.get(N).programs;Y!==void 0&&(Y.forEach(function(ce){Q.releaseProgram(ce)}),N.isShaderMaterial&&Q.releaseShaderCache(N))}this.renderBufferDirect=function(N,Y,ce,Z,he,He){Y===null&&(Y=Pt);const it=he.isMesh&&he.matrixWorld.determinant()<0,ot=Ra(N,Y,ce,Z,he);Me.setMaterial(Z,it);let lt=ce.index,St=1;if(Z.wireframe===!0){if(lt=O.getWireframeAttribute(ce),lt===void 0)return;St=2}const at=ce.drawRange,yt=ce.attributes.position;let Vt=at.start*St,Gt=(at.start+at.count)*St;He!==null&&(Vt=Math.max(Vt,He.start*St),Gt=Math.min(Gt,(He.start+He.count)*St)),lt!==null?(Vt=Math.max(Vt,0),Gt=Math.min(Gt,lt.count)):yt!=null&&(Vt=Math.max(Vt,0),Gt=Math.min(Gt,yt.count));const wn=Gt-Vt;if(wn<0||wn===1/0)return;De.setup(he,Z,ot,ce,lt);let kn,Wt=ve;if(lt!==null&&(kn=Ie.get(lt),Wt=Be,Wt.setIndex(kn)),he.isMesh)Z.wireframe===!0?(Me.setLineWidth(Z.wireframeLinewidth*nt()),Wt.setMode(k.LINES)):Wt.setMode(k.TRIANGLES);else if(he.isLine){let ct=Z.linewidth;ct===void 0&&(ct=1),Me.setLineWidth(ct*nt()),he.isLineSegments?Wt.setMode(k.LINES):he.isLineLoop?Wt.setMode(k.LINE_LOOP):Wt.setMode(k.LINE_STRIP)}else he.isPoints?Wt.setMode(k.POINTS):he.isSprite&&Wt.setMode(k.TRIANGLES);if(he.isInstancedMesh)Wt.renderInstances(Vt,wn,he.count);else if(ce.isInstancedBufferGeometry){const ct=ce._maxInstanceCount!==void 0?ce._maxInstanceCount:1/0,li=Math.min(ce.instanceCount,ct);Wt.renderInstances(Vt,wn,li)}else Wt.render(Vt,wn)},this.compile=function(N,Y){function ce(Z,he,He){Z.transparent===!0&&Z.side===mi&&Z.forceSinglePass===!1?(Z.side=In,Z.needsUpdate=!0,Xr(Z,he,He),Z.side=Oi,Z.needsUpdate=!0,Xr(Z,he,He),Z.side=mi):Xr(Z,he,He)}x=Ce.get(N),x.init(),w.push(x),N.traverseVisible(function(Z){Z.isLight&&Z.layers.test(Y.layers)&&(x.pushLight(Z),Z.castShadow&&x.pushShadow(Z))}),x.setupLights(S._useLegacyLights),N.traverse(function(Z){const he=Z.material;if(he)if(Array.isArray(he))for(let He=0;He<he.length;He++){const it=he[He];ce(it,N,Z)}else ce(he,N,Z)}),w.pop(),x=null};let Nt=null;function yn(N){Nt&&Nt(N)}function Lt(){sn.stop()}function gn(){sn.start()}const sn=new Vf;sn.setAnimationLoop(yn),typeof self<"u"&&sn.setContext(self),this.setAnimationLoop=function(N){Nt=N,G.setAnimationLoop(N),N===null?sn.stop():sn.start()},G.addEventListener("sessionstart",Lt),G.addEventListener("sessionend",gn),this.render=function(N,Y){if(Y!==void 0&&Y.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(T===!0)return;N.matrixWorldAutoUpdate===!0&&N.updateMatrixWorld(),Y.parent===null&&Y.matrixWorldAutoUpdate===!0&&Y.updateMatrixWorld(),G.enabled===!0&&G.isPresenting===!0&&(G.cameraAutoUpdate===!0&&G.updateCamera(Y),Y=G.getCamera()),N.isScene===!0&&N.onBeforeRender(S,N,Y,I),x=Ce.get(N,w.length),x.init(),w.push(x),Qe.multiplyMatrices(Y.projectionMatrix,Y.matrixWorldInverse),Ue.setFromProjectionMatrix(Qe),Ge=this.localClippingEnabled,ze=We.init(this.clippingPlanes,Ge),b=Se.get(N,_.length),b.init(),_.push(b),lr(N,Y,0,S.sortObjects),b.finish(),S.sortObjects===!0&&b.sort(pe,Te),this.info.render.frame++,ze===!0&&We.beginShadows();const ce=x.state.shadowsArray;if(Ae.render(ce,N,Y),ze===!0&&We.endShadows(),this.info.autoReset===!0&&this.info.reset(),ne.render(b,N),x.setupLights(S._useLegacyLights),Y.isArrayCamera){const Z=Y.cameras;for(let he=0,He=Z.length;he<He;he++){const it=Z[he];Aa(b,N,it,it.viewport)}}else Aa(b,N,Y);I!==null&&(Fe.updateMultisampleRenderTarget(I),Fe.updateRenderTargetMipmap(I)),N.isScene===!0&&N.onAfterRender(S,N,Y),De.resetDefaultState(),z=-1,C=null,w.pop(),w.length>0?x=w[w.length-1]:x=null,_.pop(),_.length>0?b=_[_.length-1]:b=null};function lr(N,Y,ce,Z){if(N.visible===!1)return;if(N.layers.test(Y.layers)){if(N.isGroup)ce=N.renderOrder;else if(N.isLOD)N.autoUpdate===!0&&N.update(Y);else if(N.isLight)x.pushLight(N),N.castShadow&&x.pushShadow(N);else if(N.isSprite){if(!N.frustumCulled||Ue.intersectsSprite(N)){Z&&_t.setFromMatrixPosition(N.matrixWorld).applyMatrix4(Qe);const it=R.update(N),ot=N.material;ot.visible&&b.push(N,it,ot,ce,_t.z,null)}}else if((N.isMesh||N.isLine||N.isPoints)&&(!N.frustumCulled||Ue.intersectsObject(N))){const it=R.update(N),ot=N.material;if(Z&&(N.boundingSphere!==void 0?(N.boundingSphere===null&&N.computeBoundingSphere(),_t.copy(N.boundingSphere.center)):(it.boundingSphere===null&&it.computeBoundingSphere(),_t.copy(it.boundingSphere.center)),_t.applyMatrix4(N.matrixWorld).applyMatrix4(Qe)),Array.isArray(ot)){const lt=it.groups;for(let St=0,at=lt.length;St<at;St++){const yt=lt[St],Vt=ot[yt.materialIndex];Vt&&Vt.visible&&b.push(N,it,Vt,ce,_t.z,yt)}}else ot.visible&&b.push(N,it,ot,ce,_t.z,null)}}const He=N.children;for(let it=0,ot=He.length;it<ot;it++)lr(He[it],Y,ce,Z)}function Aa(N,Y,ce,Z){const he=N.opaque,He=N.transmissive,it=N.transparent;x.setupLightsView(ce),ze===!0&&We.setGlobalState(S.clippingPlanes,ce),He.length>0&&vl(he,He,Y,ce),Z&&Me.viewport(D.copy(Z)),he.length>0&&Wr(he,Y,ce),He.length>0&&Wr(He,Y,ce),it.length>0&&Wr(it,Y,ce),Me.buffers.depth.setTest(!0),Me.buffers.depth.setMask(!0),Me.buffers.color.setMask(!0),Me.setPolygonOffset(!1)}function vl(N,Y,ce,Z){const he=Ee.isWebGL2;tt===null&&(tt=new ii(1,1,{generateMipmaps:!0,type:me.has("EXT_color_buffer_half_float")?bs:Ni,minFilter:ir,samples:he?4:0})),S.getDrawingBufferSize(je),he?tt.setSize(je.x,je.y):tt.setSize(Bo(je.x),Bo(je.y));const He=S.getRenderTarget();S.setRenderTarget(tt),S.getClearColor(q),J=S.getClearAlpha(),J<1&&S.setClearColor(16777215,.5),S.clear();const it=S.toneMapping;S.toneMapping=Ui,Wr(N,ce,Z),Fe.updateMultisampleRenderTarget(tt),Fe.updateRenderTargetMipmap(tt);let ot=!1;for(let lt=0,St=Y.length;lt<St;lt++){const at=Y[lt],yt=at.object,Vt=at.geometry,Gt=at.material,wn=at.group;if(Gt.side===mi&&yt.layers.test(Z.layers)){const kn=Gt.side;Gt.side=In,Gt.needsUpdate=!0,Ls(yt,ce,Z,Vt,Gt,wn),Gt.side=kn,Gt.needsUpdate=!0,ot=!0}}ot===!0&&(Fe.updateMultisampleRenderTarget(tt),Fe.updateRenderTargetMipmap(tt)),S.setRenderTarget(He),S.setClearColor(q,J),S.toneMapping=it}function Wr(N,Y,ce){const Z=Y.isScene===!0?Y.overrideMaterial:null;for(let he=0,He=N.length;he<He;he++){const it=N[he],ot=it.object,lt=it.geometry,St=Z===null?it.material:Z,at=it.group;ot.layers.test(ce.layers)&&Ls(ot,Y,ce,lt,St,at)}}function Ls(N,Y,ce,Z,he,He){N.onBeforeRender(S,Y,ce,Z,he,He),N.modelViewMatrix.multiplyMatrices(ce.matrixWorldInverse,N.matrixWorld),N.normalMatrix.getNormalMatrix(N.modelViewMatrix),he.onBeforeRender(S,Y,ce,Z,N,He),he.transparent===!0&&he.side===mi&&he.forceSinglePass===!1?(he.side=In,he.needsUpdate=!0,S.renderBufferDirect(ce,Y,Z,he,N,He),he.side=Oi,he.needsUpdate=!0,S.renderBufferDirect(ce,Y,Z,he,N,He),he.side=mi):S.renderBufferDirect(ce,Y,Z,he,N,He),N.onAfterRender(S,Y,ce,Z,he,He)}function Xr(N,Y,ce){Y.isScene!==!0&&(Y=Pt);const Z=ke.get(N),he=x.state.lights,He=x.state.shadowsArray,it=he.state.version,ot=Q.getParameters(N,he.state,He,Y,ce),lt=Q.getProgramCacheKey(ot);let St=Z.programs;Z.environment=N.isMeshStandardMaterial?Y.environment:null,Z.fog=Y.fog,Z.envMap=(N.isMeshStandardMaterial?pt:et).get(N.envMap||Z.environment),St===void 0&&(N.addEventListener("dispose",we),St=new Map,Z.programs=St);let at=St.get(lt);if(at!==void 0){if(Z.currentProgram===at&&Z.lightsStateVersion===it)return Ca(N,ot),at}else ot.uniforms=Q.getUniforms(N),N.onBuild(ce,ot,S),N.onBeforeCompile(ot,S),at=Q.acquireProgram(ot,lt),St.set(lt,at),Z.uniforms=ot.uniforms;const yt=Z.uniforms;(!N.isShaderMaterial&&!N.isRawShaderMaterial||N.clipping===!0)&&(yt.clippingPlanes=We.uniform),Ca(N,ot),Z.needsLights=Pa(N),Z.lightsStateVersion=it,Z.needsLights&&(yt.ambientLightColor.value=he.state.ambient,yt.lightProbe.value=he.state.probe,yt.directionalLights.value=he.state.directional,yt.directionalLightShadows.value=he.state.directionalShadow,yt.spotLights.value=he.state.spot,yt.spotLightShadows.value=he.state.spotShadow,yt.rectAreaLights.value=he.state.rectArea,yt.ltc_1.value=he.state.rectAreaLTC1,yt.ltc_2.value=he.state.rectAreaLTC2,yt.pointLights.value=he.state.point,yt.pointLightShadows.value=he.state.pointShadow,yt.hemisphereLights.value=he.state.hemi,yt.directionalShadowMap.value=he.state.directionalShadowMap,yt.directionalShadowMatrix.value=he.state.directionalShadowMatrix,yt.spotShadowMap.value=he.state.spotShadowMap,yt.spotLightMatrix.value=he.state.spotLightMatrix,yt.spotLightMap.value=he.state.spotLightMap,yt.pointShadowMap.value=he.state.pointShadowMap,yt.pointShadowMatrix.value=he.state.pointShadowMatrix);const Vt=at.getUniforms(),Gt=Do.seqWithValue(Vt.seq,yt);return Z.currentProgram=at,Z.uniformsList=Gt,at}function Ca(N,Y){const ce=ke.get(N);ce.outputColorSpace=Y.outputColorSpace,ce.instancing=Y.instancing,ce.instancingColor=Y.instancingColor,ce.skinning=Y.skinning,ce.morphTargets=Y.morphTargets,ce.morphNormals=Y.morphNormals,ce.morphColors=Y.morphColors,ce.morphTargetsCount=Y.morphTargetsCount,ce.numClippingPlanes=Y.numClippingPlanes,ce.numIntersection=Y.numClipIntersection,ce.vertexAlphas=Y.vertexAlphas,ce.vertexTangents=Y.vertexTangents,ce.toneMapping=Y.toneMapping}function Ra(N,Y,ce,Z,he){Y.isScene!==!0&&(Y=Pt),Fe.resetTextureUnits();const He=Y.fog,it=Z.isMeshStandardMaterial?Y.environment:null,ot=I===null?S.outputColorSpace:I.isXRRenderTarget===!0?I.texture.colorSpace:ni,lt=(Z.isMeshStandardMaterial?pt:et).get(Z.envMap||it),St=Z.vertexColors===!0&&!!ce.attributes.color&&ce.attributes.color.itemSize===4,at=!!ce.attributes.tangent&&(!!Z.normalMap||Z.anisotropy>0),yt=!!ce.morphAttributes.position,Vt=!!ce.morphAttributes.normal,Gt=!!ce.morphAttributes.color;let wn=Ui;Z.toneMapped&&(I===null||I.isXRRenderTarget===!0)&&(wn=S.toneMapping);const kn=ce.morphAttributes.position||ce.morphAttributes.normal||ce.morphAttributes.color,Wt=kn!==void 0?kn.length:0,ct=ke.get(Z),li=x.state.lights;if(ze===!0&&(Ge===!0||N!==C)){const vn=N===C&&Z.id===z;We.setState(Z,N,vn)}let zt=!1;Z.version===ct.__version?(ct.needsLights&&ct.lightsStateVersion!==li.state.version||ct.outputColorSpace!==ot||he.isInstancedMesh&&ct.instancing===!1||!he.isInstancedMesh&&ct.instancing===!0||he.isSkinnedMesh&&ct.skinning===!1||!he.isSkinnedMesh&&ct.skinning===!0||he.isInstancedMesh&&ct.instancingColor===!0&&he.instanceColor===null||he.isInstancedMesh&&ct.instancingColor===!1&&he.instanceColor!==null||ct.envMap!==lt||Z.fog===!0&&ct.fog!==He||ct.numClippingPlanes!==void 0&&(ct.numClippingPlanes!==We.numPlanes||ct.numIntersection!==We.numIntersection)||ct.vertexAlphas!==St||ct.vertexTangents!==at||ct.morphTargets!==yt||ct.morphNormals!==Vt||ct.morphColors!==Gt||ct.toneMapping!==wn||Ee.isWebGL2===!0&&ct.morphTargetsCount!==Wt)&&(zt=!0):(zt=!0,ct.__version=Z.version);let Un=ct.currentProgram;zt===!0&&(Un=Xr(Z,Y,he));let Is=!1,cr=!1,Ds=!1;const an=Un.getUniforms(),ci=ct.uniforms;if(Me.useProgram(Un.program)&&(Is=!0,cr=!0,Ds=!0),Z.id!==z&&(z=Z.id,cr=!0),Is||C!==N){an.setValue(k,"projectionMatrix",N.projectionMatrix),an.setValue(k,"viewMatrix",N.matrixWorldInverse);const vn=an.map.cameraPosition;vn!==void 0&&vn.setValue(k,_t.setFromMatrixPosition(N.matrixWorld)),Ee.logarithmicDepthBuffer&&an.setValue(k,"logDepthBufFC",2/(Math.log(N.far+1)/Math.LN2)),(Z.isMeshPhongMaterial||Z.isMeshToonMaterial||Z.isMeshLambertMaterial||Z.isMeshBasicMaterial||Z.isMeshStandardMaterial||Z.isShaderMaterial)&&an.setValue(k,"isOrthographic",N.isOrthographicCamera===!0),C!==N&&(C=N,cr=!0,Ds=!0)}if(he.isSkinnedMesh){an.setOptional(k,he,"bindMatrix"),an.setOptional(k,he,"bindMatrixInverse");const vn=he.skeleton;vn&&(Ee.floatVertexTextures?(vn.boneTexture===null&&vn.computeBoneTexture(),an.setValue(k,"boneTexture",vn.boneTexture,Fe),an.setValue(k,"boneTextureSize",vn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Vi=ce.morphAttributes;if((Vi.position!==void 0||Vi.normal!==void 0||Vi.color!==void 0&&Ee.isWebGL2===!0)&&V.update(he,ce,Un),(cr||ct.receiveShadow!==he.receiveShadow)&&(ct.receiveShadow=he.receiveShadow,an.setValue(k,"receiveShadow",he.receiveShadow)),Z.isMeshGouraudMaterial&&Z.envMap!==null&&(ci.envMap.value=lt,ci.flipEnvMap.value=lt.isCubeTexture&&lt.isRenderTargetTexture===!1?-1:1),cr&&(an.setValue(k,"toneMappingExposure",S.toneMappingExposure),ct.needsLights&&Hi(ci,Ds),He&&Z.fog===!0&&Re.refreshFogUniforms(ci,He),Re.refreshMaterialUniforms(ci,Z,ue,fe,tt),Do.upload(k,ct.uniformsList,ci,Fe)),Z.isShaderMaterial&&Z.uniformsNeedUpdate===!0&&(Do.upload(k,ct.uniformsList,ci,Fe),Z.uniformsNeedUpdate=!1),Z.isSpriteMaterial&&an.setValue(k,"center",he.center),an.setValue(k,"modelViewMatrix",he.modelViewMatrix),an.setValue(k,"normalMatrix",he.normalMatrix),an.setValue(k,"modelMatrix",he.matrixWorld),Z.isShaderMaterial||Z.isRawShaderMaterial){const vn=Z.uniformsGroups;for(let An=0,La=vn.length;An<La;An++)if(Ee.isWebGL2){const Gi=vn[An];st.update(Gi,Un),st.bind(Gi,Un)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Un}function Hi(N,Y){N.ambientLightColor.needsUpdate=Y,N.lightProbe.needsUpdate=Y,N.directionalLights.needsUpdate=Y,N.directionalLightShadows.needsUpdate=Y,N.pointLights.needsUpdate=Y,N.pointLightShadows.needsUpdate=Y,N.spotLights.needsUpdate=Y,N.spotLightShadows.needsUpdate=Y,N.rectAreaLights.needsUpdate=Y,N.hemisphereLights.needsUpdate=Y}function Pa(N){return N.isMeshLambertMaterial||N.isMeshToonMaterial||N.isMeshPhongMaterial||N.isMeshStandardMaterial||N.isShadowMaterial||N.isShaderMaterial&&N.lights===!0}this.getActiveCubeFace=function(){return L},this.getActiveMipmapLevel=function(){return d},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(N,Y,ce){ke.get(N.texture).__webglTexture=Y,ke.get(N.depthTexture).__webglTexture=ce;const Z=ke.get(N);Z.__hasExternalTextures=!0,Z.__hasExternalTextures&&(Z.__autoAllocateDepthBuffer=ce===void 0,Z.__autoAllocateDepthBuffer||me.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Z.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(N,Y){const ce=ke.get(N);ce.__webglFramebuffer=Y,ce.__useDefaultFramebuffer=Y===void 0},this.setRenderTarget=function(N,Y=0,ce=0){I=N,L=Y,d=ce;let Z=!0,he=null,He=!1,it=!1;if(N){const lt=ke.get(N);lt.__useDefaultFramebuffer!==void 0?(Me.bindFramebuffer(k.FRAMEBUFFER,null),Z=!1):lt.__webglFramebuffer===void 0?Fe.setupRenderTarget(N):lt.__hasExternalTextures&&Fe.rebindTextures(N,ke.get(N.texture).__webglTexture,ke.get(N.depthTexture).__webglTexture);const St=N.texture;(St.isData3DTexture||St.isDataArrayTexture||St.isCompressedArrayTexture)&&(it=!0);const at=ke.get(N).__webglFramebuffer;N.isWebGLCubeRenderTarget?(Array.isArray(at[Y])?he=at[Y][ce]:he=at[Y],He=!0):Ee.isWebGL2&&N.samples>0&&Fe.useMultisampledRTT(N)===!1?he=ke.get(N).__webglMultisampledFramebuffer:Array.isArray(at)?he=at[ce]:he=at,D.copy(N.viewport),le.copy(N.scissor),te=N.scissorTest}else D.copy(xe).multiplyScalar(ue).floor(),le.copy(K).multiplyScalar(ue).floor(),te=ae;if(Me.bindFramebuffer(k.FRAMEBUFFER,he)&&Ee.drawBuffers&&Z&&Me.drawBuffers(N,he),Me.viewport(D),Me.scissor(le),Me.setScissorTest(te),He){const lt=ke.get(N.texture);k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,k.TEXTURE_CUBE_MAP_POSITIVE_X+Y,lt.__webglTexture,ce)}else if(it){const lt=ke.get(N.texture),St=Y||0;k.framebufferTextureLayer(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,lt.__webglTexture,ce||0,St)}z=-1},this.readRenderTargetPixels=function(N,Y,ce,Z,he,He,it){if(!(N&&N.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ot=ke.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&it!==void 0&&(ot=ot[it]),ot){Me.bindFramebuffer(k.FRAMEBUFFER,ot);try{const lt=N.texture,St=lt.format,at=lt.type;if(St!==Wn&&Le.convert(St)!==k.getParameter(k.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const yt=at===bs&&(me.has("EXT_color_buffer_half_float")||Ee.isWebGL2&&me.has("EXT_color_buffer_float"));if(at!==Ni&&Le.convert(at)!==k.getParameter(k.IMPLEMENTATION_COLOR_READ_TYPE)&&!(at===gi&&(Ee.isWebGL2||me.has("OES_texture_float")||me.has("WEBGL_color_buffer_float")))&&!yt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Y>=0&&Y<=N.width-Z&&ce>=0&&ce<=N.height-he&&k.readPixels(Y,ce,Z,he,Le.convert(St),Le.convert(at),He)}finally{const lt=I!==null?ke.get(I).__webglFramebuffer:null;Me.bindFramebuffer(k.FRAMEBUFFER,lt)}}},this.copyFramebufferToTexture=function(N,Y,ce=0){const Z=Math.pow(2,-ce),he=Math.floor(Y.image.width*Z),He=Math.floor(Y.image.height*Z);Fe.setTexture2D(Y,0),k.copyTexSubImage2D(k.TEXTURE_2D,ce,0,0,N.x,N.y,he,He),Me.unbindTexture()},this.copyTextureToTexture=function(N,Y,ce,Z=0){const he=Y.image.width,He=Y.image.height,it=Le.convert(ce.format),ot=Le.convert(ce.type);Fe.setTexture2D(ce,0),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,ce.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ce.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,ce.unpackAlignment),Y.isDataTexture?k.texSubImage2D(k.TEXTURE_2D,Z,N.x,N.y,he,He,it,ot,Y.image.data):Y.isCompressedTexture?k.compressedTexSubImage2D(k.TEXTURE_2D,Z,N.x,N.y,Y.mipmaps[0].width,Y.mipmaps[0].height,it,Y.mipmaps[0].data):k.texSubImage2D(k.TEXTURE_2D,Z,N.x,N.y,it,ot,Y.image),Z===0&&ce.generateMipmaps&&k.generateMipmap(k.TEXTURE_2D),Me.unbindTexture()},this.copyTextureToTexture3D=function(N,Y,ce,Z,he=0){if(S.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const He=N.max.x-N.min.x+1,it=N.max.y-N.min.y+1,ot=N.max.z-N.min.z+1,lt=Le.convert(Z.format),St=Le.convert(Z.type);let at;if(Z.isData3DTexture)Fe.setTexture3D(Z,0),at=k.TEXTURE_3D;else if(Z.isDataArrayTexture)Fe.setTexture2DArray(Z,0),at=k.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,Z.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Z.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,Z.unpackAlignment);const yt=k.getParameter(k.UNPACK_ROW_LENGTH),Vt=k.getParameter(k.UNPACK_IMAGE_HEIGHT),Gt=k.getParameter(k.UNPACK_SKIP_PIXELS),wn=k.getParameter(k.UNPACK_SKIP_ROWS),kn=k.getParameter(k.UNPACK_SKIP_IMAGES),Wt=ce.isCompressedTexture?ce.mipmaps[0]:ce.image;k.pixelStorei(k.UNPACK_ROW_LENGTH,Wt.width),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,Wt.height),k.pixelStorei(k.UNPACK_SKIP_PIXELS,N.min.x),k.pixelStorei(k.UNPACK_SKIP_ROWS,N.min.y),k.pixelStorei(k.UNPACK_SKIP_IMAGES,N.min.z),ce.isDataTexture||ce.isData3DTexture?k.texSubImage3D(at,he,Y.x,Y.y,Y.z,He,it,ot,lt,St,Wt.data):ce.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),k.compressedTexSubImage3D(at,he,Y.x,Y.y,Y.z,He,it,ot,lt,Wt.data)):k.texSubImage3D(at,he,Y.x,Y.y,Y.z,He,it,ot,lt,St,Wt),k.pixelStorei(k.UNPACK_ROW_LENGTH,yt),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,Vt),k.pixelStorei(k.UNPACK_SKIP_PIXELS,Gt),k.pixelStorei(k.UNPACK_SKIP_ROWS,wn),k.pixelStorei(k.UNPACK_SKIP_IMAGES,kn),he===0&&Z.generateMipmaps&&k.generateMipmap(at),Me.unbindTexture()},this.initTexture=function(N){N.isCubeTexture?Fe.setTextureCube(N,0):N.isData3DTexture?Fe.setTexture3D(N,0):N.isDataArrayTexture||N.isCompressedArrayTexture?Fe.setTexture2DArray(N,0):Fe.setTexture2D(N,0),Me.unbindTexture()},this.resetState=function(){L=0,d=0,I=null,Me.reset(),De.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return _i}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===Bt?er:dh}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===er?Bt:ni}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class Jf extends Mh{}Jf.prototype.isWebGL1Renderer=!0;class Jo{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Ye(e),this.density=t}clone(){return new Jo(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class $o{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Ye(e),this.near=t,this.far=n}clone(){return new $o(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class bh extends Dt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}class Ko{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=ca,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Xn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Xn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Xn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Pn=new U;class Fr{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Pn.fromBufferAttribute(this,t),Pn.applyMatrix4(e),this.setXYZ(t,Pn.x,Pn.y,Pn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Pn.fromBufferAttribute(this,t),Pn.applyNormalMatrix(e),this.setXYZ(t,Pn.x,Pn.y,Pn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Pn.fromBufferAttribute(this,t),Pn.transformDirection(e),this.setXYZ(t,Pn.x,Pn.y,Pn.z);return this}setX(e,t){return this.normalized&&(t=Mt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Bn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Bn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Bn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Bn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array),i=Mt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array),i=Mt(i,this.array),r=Mt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new Ft(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Fr(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Sh extends Tn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Ye(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let hs;const Gs=new U,us=new U,ds=new U,fs=new ge,Ws=new ge,$f=new gt,io=new U,Xs=new U,ro=new U,ku=new ge,ec=new ge,Hu=new ge;class Kf extends Dt{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",hs===void 0){hs=new Tt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Ko(t,5);hs.setIndex([0,1,2,0,2,3]),hs.setAttribute("position",new Fr(n,3,0,!1)),hs.setAttribute("uv",new Fr(n,2,3,!1))}this.geometry=hs,this.material=e!==void 0?e:new Sh,this.center=new ge(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),us.setFromMatrixScale(this.matrixWorld),$f.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),ds.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&us.multiplyScalar(-ds.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const a=this.center;so(io.set(-.5,-.5,0),ds,a,us,i,r),so(Xs.set(.5,-.5,0),ds,a,us,i,r),so(ro.set(.5,.5,0),ds,a,us,i,r),ku.set(0,0),ec.set(1,0),Hu.set(1,1);let o=e.ray.intersectTriangle(io,Xs,ro,!1,Gs);if(o===null&&(so(Xs.set(-.5,.5,0),ds,a,us,i,r),ec.set(0,1),o=e.ray.intersectTriangle(io,ro,Xs,!1,Gs),o===null))return;const c=e.ray.origin.distanceTo(Gs);c<e.near||c>e.far||t.push({distance:c,point:Gs.clone(),uv:Fn.getInterpolation(Gs,io,Xs,ro,ku,ec,Hu,new ge),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function so(s,e,t,n,i,r){fs.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(Ws.x=r*fs.x-i*fs.y,Ws.y=i*fs.x+r*fs.y):Ws.copy(fs),s.copy(e),s.x+=Ws.x,s.y+=Ws.y,s.applyMatrix4($f)}const ao=new U,Vu=new U;class Qf extends Dt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let r;for(r=0;r<i.length&&!(t<i[r].distance);r++);return i.splice(r,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let r=t[n].distance;if(t[n].object.visible&&(r-=r*t[n].hysteresis),e<r)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){ao.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(ao);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){ao.setFromMatrixPosition(e.matrixWorld),Vu.setFromMatrixPosition(this.matrixWorld);const n=ao.distanceTo(Vu)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r;i++){let a=t[i].distance;if(t[i].object.visible&&(a-=a*t[i].hysteresis),n>=a)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const a=n[i];t.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return t}}const Gu=new U,Wu=new Ot,Xu=new Ot,ux=new U,qu=new gt,ps=new U,tc=new ri,Yu=new gt,nc=new kr;class ep extends _n{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new gt,this.bindMatrixInverse=new gt,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Mi),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)ps.fromBufferAttribute(t,n),this.applyBoneTransform(n,ps),this.boundingBox.expandByPoint(ps)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new ri),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)ps.fromBufferAttribute(t,n),this.applyBoneTransform(n,ps),this.boundingSphere.expandByPoint(ps)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),tc.copy(this.boundingSphere),tc.applyMatrix4(i),e.ray.intersectsSphere(tc)!==!1&&(Yu.copy(i).invert(),nc.copy(e.ray).applyMatrix4(Yu),!(this.boundingBox!==null&&nc.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,nc)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Ot,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;Wu.fromBufferAttribute(i.attributes.skinIndex,e),Xu.fromBufferAttribute(i.attributes.skinWeight,e),Gu.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const a=Xu.getComponent(r);if(a!==0){const o=Wu.getComponent(r);qu.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),t.addScaledVector(ux.copy(Gu).applyMatrix4(qu),a)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class Eh extends Dt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Ms extends tn{constructor(e=null,t=1,n=1,i,r,a,o,c,h=Qt,f=Qt,p,m){super(null,a,o,c,h,f,i,r,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const ju=new gt,dx=new gt;class Qo{constructor(e=[],t=[]){this.uuid=Xn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new gt)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new gt;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,a=e.length;r<a;r++){const o=e[r]?e[r].matrixWorld:dx;ju.multiplyMatrices(o,t[r]),ju.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Qo(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=If(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Ms(t,e,e,Wn,gi);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let a=t[r];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),a=new Eh),this.bones.push(a),this.boneInverses.push(new gt().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const a=t[i];e.bones.push(a.uuid);const o=n[i];e.boneInverses.push(o.toArray())}return e}}class Ts extends Ft{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const ms=new gt,Zu=new gt,oo=[],Ju=new Mi,fx=new gt,qs=new _n,Ys=new ri;class tp extends _n{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Ts(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,fx)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Mi),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,ms),Ju.copy(e.boundingBox).applyMatrix4(ms),this.boundingBox.union(Ju)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new ri),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,ms),Ys.copy(e.boundingSphere).applyMatrix4(ms),this.boundingSphere.union(Ys)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(qs.geometry=this.geometry,qs.material=this.material,qs.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ys.copy(this.boundingSphere),Ys.applyMatrix4(n),e.ray.intersectsSphere(Ys)!==!1))for(let r=0;r<i;r++){this.getMatrixAt(r,ms),Zu.multiplyMatrices(n,ms),qs.matrixWorld=Zu,qs.raycast(e,oo);for(let a=0,o=oo.length;a<o;a++){const c=oo[a];c.instanceId=r,c.object=this,t.push(c)}oo.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Ts(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Dn extends Tn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ye(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const $u=new U,Ku=new U,Qu=new gt,ic=new kr,lo=new ri;class rr extends Dt{constructor(e=new Tt,t=new Dn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)$u.fromBufferAttribute(t,i-1),Ku.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=$u.distanceTo(Ku);e.setAttribute("lineDistance",new Ze(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),lo.copy(n.boundingSphere),lo.applyMatrix4(i),lo.radius+=r,e.ray.intersectsSphere(lo)===!1)return;Qu.copy(i).invert(),ic.copy(e.ray).applyMatrix4(Qu);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=o*o,h=new U,f=new U,p=new U,m=new U,g=this.isLineSegments?2:1,y=n.index,x=n.attributes.position;if(y!==null){const _=Math.max(0,a.start),w=Math.min(y.count,a.start+a.count);for(let S=_,T=w-1;S<T;S+=g){const L=y.getX(S),d=y.getX(S+1);if(h.fromBufferAttribute(x,L),f.fromBufferAttribute(x,d),ic.distanceSqToSegment(h,f,m,p)>c)continue;m.applyMatrix4(this.matrixWorld);const z=e.ray.origin.distanceTo(m);z<e.near||z>e.far||t.push({distance:z,point:p.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,a.start),w=Math.min(x.count,a.start+a.count);for(let S=_,T=w-1;S<T;S+=g){if(h.fromBufferAttribute(x,S),f.fromBufferAttribute(x,S+1),ic.distanceSqToSegment(h,f,m,p)>c)continue;m.applyMatrix4(this.matrixWorld);const d=e.ray.origin.distanceTo(m);d<e.near||d>e.far||t.push({distance:d,point:p.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}const ed=new U,td=new U;class si extends rr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)ed.fromBufferAttribute(t,i),td.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+ed.distanceTo(td);e.setAttribute("lineDistance",new Ze(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class np extends rr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Th extends Tn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ye(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const nd=new gt,jc=new kr,co=new ri,ho=new U;class ip extends Dt{constructor(e=new Tt,t=new Th){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),co.copy(n.boundingSphere),co.applyMatrix4(i),co.radius+=r,e.ray.intersectsSphere(co)===!1)return;nd.copy(i).invert(),jc.copy(e.ray).applyMatrix4(nd);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=o*o,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,a.start),g=Math.min(h.count,a.start+a.count);for(let y=m,b=g;y<b;y++){const x=h.getX(y);ho.fromBufferAttribute(p,x),id(ho,x,c,i,e,t,this)}}else{const m=Math.max(0,a.start),g=Math.min(p.count,a.start+a.count);for(let y=m,b=g;y<b;y++)ho.fromBufferAttribute(p,y),id(ho,y,c,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}function id(s,e,t,n,i,r,a){const o=jc.distanceSqToPoint(s);if(o<t){const c=new U;jc.closestPointToPoint(s,c),c.applyMatrix4(n);const h=i.ray.origin.distanceTo(c);if(h<i.near||h>i.far)return;r.push({distance:h,distanceToRay:Math.sqrt(o),point:c,index:e,face:null,object:a})}}class px extends tn{constructor(e,t,n,i,r,a,o,c,h){super(e,t,n,i,r,a,o,c,h),this.isVideoTexture=!0,this.minFilter=a!==void 0?a:en,this.magFilter=r!==void 0?r:en,this.generateMipmaps=!1;const f=this;function p(){f.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class mx extends tn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Qt,this.minFilter=Qt,this.generateMipmaps=!1,this.needsUpdate=!0}}class el extends tn{constructor(e,t,n,i,r,a,o,c,h,f,p,m){super(null,a,o,c,h,f,i,r,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class gx extends el{constructor(e,t,n,i,r,a){super(e,t,n,r,a),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Sn}}class _x extends el{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,Fi),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class yx extends tn{constructor(e,t,n,i,r,a,o,c,h){super(e,t,n,i,r,a,o,c,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class ai{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const r=n.length;let a;t?a=t:a=e*n[r-1];let o=0,c=r-1,h;for(;o<=c;)if(i=Math.floor(o+(c-o)/2),h=n[i]-a,h<0)o=i+1;else if(h>0)c=i-1;else{c=i;break}if(i=c,n[i]===a)return i/(r-1);const f=n[i],m=n[i+1]-f,g=(a-f)/m;return(i+g)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const a=this.getPoint(i),o=this.getPoint(r),c=t||(a.isVector2?new ge:new U);return c.copy(o).sub(a).normalize(),c}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new U,i=[],r=[],a=[],o=new U,c=new gt;for(let g=0;g<=e;g++){const y=g/e;i[g]=this.getTangentAt(y,new U)}r[0]=new U,a[0]=new U;let h=Number.MAX_VALUE;const f=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);f<=h&&(h=f,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],o),a[0].crossVectors(i[0],r[0]);for(let g=1;g<=e;g++){if(r[g]=r[g-1].clone(),a[g]=a[g-1].clone(),o.crossVectors(i[g-1],i[g]),o.length()>Number.EPSILON){o.normalize();const y=Math.acos(jt(i[g-1].dot(i[g]),-1,1));r[g].applyMatrix4(c.makeRotationAxis(o,y))}a[g].crossVectors(i[g],r[g])}if(t===!0){let g=Math.acos(jt(r[0].dot(r[e]),-1,1));g/=e,i[0].dot(o.crossVectors(r[0],r[e]))>0&&(g=-g);for(let y=1;y<=e;y++)r[y].applyMatrix4(c.makeRotationAxis(i[y],g*y)),a[y].crossVectors(i[y],r[y])}return{tangents:i,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class tl extends ai{constructor(e=0,t=0,n=1,i=1,r=0,a=Math.PI*2,o=!1,c=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=o,this.aRotation=c}getPoint(e,t){const n=t||new ge,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(a?r=0:r=i),this.aClockwise===!0&&!a&&(r===i?r=-i:r=r-i);const o=this.aStartAngle+e*r;let c=this.aX+this.xRadius*Math.cos(o),h=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const f=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=c-this.aX,g=h-this.aY;c=m*f-g*p+this.aX,h=m*p+g*f+this.aY}return n.set(c,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class rp extends tl{constructor(e,t,n,i,r,a){super(e,t,n,n,i,r,a),this.isArcCurve=!0,this.type="ArcCurve"}}function wh(){let s=0,e=0,t=0,n=0;function i(r,a,o,c){s=r,e=o,t=-3*r+3*a-2*o-c,n=2*r-2*a+o+c}return{initCatmullRom:function(r,a,o,c,h){i(a,o,h*(o-r),h*(c-a))},initNonuniformCatmullRom:function(r,a,o,c,h,f,p){let m=(a-r)/h-(o-r)/(h+f)+(o-a)/f,g=(o-a)/f-(c-a)/(f+p)+(c-o)/p;m*=f,g*=f,i(a,o,m,g)},calc:function(r){const a=r*r,o=a*r;return s+e*r+t*a+n*o}}}const uo=new U,rc=new wh,sc=new wh,ac=new wh;class sp extends ai{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new U){const n=t,i=this.points,r=i.length,a=(r-(this.closed?0:1))*e;let o=Math.floor(a),c=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:c===0&&o===r-1&&(o=r-2,c=1);let h,f;this.closed||o>0?h=i[(o-1)%r]:(uo.subVectors(i[0],i[1]).add(i[0]),h=uo);const p=i[o%r],m=i[(o+1)%r];if(this.closed||o+2<r?f=i[(o+2)%r]:(uo.subVectors(i[r-1],i[r-2]).add(i[r-1]),f=uo),this.curveType==="centripetal"||this.curveType==="chordal"){const g=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),g),b=Math.pow(p.distanceToSquared(m),g),x=Math.pow(m.distanceToSquared(f),g);b<1e-4&&(b=1),y<1e-4&&(y=b),x<1e-4&&(x=b),rc.initNonuniformCatmullRom(h.x,p.x,m.x,f.x,y,b,x),sc.initNonuniformCatmullRom(h.y,p.y,m.y,f.y,y,b,x),ac.initNonuniformCatmullRom(h.z,p.z,m.z,f.z,y,b,x)}else this.curveType==="catmullrom"&&(rc.initCatmullRom(h.x,p.x,m.x,f.x,this.tension),sc.initCatmullRom(h.y,p.y,m.y,f.y,this.tension),ac.initCatmullRom(h.z,p.z,m.z,f.z,this.tension));return n.set(rc.calc(c),sc.calc(c),ac.calc(c)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new U().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function rd(s,e,t,n,i){const r=(n-e)*.5,a=(i-t)*.5,o=s*s,c=s*o;return(2*t-2*n+r+a)*c+(-3*t+3*n-2*r-a)*o+r*s+t}function vx(s,e){const t=1-s;return t*t*e}function xx(s,e){return 2*(1-s)*s*e}function Mx(s,e){return s*s*e}function ea(s,e,t,n){return vx(s,e)+xx(s,t)+Mx(s,n)}function bx(s,e){const t=1-s;return t*t*t*e}function Sx(s,e){const t=1-s;return 3*t*t*s*e}function Ex(s,e){return 3*(1-s)*s*s*e}function Tx(s,e){return s*s*s*e}function ta(s,e,t,n,i){return bx(s,e)+Sx(s,t)+Ex(s,n)+Tx(s,i)}class Ah extends ai{constructor(e=new ge,t=new ge,n=new ge,i=new ge){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ge){const n=t,i=this.v0,r=this.v1,a=this.v2,o=this.v3;return n.set(ta(e,i.x,r.x,a.x,o.x),ta(e,i.y,r.y,a.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ap extends ai{constructor(e=new U,t=new U,n=new U,i=new U){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new U){const n=t,i=this.v0,r=this.v1,a=this.v2,o=this.v3;return n.set(ta(e,i.x,r.x,a.x,o.x),ta(e,i.y,r.y,a.y,o.y),ta(e,i.z,r.z,a.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class nl extends ai{constructor(e=new ge,t=new ge){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ge){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ge){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class op extends ai{constructor(e=new U,t=new U){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new U){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new U){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Ch extends ai{constructor(e=new ge,t=new ge,n=new ge){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ge){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(ea(e,i.x,r.x,a.x),ea(e,i.y,r.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Rh extends ai{constructor(e=new U,t=new U,n=new U){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new U){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(ea(e,i.x,r.x,a.x),ea(e,i.y,r.y,a.y),ea(e,i.z,r.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Ph extends ai{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ge){const n=t,i=this.points,r=(i.length-1)*e,a=Math.floor(r),o=r-a,c=i[a===0?a:a-1],h=i[a],f=i[a>i.length-2?i.length-1:a+1],p=i[a>i.length-3?i.length-1:a+2];return n.set(rd(o,c.x,h.x,f.x,p.x),rd(o,c.y,h.y,f.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ge().fromArray(i))}return this}}var Lh=Object.freeze({__proto__:null,ArcCurve:rp,CatmullRomCurve3:sp,CubicBezierCurve:Ah,CubicBezierCurve3:ap,EllipseCurve:tl,LineCurve:nl,LineCurve3:op,QuadraticBezierCurve:Ch,QuadraticBezierCurve3:Rh,SplineCurve:Ph});class lp extends ai{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new nl(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const a=i[r]-n,o=this.curves[r],c=o.getLength(),h=c===0?0:1-a/c;return o.getPointAt(h,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const a=r[i],o=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,c=a.getPoints(o);for(let h=0;h<c.length;h++){const f=c[h];n&&n.equals(f)||(t.push(f),n=f)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Lh[i.type]().fromJSON(i))}return this}}class da extends lp{constructor(e){super(),this.type="Path",this.currentPoint=new ge,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new nl(this.currentPoint.clone(),new ge(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new Ch(this.currentPoint.clone(),new ge(e,t),new ge(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,a){const o=new Ah(this.currentPoint.clone(),new ge(e,t),new ge(n,i),new ge(r,a));return this.curves.push(o),this.currentPoint.set(r,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Ph(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,a){const o=this.currentPoint.x,c=this.currentPoint.y;return this.absarc(e+o,t+c,n,i,r,a),this}absarc(e,t,n,i,r,a){return this.absellipse(e,t,n,n,i,r,a),this}ellipse(e,t,n,i,r,a,o,c){const h=this.currentPoint.x,f=this.currentPoint.y;return this.absellipse(e+h,t+f,n,i,r,a,o,c),this}absellipse(e,t,n,i,r,a,o,c){const h=new tl(e,t,n,i,r,a,o,c);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const f=h.getPoint(1);return this.currentPoint.copy(f),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Ea extends Tt{constructor(e=[new ge(0,-.5),new ge(.5,0),new ge(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=jt(i,0,Math.PI*2);const r=[],a=[],o=[],c=[],h=[],f=1/t,p=new U,m=new ge,g=new U,y=new U,b=new U;let x=0,_=0;for(let w=0;w<=e.length-1;w++)switch(w){case 0:x=e[w+1].x-e[w].x,_=e[w+1].y-e[w].y,g.x=_*1,g.y=-x,g.z=_*0,b.copy(g),g.normalize(),c.push(g.x,g.y,g.z);break;case e.length-1:c.push(b.x,b.y,b.z);break;default:x=e[w+1].x-e[w].x,_=e[w+1].y-e[w].y,g.x=_*1,g.y=-x,g.z=_*0,y.copy(g),g.x+=b.x,g.y+=b.y,g.z+=b.z,g.normalize(),c.push(g.x,g.y,g.z),b.copy(y)}for(let w=0;w<=t;w++){const S=n+w*f*i,T=Math.sin(S),L=Math.cos(S);for(let d=0;d<=e.length-1;d++){p.x=e[d].x*T,p.y=e[d].y,p.z=e[d].x*L,a.push(p.x,p.y,p.z),m.x=w/t,m.y=d/(e.length-1),o.push(m.x,m.y);const I=c[3*d+0]*T,z=c[3*d+1],C=c[3*d+0]*L;h.push(I,z,C)}}for(let w=0;w<t;w++)for(let S=0;S<e.length-1;S++){const T=S+w*e.length,L=T,d=T+e.length,I=T+e.length+1,z=T+1;r.push(L,d,z),r.push(I,z,d)}this.setIndex(r),this.setAttribute("position",new Ze(a,3)),this.setAttribute("uv",new Ze(o,2)),this.setAttribute("normal",new Ze(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ea(e.points,e.segments,e.phiStart,e.phiLength)}}class il extends Ea{constructor(e=1,t=1,n=4,i=8){const r=new da;r.absarc(0,-t/2,e,Math.PI*1.5,0),r.absarc(0,t/2,e,0,Math.PI*.5),super(r.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new il(e.radius,e.length,e.capSegments,e.radialSegments)}}class rl extends Tt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],a=[],o=[],c=[],h=new U,f=new ge;a.push(0,0,0),o.push(0,0,1),c.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const g=n+p/t*i;h.x=e*Math.cos(g),h.y=e*Math.sin(g),a.push(h.x,h.y,h.z),o.push(0,0,1),f.x=(a[m]/e+1)/2,f.y=(a[m+1]/e+1)/2,c.push(f.x,f.y)}for(let p=1;p<=t;p++)r.push(p,p+1,0);this.setIndex(r),this.setAttribute("position",new Ze(a,3)),this.setAttribute("normal",new Ze(o,3)),this.setAttribute("uv",new Ze(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new rl(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Hr extends Tt{constructor(e=1,t=1,n=1,i=32,r=1,a=!1,o=0,c=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:c};const h=this;i=Math.floor(i),r=Math.floor(r);const f=[],p=[],m=[],g=[];let y=0;const b=[],x=n/2;let _=0;w(),a===!1&&(e>0&&S(!0),t>0&&S(!1)),this.setIndex(f),this.setAttribute("position",new Ze(p,3)),this.setAttribute("normal",new Ze(m,3)),this.setAttribute("uv",new Ze(g,2));function w(){const T=new U,L=new U;let d=0;const I=(t-e)/n;for(let z=0;z<=r;z++){const C=[],D=z/r,le=D*(t-e)+e;for(let te=0;te<=i;te++){const q=te/i,J=q*c+o,re=Math.sin(J),fe=Math.cos(J);L.x=le*re,L.y=-D*n+x,L.z=le*fe,p.push(L.x,L.y,L.z),T.set(re,I,fe).normalize(),m.push(T.x,T.y,T.z),g.push(q,1-D),C.push(y++)}b.push(C)}for(let z=0;z<i;z++)for(let C=0;C<r;C++){const D=b[C][z],le=b[C+1][z],te=b[C+1][z+1],q=b[C][z+1];f.push(D,le,q),f.push(le,te,q),d+=6}h.addGroup(_,d,0),_+=d}function S(T){const L=y,d=new ge,I=new U;let z=0;const C=T===!0?e:t,D=T===!0?1:-1;for(let te=1;te<=i;te++)p.push(0,x*D,0),m.push(0,D,0),g.push(.5,.5),y++;const le=y;for(let te=0;te<=i;te++){const J=te/i*c+o,re=Math.cos(J),fe=Math.sin(J);I.x=C*fe,I.y=x*D,I.z=C*re,p.push(I.x,I.y,I.z),m.push(0,D,0),d.x=re*.5+.5,d.y=fe*.5*D+.5,g.push(d.x,d.y),y++}for(let te=0;te<i;te++){const q=L+te,J=le+te;T===!0?f.push(J,J+1,q):f.push(J+1,J,q),z+=3}h.addGroup(_,z,T===!0?1:2),_+=z}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Hr(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class sl extends Hr{constructor(e=1,t=1,n=32,i=1,r=!1,a=0,o=Math.PI*2){super(0,e,t,n,i,r,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:o}}static fromJSON(e){return new sl(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class ar extends Tt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],a=[];o(i),h(n),f(),this.setAttribute("position",new Ze(r,3)),this.setAttribute("normal",new Ze(r.slice(),3)),this.setAttribute("uv",new Ze(a,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function o(w){const S=new U,T=new U,L=new U;for(let d=0;d<t.length;d+=3)g(t[d+0],S),g(t[d+1],T),g(t[d+2],L),c(S,T,L,w)}function c(w,S,T,L){const d=L+1,I=[];for(let z=0;z<=d;z++){I[z]=[];const C=w.clone().lerp(T,z/d),D=S.clone().lerp(T,z/d),le=d-z;for(let te=0;te<=le;te++)te===0&&z===d?I[z][te]=C:I[z][te]=C.clone().lerp(D,te/le)}for(let z=0;z<d;z++)for(let C=0;C<2*(d-z)-1;C++){const D=Math.floor(C/2);C%2===0?(m(I[z][D+1]),m(I[z+1][D]),m(I[z][D])):(m(I[z][D+1]),m(I[z+1][D+1]),m(I[z+1][D]))}}function h(w){const S=new U;for(let T=0;T<r.length;T+=3)S.x=r[T+0],S.y=r[T+1],S.z=r[T+2],S.normalize().multiplyScalar(w),r[T+0]=S.x,r[T+1]=S.y,r[T+2]=S.z}function f(){const w=new U;for(let S=0;S<r.length;S+=3){w.x=r[S+0],w.y=r[S+1],w.z=r[S+2];const T=x(w)/2/Math.PI+.5,L=_(w)/Math.PI+.5;a.push(T,1-L)}y(),p()}function p(){for(let w=0;w<a.length;w+=6){const S=a[w+0],T=a[w+2],L=a[w+4],d=Math.max(S,T,L),I=Math.min(S,T,L);d>.9&&I<.1&&(S<.2&&(a[w+0]+=1),T<.2&&(a[w+2]+=1),L<.2&&(a[w+4]+=1))}}function m(w){r.push(w.x,w.y,w.z)}function g(w,S){const T=w*3;S.x=e[T+0],S.y=e[T+1],S.z=e[T+2]}function y(){const w=new U,S=new U,T=new U,L=new U,d=new ge,I=new ge,z=new ge;for(let C=0,D=0;C<r.length;C+=9,D+=6){w.set(r[C+0],r[C+1],r[C+2]),S.set(r[C+3],r[C+4],r[C+5]),T.set(r[C+6],r[C+7],r[C+8]),d.set(a[D+0],a[D+1]),I.set(a[D+2],a[D+3]),z.set(a[D+4],a[D+5]),L.copy(w).add(S).add(T).divideScalar(3);const le=x(L);b(d,D+0,w,le),b(I,D+2,S,le),b(z,D+4,T,le)}}function b(w,S,T,L){L<0&&w.x===1&&(a[S]=w.x-1),T.x===0&&T.z===0&&(a[S]=L/2/Math.PI+.5)}function x(w){return Math.atan2(w.z,-w.x)}function _(w){return Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ar(e.vertices,e.indices,e.radius,e.details)}}class al extends ar{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,a,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new al(e.radius,e.detail)}}const fo=new U,po=new U,oc=new U,mo=new Fn;class Ih extends Tt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos(Ur*t),a=e.getIndex(),o=e.getAttribute("position"),c=a?a.count:o.count,h=[0,0,0],f=["a","b","c"],p=new Array(3),m={},g=[];for(let y=0;y<c;y+=3){a?(h[0]=a.getX(y),h[1]=a.getX(y+1),h[2]=a.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:b,b:x,c:_}=mo;if(b.fromBufferAttribute(o,h[0]),x.fromBufferAttribute(o,h[1]),_.fromBufferAttribute(o,h[2]),mo.getNormal(oc),p[0]=`${Math.round(b.x*i)},${Math.round(b.y*i)},${Math.round(b.z*i)}`,p[1]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,p[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let w=0;w<3;w++){const S=(w+1)%3,T=p[w],L=p[S],d=mo[f[w]],I=mo[f[S]],z=`${T}_${L}`,C=`${L}_${T}`;C in m&&m[C]?(oc.dot(m[C].normal)<=r&&(g.push(d.x,d.y,d.z),g.push(I.x,I.y,I.z)),m[C]=null):z in m||(m[z]={index0:h[w],index1:h[S],normal:oc.clone()})}}for(const y in m)if(m[y]){const{index0:b,index1:x}=m[y];fo.fromBufferAttribute(o,b),po.fromBufferAttribute(o,x),g.push(fo.x,fo.y,fo.z),g.push(po.x,po.y,po.z)}this.setAttribute("position",new Ze(g,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Nr extends da{constructor(e){super(e),this.uuid=Xn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new da().fromJSON(i))}return this}}const wx={triangulate:function(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let r=cp(s,0,i,t,!0);const a=[];if(!r||r.next===r.prev)return a;let o,c,h,f,p,m,g;if(n&&(r=Lx(s,e,r,t)),s.length>80*t){o=h=s[0],c=f=s[1];for(let y=t;y<i;y+=t)p=s[y],m=s[y+1],p<o&&(o=p),m<c&&(c=m),p>h&&(h=p),m>f&&(f=m);g=Math.max(h-o,f-c),g=g!==0?32767/g:0}return fa(r,a,t,o,c,g,0),a}};function cp(s,e,t,n,i){let r,a;if(i===Vx(s,e,t,n)>0)for(r=e;r<t;r+=n)a=sd(r,s[r],s[r+1],a);else for(r=t-n;r>=e;r-=n)a=sd(r,s[r],s[r+1],a);return a&&ol(a,a.next)&&(ma(a),a=a.next),a}function Br(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&(ol(t,t.next)||Xt(t.prev,t,t.next)===0)){if(ma(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function fa(s,e,t,n,i,r,a){if(!s)return;!a&&r&&Ox(s,n,i,r);let o=s,c,h;for(;s.prev!==s.next;){if(c=s.prev,h=s.next,r?Cx(s,n,i,r):Ax(s)){e.push(c.i/t|0),e.push(s.i/t|0),e.push(h.i/t|0),ma(s),s=h.next,o=h.next;continue}if(s=h,s===o){a?a===1?(s=Rx(Br(s),e,t),fa(s,e,t,n,i,r,2)):a===2&&Px(s,e,t,n,i,r):fa(Br(s),e,t,n,i,r,1);break}}}function Ax(s){const e=s.prev,t=s,n=s.next;if(Xt(e,t,n)>=0)return!1;const i=e.x,r=t.x,a=n.x,o=e.y,c=t.y,h=n.y,f=i<r?i<a?i:a:r<a?r:a,p=o<c?o<h?o:h:c<h?c:h,m=i>r?i>a?i:a:r>a?r:a,g=o>c?o>h?o:h:c>h?c:h;let y=n.next;for(;y!==e;){if(y.x>=f&&y.x<=m&&y.y>=p&&y.y<=g&&vs(i,o,r,c,a,h,y.x,y.y)&&Xt(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function Cx(s,e,t,n){const i=s.prev,r=s,a=s.next;if(Xt(i,r,a)>=0)return!1;const o=i.x,c=r.x,h=a.x,f=i.y,p=r.y,m=a.y,g=o<c?o<h?o:h:c<h?c:h,y=f<p?f<m?f:m:p<m?p:m,b=o>c?o>h?o:h:c>h?c:h,x=f>p?f>m?f:m:p>m?p:m,_=Zc(g,y,e,t,n),w=Zc(b,x,e,t,n);let S=s.prevZ,T=s.nextZ;for(;S&&S.z>=_&&T&&T.z<=w;){if(S.x>=g&&S.x<=b&&S.y>=y&&S.y<=x&&S!==i&&S!==a&&vs(o,f,c,p,h,m,S.x,S.y)&&Xt(S.prev,S,S.next)>=0||(S=S.prevZ,T.x>=g&&T.x<=b&&T.y>=y&&T.y<=x&&T!==i&&T!==a&&vs(o,f,c,p,h,m,T.x,T.y)&&Xt(T.prev,T,T.next)>=0))return!1;T=T.nextZ}for(;S&&S.z>=_;){if(S.x>=g&&S.x<=b&&S.y>=y&&S.y<=x&&S!==i&&S!==a&&vs(o,f,c,p,h,m,S.x,S.y)&&Xt(S.prev,S,S.next)>=0)return!1;S=S.prevZ}for(;T&&T.z<=w;){if(T.x>=g&&T.x<=b&&T.y>=y&&T.y<=x&&T!==i&&T!==a&&vs(o,f,c,p,h,m,T.x,T.y)&&Xt(T.prev,T,T.next)>=0)return!1;T=T.nextZ}return!0}function Rx(s,e,t){let n=s;do{const i=n.prev,r=n.next.next;!ol(i,r)&&hp(i,n,n.next,r)&&pa(i,r)&&pa(r,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(r.i/t|0),ma(n),ma(n.next),n=s=r),n=n.next}while(n!==s);return Br(n)}function Px(s,e,t,n,i,r){let a=s;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&zx(a,o)){let c=up(a,o);a=Br(a,a.next),c=Br(c,c.next),fa(a,e,t,n,i,r,0),fa(c,e,t,n,i,r,0);return}o=o.next}a=a.next}while(a!==s)}function Lx(s,e,t,n){const i=[];let r,a,o,c,h;for(r=0,a=e.length;r<a;r++)o=e[r]*n,c=r<a-1?e[r+1]*n:s.length,h=cp(s,o,c,n,!1),h===h.next&&(h.steiner=!0),i.push(Bx(h));for(i.sort(Ix),r=0;r<i.length;r++)t=Dx(i[r],t);return t}function Ix(s,e){return s.x-e.x}function Dx(s,e){const t=Ux(s,e);if(!t)return e;const n=up(t,s);return Br(n,n.next),Br(t,t.next)}function Ux(s,e){let t=e,n=-1/0,i;const r=s.x,a=s.y;do{if(a<=t.y&&a>=t.next.y&&t.next.y!==t.y){const m=t.x+(a-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=r&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===r))return i}t=t.next}while(t!==e);if(!i)return null;const o=i,c=i.x,h=i.y;let f=1/0,p;t=i;do r>=t.x&&t.x>=c&&r!==t.x&&vs(a<h?r:n,a,c,h,a<h?n:r,a,t.x,t.y)&&(p=Math.abs(a-t.y)/(r-t.x),pa(t,s)&&(p<f||p===f&&(t.x>i.x||t.x===i.x&&Nx(i,t)))&&(i=t,f=p)),t=t.next;while(t!==o);return i}function Nx(s,e){return Xt(s.prev,s,e.prev)<0&&Xt(e.next,s,s.next)<0}function Ox(s,e,t,n){let i=s;do i.z===0&&(i.z=Zc(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,Fx(i)}function Fx(s){let e,t,n,i,r,a,o,c,h=1;do{for(t=s,s=null,r=null,a=0;t;){for(a++,n=t,o=0,e=0;e<h&&(o++,n=n.nextZ,!!n);e++);for(c=h;o>0||c>0&&n;)o!==0&&(c===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,o--):(i=n,n=n.nextZ,c--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;t=n}r.nextZ=null,h*=2}while(a>1);return s}function Zc(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function Bx(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function vs(s,e,t,n,i,r,a,o){return(i-a)*(e-o)>=(s-a)*(r-o)&&(s-a)*(n-o)>=(t-a)*(e-o)&&(t-a)*(r-o)>=(i-a)*(n-o)}function zx(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!kx(s,e)&&(pa(s,e)&&pa(e,s)&&Hx(s,e)&&(Xt(s.prev,s,e.prev)||Xt(s,e.prev,e))||ol(s,e)&&Xt(s.prev,s,s.next)>0&&Xt(e.prev,e,e.next)>0)}function Xt(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function ol(s,e){return s.x===e.x&&s.y===e.y}function hp(s,e,t,n){const i=_o(Xt(s,e,t)),r=_o(Xt(s,e,n)),a=_o(Xt(t,n,s)),o=_o(Xt(t,n,e));return!!(i!==r&&a!==o||i===0&&go(s,t,e)||r===0&&go(s,n,e)||a===0&&go(t,s,n)||o===0&&go(t,e,n))}function go(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function _o(s){return s>0?1:s<0?-1:0}function kx(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&hp(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function pa(s,e){return Xt(s.prev,s,s.next)<0?Xt(s,e,s.next)>=0&&Xt(s,s.prev,e)>=0:Xt(s,e,s.prev)<0||Xt(s,s.next,e)<0}function Hx(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function up(s,e){const t=new Jc(s.i,s.x,s.y),n=new Jc(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function sd(s,e,t,n){const i=new Jc(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function ma(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Jc(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Vx(s,e,t,n){let i=0;for(let r=e,a=t-n;r<t;r+=n)i+=(s[a]-s[r])*(s[r+1]+s[a+1]),a=r;return i}class yi{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return yi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];ad(e),od(n,e);let a=e.length;t.forEach(ad);for(let c=0;c<t.length;c++)i.push(a),a+=t[c].length,od(n,t[c]);const o=wx.triangulate(n,i);for(let c=0;c<o.length;c+=3)r.push(o.slice(c,c+3));return r}}function ad(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function od(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class ll extends Tt{constructor(e=new Nr([new ge(.5,.5),new ge(-.5,.5),new ge(-.5,-.5),new ge(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let o=0,c=e.length;o<c;o++){const h=e[o];a(h)}this.setAttribute("position",new Ze(i,3)),this.setAttribute("uv",new Ze(r,2)),this.computeVertexNormals();function a(o){const c=[],h=t.curveSegments!==void 0?t.curveSegments:12,f=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,g=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:g-.1,b=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,w=t.UVGenerator!==void 0?t.UVGenerator:Gx;let S,T=!1,L,d,I,z;_&&(S=_.getSpacedPoints(f),T=!0,m=!1,L=_.computeFrenetFrames(f,!1),d=new U,I=new U,z=new U),m||(x=0,g=0,y=0,b=0);const C=o.extractPoints(h);let D=C.shape;const le=C.holes;if(!yi.isClockWise(D)){D=D.reverse();for(let k=0,Pe=le.length;k<Pe;k++){const me=le[k];yi.isClockWise(me)&&(le[k]=me.reverse())}}const q=yi.triangulateShape(D,le),J=D;for(let k=0,Pe=le.length;k<Pe;k++){const me=le[k];D=D.concat(me)}function re(k,Pe,me){return Pe||console.error("THREE.ExtrudeGeometry: vec does not exist"),k.clone().addScaledVector(Pe,me)}const fe=D.length,ue=q.length;function pe(k,Pe,me){let Ee,Me,$e;const ke=k.x-Pe.x,Fe=k.y-Pe.y,et=me.x-k.x,pt=me.y-k.y,Ie=ke*ke+Fe*Fe,O=ke*pt-Fe*et;if(Math.abs(O)>Number.EPSILON){const R=Math.sqrt(Ie),Q=Math.sqrt(et*et+pt*pt),Re=Pe.x-Fe/R,Se=Pe.y+ke/R,Ce=me.x-pt/Q,We=me.y+et/Q,Ae=((Ce-Re)*pt-(We-Se)*et)/(ke*pt-Fe*et);Ee=Re+ke*Ae-k.x,Me=Se+Fe*Ae-k.y;const ne=Ee*Ee+Me*Me;if(ne<=2)return new ge(Ee,Me);$e=Math.sqrt(ne/2)}else{let R=!1;ke>Number.EPSILON?et>Number.EPSILON&&(R=!0):ke<-Number.EPSILON?et<-Number.EPSILON&&(R=!0):Math.sign(Fe)===Math.sign(pt)&&(R=!0),R?(Ee=-Fe,Me=ke,$e=Math.sqrt(Ie)):(Ee=ke,Me=Fe,$e=Math.sqrt(Ie/2))}return new ge(Ee/$e,Me/$e)}const Te=[];for(let k=0,Pe=J.length,me=Pe-1,Ee=k+1;k<Pe;k++,me++,Ee++)me===Pe&&(me=0),Ee===Pe&&(Ee=0),Te[k]=pe(J[k],J[me],J[Ee]);const xe=[];let K,ae=Te.concat();for(let k=0,Pe=le.length;k<Pe;k++){const me=le[k];K=[];for(let Ee=0,Me=me.length,$e=Me-1,ke=Ee+1;Ee<Me;Ee++,$e++,ke++)$e===Me&&($e=0),ke===Me&&(ke=0),K[Ee]=pe(me[Ee],me[$e],me[ke]);xe.push(K),ae=ae.concat(K)}for(let k=0;k<x;k++){const Pe=k/x,me=g*Math.cos(Pe*Math.PI/2),Ee=y*Math.sin(Pe*Math.PI/2)+b;for(let Me=0,$e=J.length;Me<$e;Me++){const ke=re(J[Me],Te[Me],Ee);Qe(ke.x,ke.y,-me)}for(let Me=0,$e=le.length;Me<$e;Me++){const ke=le[Me];K=xe[Me];for(let Fe=0,et=ke.length;Fe<et;Fe++){const pt=re(ke[Fe],K[Fe],Ee);Qe(pt.x,pt.y,-me)}}}const Ue=y+b;for(let k=0;k<fe;k++){const Pe=m?re(D[k],ae[k],Ue):D[k];T?(I.copy(L.normals[0]).multiplyScalar(Pe.x),d.copy(L.binormals[0]).multiplyScalar(Pe.y),z.copy(S[0]).add(I).add(d),Qe(z.x,z.y,z.z)):Qe(Pe.x,Pe.y,0)}for(let k=1;k<=f;k++)for(let Pe=0;Pe<fe;Pe++){const me=m?re(D[Pe],ae[Pe],Ue):D[Pe];T?(I.copy(L.normals[k]).multiplyScalar(me.x),d.copy(L.binormals[k]).multiplyScalar(me.y),z.copy(S[k]).add(I).add(d),Qe(z.x,z.y,z.z)):Qe(me.x,me.y,p/f*k)}for(let k=x-1;k>=0;k--){const Pe=k/x,me=g*Math.cos(Pe*Math.PI/2),Ee=y*Math.sin(Pe*Math.PI/2)+b;for(let Me=0,$e=J.length;Me<$e;Me++){const ke=re(J[Me],Te[Me],Ee);Qe(ke.x,ke.y,p+me)}for(let Me=0,$e=le.length;Me<$e;Me++){const ke=le[Me];K=xe[Me];for(let Fe=0,et=ke.length;Fe<et;Fe++){const pt=re(ke[Fe],K[Fe],Ee);T?Qe(pt.x,pt.y+S[f-1].y,S[f-1].x+me):Qe(pt.x,pt.y,p+me)}}}ze(),Ge();function ze(){const k=i.length/3;if(m){let Pe=0,me=fe*Pe;for(let Ee=0;Ee<ue;Ee++){const Me=q[Ee];je(Me[2]+me,Me[1]+me,Me[0]+me)}Pe=f+x*2,me=fe*Pe;for(let Ee=0;Ee<ue;Ee++){const Me=q[Ee];je(Me[0]+me,Me[1]+me,Me[2]+me)}}else{for(let Pe=0;Pe<ue;Pe++){const me=q[Pe];je(me[2],me[1],me[0])}for(let Pe=0;Pe<ue;Pe++){const me=q[Pe];je(me[0]+fe*f,me[1]+fe*f,me[2]+fe*f)}}n.addGroup(k,i.length/3-k,0)}function Ge(){const k=i.length/3;let Pe=0;tt(J,Pe),Pe+=J.length;for(let me=0,Ee=le.length;me<Ee;me++){const Me=le[me];tt(Me,Pe),Pe+=Me.length}n.addGroup(k,i.length/3-k,1)}function tt(k,Pe){let me=k.length;for(;--me>=0;){const Ee=me;let Me=me-1;Me<0&&(Me=k.length-1);for(let $e=0,ke=f+x*2;$e<ke;$e++){const Fe=fe*$e,et=fe*($e+1),pt=Pe+Ee+Fe,Ie=Pe+Me+Fe,O=Pe+Me+et,R=Pe+Ee+et;_t(pt,Ie,O,R)}}}function Qe(k,Pe,me){c.push(k),c.push(Pe),c.push(me)}function je(k,Pe,me){Pt(k),Pt(Pe),Pt(me);const Ee=i.length/3,Me=w.generateTopUV(n,i,Ee-3,Ee-2,Ee-1);nt(Me[0]),nt(Me[1]),nt(Me[2])}function _t(k,Pe,me,Ee){Pt(k),Pt(Pe),Pt(Ee),Pt(Pe),Pt(me),Pt(Ee);const Me=i.length/3,$e=w.generateSideWallUV(n,i,Me-6,Me-3,Me-2,Me-1);nt($e[0]),nt($e[1]),nt($e[3]),nt($e[1]),nt($e[2]),nt($e[3])}function Pt(k){i.push(c[k*3+0]),i.push(c[k*3+1]),i.push(c[k*3+2])}function nt(k){r.push(k.x),r.push(k.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return Wx(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,a=e.shapes.length;r<a;r++){const o=t[e.shapes[r]];n.push(o)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Lh[i.type]().fromJSON(i)),new ll(n,e.options)}}const Gx={generateTopUV:function(s,e,t,n,i){const r=e[t*3],a=e[t*3+1],o=e[n*3],c=e[n*3+1],h=e[i*3],f=e[i*3+1];return[new ge(r,a),new ge(o,c),new ge(h,f)]},generateSideWallUV:function(s,e,t,n,i,r){const a=e[t*3],o=e[t*3+1],c=e[t*3+2],h=e[n*3],f=e[n*3+1],p=e[n*3+2],m=e[i*3],g=e[i*3+1],y=e[i*3+2],b=e[r*3],x=e[r*3+1],_=e[r*3+2];return Math.abs(o-f)<Math.abs(a-h)?[new ge(a,1-c),new ge(h,1-p),new ge(m,1-y),new ge(b,1-_)]:[new ge(o,1-c),new ge(f,1-p),new ge(g,1-y),new ge(x,1-_)]}};function Wx(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class cl extends ar{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new cl(e.radius,e.detail)}}class Ta extends ar{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ta(e.radius,e.detail)}}class hl extends Tt{constructor(e=.5,t=1,n=32,i=1,r=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},n=Math.max(3,n),i=Math.max(1,i);const o=[],c=[],h=[],f=[];let p=e;const m=(t-e)/i,g=new U,y=new ge;for(let b=0;b<=i;b++){for(let x=0;x<=n;x++){const _=r+x/n*a;g.x=p*Math.cos(_),g.y=p*Math.sin(_),c.push(g.x,g.y,g.z),h.push(0,0,1),y.x=(g.x/t+1)/2,y.y=(g.y/t+1)/2,f.push(y.x,y.y)}p+=m}for(let b=0;b<i;b++){const x=b*(n+1);for(let _=0;_<n;_++){const w=_+x,S=w,T=w+n+1,L=w+n+2,d=w+1;o.push(S,T,d),o.push(T,L,d)}}this.setIndex(o),this.setAttribute("position",new Ze(c,3)),this.setAttribute("normal",new Ze(h,3)),this.setAttribute("uv",new Ze(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new hl(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class ul extends Tt{constructor(e=new Nr([new ge(0,.5),new ge(-.5,-.5),new ge(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],a=[];let o=0,c=0;if(Array.isArray(e)===!1)h(e);else for(let f=0;f<e.length;f++)h(e[f]),this.addGroup(o,c,f),o+=c,c=0;this.setIndex(n),this.setAttribute("position",new Ze(i,3)),this.setAttribute("normal",new Ze(r,3)),this.setAttribute("uv",new Ze(a,2));function h(f){const p=i.length/3,m=f.extractPoints(t);let g=m.shape;const y=m.holes;yi.isClockWise(g)===!1&&(g=g.reverse());for(let x=0,_=y.length;x<_;x++){const w=y[x];yi.isClockWise(w)===!0&&(y[x]=w.reverse())}const b=yi.triangulateShape(g,y);for(let x=0,_=y.length;x<_;x++){const w=y[x];g=g.concat(w)}for(let x=0,_=g.length;x<_;x++){const w=g[x];i.push(w.x,w.y,0),r.push(0,0,1),a.push(w.x,w.y)}for(let x=0,_=b.length;x<_;x++){const w=b[x],S=w[0]+p,T=w[1]+p,L=w[2]+p;n.push(S,T,L),c+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return Xx(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const a=t[e.shapes[i]];n.push(a)}return new ul(n,e.curveSegments)}}function Xx(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,n=s.length;t<n;t++){const i=s[t];e.shapes.push(i.uuid)}else e.shapes.push(s.uuid);return e}class Rs extends Tt{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(a+o,Math.PI);let h=0;const f=[],p=new U,m=new U,g=[],y=[],b=[],x=[];for(let _=0;_<=n;_++){const w=[],S=_/n;let T=0;_===0&&a===0?T=.5/t:_===n&&c===Math.PI&&(T=-.5/t);for(let L=0;L<=t;L++){const d=L/t;p.x=-e*Math.cos(i+d*r)*Math.sin(a+S*o),p.y=e*Math.cos(a+S*o),p.z=e*Math.sin(i+d*r)*Math.sin(a+S*o),y.push(p.x,p.y,p.z),m.copy(p).normalize(),b.push(m.x,m.y,m.z),x.push(d+T,1-S),w.push(h++)}f.push(w)}for(let _=0;_<n;_++)for(let w=0;w<t;w++){const S=f[_][w+1],T=f[_][w],L=f[_+1][w],d=f[_+1][w+1];(_!==0||a>0)&&g.push(S,T,d),(_!==n-1||c<Math.PI)&&g.push(T,L,d)}this.setIndex(g),this.setAttribute("position",new Ze(y,3)),this.setAttribute("normal",new Ze(b,3)),this.setAttribute("uv",new Ze(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Rs(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class dl extends ar{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new dl(e.radius,e.detail)}}class fl extends Tt{constructor(e=1,t=.4,n=12,i=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const a=[],o=[],c=[],h=[],f=new U,p=new U,m=new U;for(let g=0;g<=n;g++)for(let y=0;y<=i;y++){const b=y/i*r,x=g/n*Math.PI*2;p.x=(e+t*Math.cos(x))*Math.cos(b),p.y=(e+t*Math.cos(x))*Math.sin(b),p.z=t*Math.sin(x),o.push(p.x,p.y,p.z),f.x=e*Math.cos(b),f.y=e*Math.sin(b),m.subVectors(p,f).normalize(),c.push(m.x,m.y,m.z),h.push(y/i),h.push(g/n)}for(let g=1;g<=n;g++)for(let y=1;y<=i;y++){const b=(i+1)*g+y-1,x=(i+1)*(g-1)+y-1,_=(i+1)*(g-1)+y,w=(i+1)*g+y;a.push(b,x,w),a.push(x,_,w)}this.setIndex(a),this.setAttribute("position",new Ze(o,3)),this.setAttribute("normal",new Ze(c,3)),this.setAttribute("uv",new Ze(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new fl(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class pl extends Tt{constructor(e=1,t=.4,n=64,i=8,r=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:a},n=Math.floor(n),i=Math.floor(i);const o=[],c=[],h=[],f=[],p=new U,m=new U,g=new U,y=new U,b=new U,x=new U,_=new U;for(let S=0;S<=n;++S){const T=S/n*r*Math.PI*2;w(T,r,a,e,g),w(T+.01,r,a,e,y),x.subVectors(y,g),_.addVectors(y,g),b.crossVectors(x,_),_.crossVectors(b,x),b.normalize(),_.normalize();for(let L=0;L<=i;++L){const d=L/i*Math.PI*2,I=-t*Math.cos(d),z=t*Math.sin(d);p.x=g.x+(I*_.x+z*b.x),p.y=g.y+(I*_.y+z*b.y),p.z=g.z+(I*_.z+z*b.z),c.push(p.x,p.y,p.z),m.subVectors(p,g).normalize(),h.push(m.x,m.y,m.z),f.push(S/n),f.push(L/i)}}for(let S=1;S<=n;S++)for(let T=1;T<=i;T++){const L=(i+1)*(S-1)+(T-1),d=(i+1)*S+(T-1),I=(i+1)*S+T,z=(i+1)*(S-1)+T;o.push(L,d,z),o.push(d,I,z)}this.setIndex(o),this.setAttribute("position",new Ze(c,3)),this.setAttribute("normal",new Ze(h,3)),this.setAttribute("uv",new Ze(f,2));function w(S,T,L,d,I){const z=Math.cos(S),C=Math.sin(S),D=L/T*S,le=Math.cos(D);I.x=d*(2+le)*.5*z,I.y=d*(2+le)*C*.5,I.z=d*Math.sin(D)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new pl(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class ml extends Tt{constructor(e=new Rh(new U(-1,-1,0),new U(-1,1,0),new U(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const a=e.computeFrenetFrames(t,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const o=new U,c=new U,h=new ge;let f=new U;const p=[],m=[],g=[],y=[];b(),this.setIndex(y),this.setAttribute("position",new Ze(p,3)),this.setAttribute("normal",new Ze(m,3)),this.setAttribute("uv",new Ze(g,2));function b(){for(let S=0;S<t;S++)x(S);x(r===!1?t:0),w(),_()}function x(S){f=e.getPointAt(S/t,f);const T=a.normals[S],L=a.binormals[S];for(let d=0;d<=i;d++){const I=d/i*Math.PI*2,z=Math.sin(I),C=-Math.cos(I);c.x=C*T.x+z*L.x,c.y=C*T.y+z*L.y,c.z=C*T.z+z*L.z,c.normalize(),m.push(c.x,c.y,c.z),o.x=f.x+n*c.x,o.y=f.y+n*c.y,o.z=f.z+n*c.z,p.push(o.x,o.y,o.z)}}function _(){for(let S=1;S<=t;S++)for(let T=1;T<=i;T++){const L=(i+1)*(S-1)+(T-1),d=(i+1)*S+(T-1),I=(i+1)*S+T,z=(i+1)*(S-1)+T;y.push(L,d,z),y.push(d,I,z)}}function w(){for(let S=0;S<=t;S++)for(let T=0;T<=i;T++)h.x=S/t,h.y=T/i,g.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new ml(new Lh[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class dp extends Tt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new U,r=new U;if(e.index!==null){const a=e.attributes.position,o=e.index;let c=e.groups;c.length===0&&(c=[{start:0,count:o.count,materialIndex:0}]);for(let h=0,f=c.length;h<f;++h){const p=c[h],m=p.start,g=p.count;for(let y=m,b=m+g;y<b;y+=3)for(let x=0;x<3;x++){const _=o.getX(y+x),w=o.getX(y+(x+1)%3);i.fromBufferAttribute(a,_),r.fromBufferAttribute(a,w),ld(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const a=e.attributes.position;for(let o=0,c=a.count/3;o<c;o++)for(let h=0;h<3;h++){const f=3*o+h,p=3*o+(h+1)%3;i.fromBufferAttribute(a,f),r.fromBufferAttribute(a,p),ld(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new Ze(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function ld(s,e,t){const n=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var cd=Object.freeze({__proto__:null,BoxGeometry:Bi,CapsuleGeometry:il,CircleGeometry:rl,ConeGeometry:sl,CylinderGeometry:Hr,DodecahedronGeometry:al,EdgesGeometry:Ih,ExtrudeGeometry:ll,IcosahedronGeometry:cl,LatheGeometry:Ea,OctahedronGeometry:Ta,PlaneGeometry:As,PolyhedronGeometry:ar,RingGeometry:hl,ShapeGeometry:ul,SphereGeometry:Rs,TetrahedronGeometry:dl,TorusGeometry:fl,TorusKnotGeometry:pl,TubeGeometry:ml,WireframeGeometry:dp});class fp extends Tn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ye(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class pp extends vi{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class gl extends Tn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ye(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ye(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=sr,this.normalScale=new ge(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class mp extends gl{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ge(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return jt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ye(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ye(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ye(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class gp extends Tn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ye(16777215),this.specular=new Ye(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ye(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=sr,this.normalScale=new ge(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=xa,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class _p extends Tn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ye(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ye(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=sr,this.normalScale=new ge(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class yp extends Tn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=sr,this.normalScale=new ge(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class vp extends Tn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ye(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ye(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=sr,this.normalScale=new ge(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=xa,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class xp extends Tn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ye(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=sr,this.normalScale=new ge(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Mp extends Dn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Zn(s,e,t){return Dh(s)?new s.constructor(s.subarray(e,t!==void 0?t:s.length)):s.slice(e,t)}function Ir(s,e,t){return!s||!t&&s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function Dh(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function bp(s){function e(i,r){return s[i]-s[r]}const t=s.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function $c(s,e,t){const n=s.length,i=new s.constructor(n);for(let r=0,a=0;a!==n;++r){const o=t[r]*e;for(let c=0;c!==e;++c)i[a++]=s[o+c]}return i}function Uh(s,e,t,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let a=r[n];if(a!==void 0)if(Array.isArray(a))do a=r[n],a!==void 0&&(e.push(r.time),t.push.apply(t,a)),r=s[i++];while(r!==void 0);else if(a.toArray!==void 0)do a=r[n],a!==void 0&&(e.push(r.time),a.toArray(t,t.length)),r=s[i++];while(r!==void 0);else do a=r[n],a!==void 0&&(e.push(r.time),t.push(a)),r=s[i++];while(r!==void 0)}function qx(s,e,t,n,i=30){const r=s.clone();r.name=e;const a=[];for(let c=0;c<r.tracks.length;++c){const h=r.tracks[c],f=h.getValueSize(),p=[],m=[];for(let g=0;g<h.times.length;++g){const y=h.times[g]*i;if(!(y<t||y>=n)){p.push(h.times[g]);for(let b=0;b<f;++b)m.push(h.values[g*f+b])}}p.length!==0&&(h.times=Ir(p,h.times.constructor),h.values=Ir(m,h.values.constructor),a.push(h))}r.tracks=a;let o=1/0;for(let c=0;c<r.tracks.length;++c)o>r.tracks[c].times[0]&&(o=r.tracks[c].times[0]);for(let c=0;c<r.tracks.length;++c)r.tracks[c].shift(-1*o);return r.resetDuration(),r}function Yx(s,e=0,t=s,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let a=0;a<i;++a){const o=t.tracks[a],c=o.ValueTypeName;if(c==="bool"||c==="string")continue;const h=s.tracks.find(function(_){return _.name===o.name&&_.ValueTypeName===c});if(h===void 0)continue;let f=0;const p=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=p/3);let m=0;const g=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=g/3);const y=o.times.length-1;let b;if(r<=o.times[0]){const _=f,w=p-f;b=Zn(o.values,_,w)}else if(r>=o.times[y]){const _=y*p+f,w=_+p-f;b=Zn(o.values,_,w)}else{const _=o.createInterpolant(),w=f,S=p-f;_.evaluate(r),b=Zn(_.resultBuffer,w,S)}c==="quaternion"&&new En().fromArray(b).normalize().conjugate().toArray(b);const x=h.times.length;for(let _=0;_<x;++_){const w=_*g+m;if(c==="quaternion")En.multiplyQuaternionsFlat(h.values,w,b,0,h.values,w);else{const S=g-m*2;for(let T=0;T<S;++T)h.values[w+T]-=b[T]}}}return s.blendMode=uh,s}const jx={arraySlice:Zn,convertArray:Ir,isTypedArray:Dh,getKeyframeOrder:bp,sortedArray:$c,flattenJSON:Uh,subclip:qx,makeClipAdditive:Yx};class wa{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let o=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===o)break;if(r=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=r)){const o=t[1];e<o&&(n=2,r=o);for(let c=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===c)break;if(i=r,r=t[--n-1],e>=r)break t}a=n,n=0;break n}break e}for(;n<a;){const o=n+a>>>1;e<t[o]?a=o:n=o+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let a=0;a!==i;++a)t[a]=n[r+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Sp extends wa{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Rr,endingEnd:Rr}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,a=e+1,o=i[r],c=i[a];if(o===void 0)switch(this.getSettings_().endingStart){case Pr:r=e,o=2*t-n;break;case la:r=i.length-2,o=t+i[r]-i[r+1];break;default:r=e,o=n}if(c===void 0)switch(this.getSettings_().endingEnd){case Pr:a=e,c=2*n-t;break;case la:a=1,c=n+i[1]-i[0];break;default:a=e-1,c=t}const h=(n-t)*.5,f=this.valueSize;this._weightPrev=h/(t-o),this._weightNext=h/(c-n),this._offsetPrev=r*f,this._offsetNext=a*f}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=e*o,h=c-o,f=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,g=this._weightNext,y=(n-t)/(i-t),b=y*y,x=b*y,_=-m*x+2*m*b-m*y,w=(1+m)*x+(-1.5-2*m)*b+(-.5+m)*y+1,S=(-1-g)*x+(1.5+g)*b+.5*y,T=g*x-g*b;for(let L=0;L!==o;++L)r[L]=_*a[f+L]+w*a[h+L]+S*a[c+L]+T*a[p+L];return r}}class Nh extends wa{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=e*o,h=c-o,f=(n-t)/(i-t),p=1-f;for(let m=0;m!==o;++m)r[m]=a[h+m]*p+a[c+m]*f;return r}}class Ep extends wa{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class oi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Ir(t,this.TimeBufferType),this.values=Ir(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Ir(e.times,Array),values:Ir(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Ep(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Nh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Sp(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case aa:t=this.InterpolantFactoryMethodDiscrete;break;case oa:t=this.InterpolantFactoryMethodLinear;break;case Lo:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return aa;case this.InterpolantFactoryMethodLinear:return oa;case this.InterpolantFactoryMethodSmooth:return Lo}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,a=i-1;for(;r!==i&&n[r]<e;)++r;for(;a!==-1&&n[a]>t;)--a;if(++a,r!==0||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const o=this.getValueSize();this.times=Zn(n,r,a),this.values=Zn(this.values,r*o,a*o)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==r;o++){const c=n[o];if(typeof c=="number"&&isNaN(c)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,c),e=!1;break}if(a!==null&&a>c){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,c,a),e=!1;break}a=c}if(i!==void 0&&Dh(i))for(let o=0,c=i.length;o!==c;++o){const h=i[o];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,h),e=!1;break}}return e}optimize(){const e=Zn(this.times),t=Zn(this.values),n=this.getValueSize(),i=this.getInterpolation()===Lo,r=e.length-1;let a=1;for(let o=1;o<r;++o){let c=!1;const h=e[o],f=e[o+1];if(h!==f&&(o!==1||h!==e[0]))if(i)c=!0;else{const p=o*n,m=p-n,g=p+n;for(let y=0;y!==n;++y){const b=t[p+y];if(b!==t[m+y]||b!==t[g+y]){c=!0;break}}}if(c){if(o!==a){e[a]=e[o];const p=o*n,m=a*n;for(let g=0;g!==n;++g)t[m+g]=t[p+g]}++a}}if(r>0){e[a]=e[r];for(let o=r*n,c=a*n,h=0;h!==n;++h)t[c+h]=t[o+h];++a}return a!==e.length?(this.times=Zn(e,0,a),this.values=Zn(t,0,a*n)):(this.times=e,this.values=t),this}clone(){const e=Zn(this.times,0),t=Zn(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}oi.prototype.TimeBufferType=Float32Array;oi.prototype.ValueBufferType=Float32Array;oi.prototype.DefaultInterpolation=oa;class Vr extends oi{}Vr.prototype.ValueTypeName="bool";Vr.prototype.ValueBufferType=Array;Vr.prototype.DefaultInterpolation=aa;Vr.prototype.InterpolantFactoryMethodLinear=void 0;Vr.prototype.InterpolantFactoryMethodSmooth=void 0;class Oh extends oi{}Oh.prototype.ValueTypeName="color";class ga extends oi{}ga.prototype.ValueTypeName="number";class Tp extends wa{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=(n-t)/(i-t);let h=e*o;for(let f=h+o;h!==f;h+=4)En.slerpFlat(r,0,a,h-o,a,h,c);return r}}class Ps extends oi{InterpolantFactoryMethodLinear(e){return new Tp(this.times,this.values,this.getValueSize(),e)}}Ps.prototype.ValueTypeName="quaternion";Ps.prototype.DefaultInterpolation=oa;Ps.prototype.InterpolantFactoryMethodSmooth=void 0;class Gr extends oi{}Gr.prototype.ValueTypeName="string";Gr.prototype.ValueBufferType=Array;Gr.prototype.DefaultInterpolation=aa;Gr.prototype.InterpolantFactoryMethodLinear=void 0;Gr.prototype.InterpolantFactoryMethodSmooth=void 0;class _a extends oi{}_a.prototype.ValueTypeName="vector";class ya{constructor(e,t=-1,n,i=Go){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Xn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,o=n.length;a!==o;++a)t.push(Jx(n[a]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,a=n.length;r!==a;++r)t.push(oi.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,a=[];for(let o=0;o<r;o++){let c=[],h=[];c.push((o+r-1)%r,o,(o+1)%r),h.push(0,1,0);const f=bp(c);c=$c(c,1,f),h=$c(h,1,f),!i&&c[0]===0&&(c.push(r),h.push(h[0])),a.push(new ga(".morphTargetInfluences["+t[o].name+"]",c,h).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,c=e.length;o<c;o++){const h=e[o],f=h.name.match(r);if(f&&f.length>1){const p=f[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const a=[];for(const o in i)a.push(this.CreateFromMorphTargetSequence(o,i[o],t,n));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,g,y,b){if(g.length!==0){const x=[],_=[];Uh(g,x,_,y),x.length!==0&&b.push(new p(m,x,_))}},i=[],r=e.name||"default",a=e.fps||30,o=e.blendMode;let c=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const g={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let b=0;b<m[y].morphTargets.length;b++)g[m[y].morphTargets[b]]=-1;for(const b in g){const x=[],_=[];for(let w=0;w!==m[y].morphTargets.length;++w){const S=m[y];x.push(S.time),_.push(S.morphTarget===b?1:0)}i.push(new ga(".morphTargetInfluence["+b+"]",x,_))}c=g.length*a}else{const g=".bones["+t[p].name+"]";n(_a,g+".position",m,"pos",i),n(Ps,g+".quaternion",m,"rot",i),n(_a,g+".scale",m,"scl",i)}}return i.length===0?null:new this(r,c,i,o)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Zx(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ga;case"vector":case"vector2":case"vector3":case"vector4":return _a;case"color":return Oh;case"quaternion":return Ps;case"bool":case"boolean":return Vr;case"string":return Gr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function Jx(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Zx(s.type);if(s.times===void 0){const t=[],n=[];Uh(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const zr={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class Fh{constructor(e,t,n){const i=this;let r=!1,a=0,o=0,c;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(f){o++,r===!1&&i.onStart!==void 0&&i.onStart(f,a,o),r=!0},this.itemEnd=function(f){a++,i.onProgress!==void 0&&i.onProgress(f,a,o),a===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(f){i.onError!==void 0&&i.onError(f)},this.resolveURL=function(f){return c?c(f):f},this.setURLModifier=function(f){return c=f,this},this.addHandler=function(f,p){return h.push(f,p),this},this.removeHandler=function(f){const p=h.indexOf(f);return p!==-1&&h.splice(p,2),this},this.getHandler=function(f){for(let p=0,m=h.length;p<m;p+=2){const g=h[p],y=h[p+1];if(g.global&&(g.lastIndex=0),g.test(f))return y}return null}}}const wp=new Fh;class zn{constructor(e){this.manager=e!==void 0?e:wp,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}zn.DEFAULT_MATERIAL_NAME="__DEFAULT";const Ri={};class $x extends Error{constructor(e,t){super(e),this.response=t}}class zi extends zn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=zr.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(Ri[e]!==void 0){Ri[e].push({onLoad:t,onProgress:n,onError:i});return}Ri[e]=[],Ri[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,c=this.responseType;fetch(a).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const f=Ri[e],p=h.body.getReader(),m=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),g=m?parseInt(m):0,y=g!==0;let b=0;const x=new ReadableStream({start(_){w();function w(){p.read().then(({done:S,value:T})=>{if(S)_.close();else{b+=T.byteLength;const L=new ProgressEvent("progress",{lengthComputable:y,loaded:b,total:g});for(let d=0,I=f.length;d<I;d++){const z=f[d];z.onProgress&&z.onProgress(L)}_.enqueue(T),w()}})}}});return new Response(x)}else throw new $x(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(c){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(f=>new DOMParser().parseFromString(f,o));case"json":return h.json();default:if(o===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(o),m=p&&p[1]?p[1].toLowerCase():void 0,g=new TextDecoder(m);return h.arrayBuffer().then(y=>g.decode(y))}}}).then(h=>{zr.add(e,h);const f=Ri[e];delete Ri[e];for(let p=0,m=f.length;p<m;p++){const g=f[p];g.onLoad&&g.onLoad(h)}}).catch(h=>{const f=Ri[e];if(f===void 0)throw this.manager.itemError(e),h;delete Ri[e];for(let p=0,m=f.length;p<m;p++){const g=f[p];g.onError&&g.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Kx extends zn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new zi(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=ya.parse(e[n]);t.push(i)}return t}}class Qx extends zn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=[],o=new el,c=new zi(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(r.withCredentials);let h=0;function f(p){c.load(e[p],function(m){const g=r.parse(m,!0);a[p]={width:g.width,height:g.height,format:g.format,mipmaps:g.mipmaps},h+=1,h===6&&(g.mipmapCount===1&&(o.minFilter=en),o.image=a,o.format=g.format,o.needsUpdate=!0,t&&t(o))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)f(p);else c.load(e,function(p){const m=r.parse(p,!0);if(m.isCubemap){const g=m.mipmaps.length/m.mipmapCount;for(let y=0;y<g;y++){a[y]={mipmaps:[]};for(let b=0;b<m.mipmapCount;b++)a[y].mipmaps.push(m.mipmaps[y*m.mipmapCount+b]),a[y].format=m.format,a[y].width=m.width,a[y].height=m.height}o.image=a}else o.image.width=m.width,o.image.height=m.height,o.mipmaps=m.mipmaps;m.mipmapCount===1&&(o.minFilter=en),o.format=m.format,o.needsUpdate=!0,t&&t(o)},n,i);return o}}class va extends zn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=zr.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;const o=ua("img");function c(){f(),zr.add(e,this),t&&t(this),r.manager.itemEnd(e)}function h(p){f(),i&&i(p),r.manager.itemError(e),r.manager.itemEnd(e)}function f(){o.removeEventListener("load",c,!1),o.removeEventListener("error",h,!1)}return o.addEventListener("load",c,!1),o.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(e),o.src=e,o}}class Ap extends zn{constructor(e){super(e)}load(e,t,n,i){const r=new Sa;r.colorSpace=Bt;const a=new va(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function c(h){a.load(e[h],function(f){r.images[h]=f,o++,o===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let h=0;h<e.length;++h)c(h);return r}}class eM extends zn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Ms,o=new zi(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(e,function(c){let h;try{h=r.parse(c)}catch(f){if(i!==void 0)i(f);else{console.error(f);return}}h.image!==void 0?a.image=h.image:h.data!==void 0&&(a.image.width=h.width,a.image.height=h.height,a.image.data=h.data),a.wrapS=h.wrapS!==void 0?h.wrapS:Sn,a.wrapT=h.wrapT!==void 0?h.wrapT:Sn,a.magFilter=h.magFilter!==void 0?h.magFilter:en,a.minFilter=h.minFilter!==void 0?h.minFilter:en,a.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0?a.colorSpace=h.colorSpace:h.encoding!==void 0&&(a.encoding=h.encoding),h.flipY!==void 0&&(a.flipY=h.flipY),h.format!==void 0&&(a.format=h.format),h.type!==void 0&&(a.type=h.type),h.mipmaps!==void 0&&(a.mipmaps=h.mipmaps,a.minFilter=ir),h.mipmapCount===1&&(a.minFilter=en),h.generateMipmaps!==void 0&&(a.generateMipmaps=h.generateMipmaps),a.needsUpdate=!0,t&&t(a,h)},n,i),a}}class Cp extends zn{constructor(e){super(e)}load(e,t,n,i){const r=new tn,a=new va(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){r.image=o,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class or extends Dt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ye(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class Rp extends or{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Dt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Ye(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const lc=new gt,hd=new U,ud=new U;class Bh{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ge(512,512),this.map=null,this.mapPass=null,this.matrix=new gt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Yo,this._frameExtents=new ge(1,1),this._viewportCount=1,this._viewports=[new Ot(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;hd.setFromMatrixPosition(e.matrixWorld),t.position.copy(hd),ud.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(ud),t.updateMatrixWorld(),lc.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(lc),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(lc)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class tM extends Bh{constructor(){super(new mn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Ss*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Pp extends or{constructor(e,t,n=0,i=Math.PI/3,r=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Dt.DEFAULT_UP),this.updateMatrix(),this.target=new Dt,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.map=null,this.shadow=new tM}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const dd=new gt,js=new U,cc=new U;class nM extends Bh{constructor(){super(new mn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ge(4,2),this._viewportCount=6,this._viewports=[new Ot(2,1,1,1),new Ot(0,1,1,1),new Ot(3,1,1,1),new Ot(1,1,1,1),new Ot(3,0,1,1),new Ot(1,0,1,1)],this._cubeDirections=[new U(1,0,0),new U(-1,0,0),new U(0,0,1),new U(0,0,-1),new U(0,1,0),new U(0,-1,0)],this._cubeUps=[new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,0,1),new U(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),js.setFromMatrixPosition(e.matrixWorld),n.position.copy(js),cc.copy(n.position),cc.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(cc),n.updateMatrixWorld(),i.makeTranslation(-js.x,-js.y,-js.z),dd.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(dd)}}class zo extends or{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new nM}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class iM extends Bh{constructor(){super(new jo(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class zh extends or{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Dt.DEFAULT_UP),this.updateMatrix(),this.target=new Dt,this.shadow=new iM}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Lp extends or{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Ip extends or{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Dp{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new U)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*r),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*r)),t.addScaledVector(a[6],.315392*(3*r*r-1)),t.addScaledVector(a[7],1.092548*(n*r)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*r),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*r),t.addScaledVector(a[6],.743125*r*r-.247708),t.addScaledVector(a[7],2*.429043*n*r),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}class _l extends or{constructor(e=new Dp,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class yl extends zn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,a=new zi(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=yl.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Ye().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const a=e.uniforms[r];switch(i.uniforms[r]={},a.type){case"t":i.uniforms[r].value=n(a.value);break;case"c":i.uniforms[r].value=new Ye().setHex(a.value);break;case"v2":i.uniforms[r].value=new ge().fromArray(a.value);break;case"v3":i.uniforms[r].value=new U().fromArray(a.value);break;case"v4":i.uniforms[r].value=new Ot().fromArray(a.value);break;case"m3":i.uniforms[r].value=new Et().fromArray(a.value);break;case"m4":i.uniforms[r].value=new gt().fromArray(a.value);break;default:i.uniforms[r].value=a.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new ge().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ge().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:fp,SpriteMaterial:Sh,RawShaderMaterial:pp,ShaderMaterial:vi,PointsMaterial:Th,MeshPhysicalMaterial:mp,MeshStandardMaterial:gl,MeshPhongMaterial:gp,MeshToonMaterial:_p,MeshNormalMaterial:yp,MeshLambertMaterial:vp,MeshDepthMaterial:vh,MeshDistanceMaterial:xh,MeshBasicMaterial:ki,MeshMatcapMaterial:xp,LineDashedMaterial:Mp,LineBasicMaterial:Dn,Material:Tn};return new t[e]}}class Kc{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Up extends Tt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Np extends zn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new zi(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(g,y){if(t[y]!==void 0)return t[y];const x=g.interleavedBuffers[y],_=r(g,x.buffer),w=gs(x.type,_),S=new Ko(w,x.stride);return S.uuid=x.uuid,t[y]=S,S}function r(g,y){if(n[y]!==void 0)return n[y];const x=g.arrayBuffers[y],_=new Uint32Array(x).buffer;return n[y]=_,_}const a=e.isInstancedBufferGeometry?new Up:new Tt,o=e.data.index;if(o!==void 0){const g=gs(o.type,o.array);a.setIndex(new Ft(g,1))}const c=e.data.attributes;for(const g in c){const y=c[g];let b;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);b=new Fr(x,y.itemSize,y.offset,y.normalized)}else{const x=gs(y.type,y.array),_=y.isInstancedBufferAttribute?Ts:Ft;b=new _(x,y.itemSize,y.normalized)}y.name!==void 0&&(b.name=y.name),y.usage!==void 0&&b.setUsage(y.usage),y.updateRange!==void 0&&(b.updateRange.offset=y.updateRange.offset,b.updateRange.count=y.updateRange.count),a.setAttribute(g,b)}const h=e.data.morphAttributes;if(h)for(const g in h){const y=h[g],b=[];for(let x=0,_=y.length;x<_;x++){const w=y[x];let S;if(w.isInterleavedBufferAttribute){const T=i(e.data,w.data);S=new Fr(T,w.itemSize,w.offset,w.normalized)}else{const T=gs(w.type,w.array);S=new Ft(T,w.itemSize,w.normalized)}w.name!==void 0&&(S.name=w.name),b.push(S)}a.morphAttributes[g]=b}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let g=0,y=p.length;g!==y;++g){const b=p[g];a.addGroup(b.start,b.count,b.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const g=new U;m.center!==void 0&&g.fromArray(m.center),a.boundingSphere=new ri(g,m.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}class rM extends zn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=this.path===""?Kc.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const o=new zi(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(c){let h=null;try{h=JSON.parse(c)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const f=h.metadata;if(f===void 0||f.type===void 0||f.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Kc.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new zi(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const a=await r.loadAsync(e,t),o=JSON.parse(a),c=o.metadata;if(c===void 0||c.type===void 0||c.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(o)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,function(){t!==void 0&&t(h)}),o=this.parseTextures(e.textures,a),c=this.parseMaterials(e.materials,o),h=this.parseObject(e.object,r,c,o,n),f=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,f),t!==void 0){let p=!1;for(const m in a)if(a[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,r),o=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,i,o,a,t),h=this.parseSkeletons(e.skeletons,c);return this.bindSkeletons(c,h),c}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new Nr().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),e!==void 0)for(let r=0,a=e.length;r<a;r++){const o=new Qo().fromJSON(e[r],i);n[o.uuid]=o}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new Np;for(let r=0,a=e.length;r<a;r++){let o;const c=e[r];switch(c.type){case"BufferGeometry":case"InstancedBufferGeometry":o=i.parse(c);break;default:c.type in cd?o=cd[c.type].fromJSON(c,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${c.type}"`)}o.uuid=c.uuid,c.name!==void 0&&(o.name=c.name),c.userData!==void 0&&(o.userData=c.userData),n[c.uuid]=o}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const r=new yl;r.setTextures(t);for(let a=0,o=e.length;a<o;a++){const c=e[a];n[c.uuid]===void 0&&(n[c.uuid]=r.parse(c)),i[c.uuid]=n[c.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],r=ya.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function a(c){return n.manager.itemStart(c),r.load(c,function(){n.manager.itemEnd(c)},void 0,function(){n.manager.itemError(c),n.manager.itemEnd(c)})}function o(c){if(typeof c=="string"){const h=c,f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return a(f)}else return c.data?{data:gs(c.type,c.data),width:c.width,height:c.height}:null}if(e!==void 0&&e.length>0){const c=new Fh(t);r=new va(c),r.setCrossOrigin(this.crossOrigin);for(let h=0,f=e.length;h<f;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const g=[];for(let y=0,b=m.length;y<b;y++){const x=m[y],_=o(x);_!==null&&(_ instanceof HTMLImageElement?g.push(_):g.push(new Ms(_.data,_.width,_.height)))}i[p.uuid]=new Lr(g)}else{const g=o(p.url);i[p.uuid]=new Lr(g)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(a){if(typeof a=="string"){const o=a,c=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(o)?o:t.resourcePath+o;return await i.loadAsync(c)}else return a.data?{data:gs(a.type,a.data),width:a.width,height:a.height}:null}if(e!==void 0&&e.length>0){i=new va(this.manager),i.setCrossOrigin(this.crossOrigin);for(let a=0,o=e.length;a<o;a++){const c=e[a],h=c.url;if(Array.isArray(h)){const f=[];for(let p=0,m=h.length;p<m;p++){const g=h[p],y=await r(g);y!==null&&(y instanceof HTMLImageElement?f.push(y):f.push(new Ms(y.data,y.width,y.height)))}n[c.uuid]=new Lr(f)}else{const f=await r(c.url);n[c.uuid]=new Lr(f)}}}return n}parseTextures(e,t){function n(r,a){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),a[r])}const i={};if(e!==void 0)for(let r=0,a=e.length;r<a;r++){const o=e[r];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),t[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);const c=t[o.image],h=c.data;let f;Array.isArray(h)?(f=new Sa,h.length===6&&(f.needsUpdate=!0)):(h&&h.data?f=new Ms:f=new tn,h&&(f.needsUpdate=!0)),f.source=c,f.uuid=o.uuid,o.name!==void 0&&(f.name=o.name),o.mapping!==void 0&&(f.mapping=n(o.mapping,sM)),o.channel!==void 0&&(f.channel=o.channel),o.offset!==void 0&&f.offset.fromArray(o.offset),o.repeat!==void 0&&f.repeat.fromArray(o.repeat),o.center!==void 0&&f.center.fromArray(o.center),o.rotation!==void 0&&(f.rotation=o.rotation),o.wrap!==void 0&&(f.wrapS=n(o.wrap[0],fd),f.wrapT=n(o.wrap[1],fd)),o.format!==void 0&&(f.format=o.format),o.internalFormat!==void 0&&(f.internalFormat=o.internalFormat),o.type!==void 0&&(f.type=o.type),o.colorSpace!==void 0&&(f.colorSpace=o.colorSpace),o.encoding!==void 0&&(f.encoding=o.encoding),o.minFilter!==void 0&&(f.minFilter=n(o.minFilter,pd)),o.magFilter!==void 0&&(f.magFilter=n(o.magFilter,pd)),o.anisotropy!==void 0&&(f.anisotropy=o.anisotropy),o.flipY!==void 0&&(f.flipY=o.flipY),o.generateMipmaps!==void 0&&(f.generateMipmaps=o.generateMipmaps),o.premultiplyAlpha!==void 0&&(f.premultiplyAlpha=o.premultiplyAlpha),o.unpackAlignment!==void 0&&(f.unpackAlignment=o.unpackAlignment),o.compareFunction!==void 0&&(f.compareFunction=o.compareFunction),o.userData!==void 0&&(f.userData=o.userData),i[o.uuid]=f}return i}parseObject(e,t,n,i,r){let a;function o(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function c(m){if(m!==void 0){if(Array.isArray(m)){const g=[];for(let y=0,b=m.length;y<b;y++){const x=m[y];n[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),g.push(n[x])}return g}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let f,p;switch(e.type){case"Scene":a=new bh,e.background!==void 0&&(Number.isInteger(e.background)?a.background=new Ye(e.background):a.background=h(e.background)),e.environment!==void 0&&(a.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?a.fog=new $o(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(a.fog=new Jo(e.fog.color,e.fog.density))),e.backgroundBlurriness!==void 0&&(a.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(a.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":a=new mn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(a.focus=e.focus),e.zoom!==void 0&&(a.zoom=e.zoom),e.filmGauge!==void 0&&(a.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(a.filmOffset=e.filmOffset),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new jo(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(a.zoom=e.zoom),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new Lp(e.color,e.intensity);break;case"DirectionalLight":a=new zh(e.color,e.intensity);break;case"PointLight":a=new zo(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new Ip(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new Pp(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new Rp(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new _l().fromJSON(e);break;case"SkinnedMesh":f=o(e.geometry),p=c(e.material),a=new ep(f,p),e.bindMode!==void 0&&(a.bindMode=e.bindMode),e.bindMatrix!==void 0&&a.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(a.skeleton=e.skeleton);break;case"Mesh":f=o(e.geometry),p=c(e.material),a=new _n(f,p);break;case"InstancedMesh":f=o(e.geometry),p=c(e.material);const m=e.count,g=e.instanceMatrix,y=e.instanceColor;a=new tp(f,p,m),a.instanceMatrix=new Ts(new Float32Array(g.array),16),y!==void 0&&(a.instanceColor=new Ts(new Float32Array(y.array),y.itemSize));break;case"LOD":a=new Qf;break;case"Line":a=new rr(o(e.geometry),c(e.material));break;case"LineLoop":a=new np(o(e.geometry),c(e.material));break;case"LineSegments":a=new si(o(e.geometry),c(e.material));break;case"PointCloud":case"Points":a=new ip(o(e.geometry),c(e.material));break;case"Sprite":a=new Kf(c(e.material));break;case"Group":a=new ys;break;case"Bone":a=new Eh;break;default:a=new Dt}if(a.uuid=e.uuid,e.name!==void 0&&(a.name=e.name),e.matrix!==void 0?(a.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(e.position!==void 0&&a.position.fromArray(e.position),e.rotation!==void 0&&a.rotation.fromArray(e.rotation),e.quaternion!==void 0&&a.quaternion.fromArray(e.quaternion),e.scale!==void 0&&a.scale.fromArray(e.scale)),e.up!==void 0&&a.up.fromArray(e.up),e.castShadow!==void 0&&(a.castShadow=e.castShadow),e.receiveShadow!==void 0&&(a.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(a.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(a.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(a.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(a.visible=e.visible),e.frustumCulled!==void 0&&(a.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(a.renderOrder=e.renderOrder),e.userData!==void 0&&(a.userData=e.userData),e.layers!==void 0&&(a.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let g=0;g<m.length;g++)a.add(this.parseObject(m[g],t,n,i,r))}if(e.animations!==void 0){const m=e.animations;for(let g=0;g<m.length;g++){const y=m[g];a.animations.push(r[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(a.autoUpdate=e.autoUpdate);const m=e.levels;for(let g=0;g<m.length;g++){const y=m[g],b=a.getObjectByProperty("uuid",y.object);b!==void 0&&a.addLevel(b,y.distance,y.hysteresis)}}return a}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const sM={UVMapping:Ho,CubeReflectionMapping:Fi,CubeRefractionMapping:nr,EquirectangularReflectionMapping:na,EquirectangularRefractionMapping:ia,CubeUVReflectionMapping:ws},fd={RepeatWrapping:ra,ClampToEdgeWrapping:Sn,MirroredRepeatWrapping:sa},pd={NearestFilter:Qt,NearestMipmapNearestFilter:Oo,NearestMipmapLinearFilter:$s,LinearFilter:en,LinearMipmapNearestFilter:rh,LinearMipmapLinearFilter:ir};class aM extends zn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=zr.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader,fetch(e,o).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(c){zr.add(e,c),t&&t(c),r.manager.itemEnd(e)}).catch(function(c){i&&i(c),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}}let yo;class kh{static getContext(){return yo===void 0&&(yo=new(window.AudioContext||window.webkitAudioContext)),yo}static setContext(e){yo=e}}class oM extends zn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new zi(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(c){try{const h=c.slice(0);kh.getContext().decodeAudioData(h,function(p){t(p)},o)}catch(h){o(h)}},n,i);function o(c){i?i(c):console.error(c),r.manager.itemError(e)}}}class lM extends _l{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new Ye().set(e),r=new Ye().set(t),a=new U(i.r,i.g,i.b),o=new U(r.r,r.g,r.b),c=Math.sqrt(Math.PI),h=c*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(c),this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(h)}}class cM extends _l{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=new Ye().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const md=new gt,gd=new gt,vr=new gt;class hM{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new mn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new mn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,vr.copy(e.projectionMatrix);const i=t.eyeSep/2,r=i*t.near/t.focus,a=t.near*Math.tan(Ur*t.fov*.5)/t.zoom;let o,c;gd.elements[12]=-i,md.elements[12]=i,o=-a*t.aspect+r,c=a*t.aspect+r,vr.elements[0]=2*t.near/(c-o),vr.elements[8]=(c+o)/(c-o),this.cameraL.projectionMatrix.copy(vr),o=-a*t.aspect-r,c=a*t.aspect-r,vr.elements[0]=2*t.near/(c-o),vr.elements[8]=(c+o)/(c-o),this.cameraR.projectionMatrix.copy(vr)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(gd),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(md)}}class Op{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=_d(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=_d();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function _d(){return(typeof performance>"u"?Date:performance).now()}const xr=new U,yd=new En,uM=new U,Mr=new U;class dM extends Dt{constructor(){super(),this.type="AudioListener",this.context=kh.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Op}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(xr,yd,uM),Mr.set(0,0,-1).applyQuaternion(yd),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(xr.x,i),t.positionY.linearRampToValueAtTime(xr.y,i),t.positionZ.linearRampToValueAtTime(xr.z,i),t.forwardX.linearRampToValueAtTime(Mr.x,i),t.forwardY.linearRampToValueAtTime(Mr.y,i),t.forwardZ.linearRampToValueAtTime(Mr.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(xr.x,xr.y,xr.z),t.setOrientation(Mr.x,Mr.y,Mr.z,n.x,n.y,n.z)}}class Fp extends Dt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const br=new U,vd=new En,fM=new U,Sr=new U;class pM extends Fp{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(br,vd,fM),Sr.set(0,0,1).applyQuaternion(vd);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(br.x,n),t.positionY.linearRampToValueAtTime(br.y,n),t.positionZ.linearRampToValueAtTime(br.z,n),t.orientationX.linearRampToValueAtTime(Sr.x,n),t.orientationY.linearRampToValueAtTime(Sr.y,n),t.orientationZ.linearRampToValueAtTime(Sr.z,n)}else t.setPosition(br.x,br.y,br.z),t.setOrientation(Sr.x,Sr.y,Sr.z)}}class mM{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class Bp{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,a;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let o=0;o!==i;++o)n[r+o]=n[o];a=t}else{a+=t;const o=t/a;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const c=t*this._origIndex;this._mixBufferRegion(n,i,c,1-r,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let c=t,h=t+t;c!==h;++c)if(n[c]!==n[c+t]){o.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,a=i;r!==a;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let a=0;a!==r;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){En.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const a=this._workIndex*r;En.multiplyQuaternionsFlat(e,a,e,t,e,n),En.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,r){const a=1-i;for(let o=0;o!==r;++o){const c=t+o;e[c]=e[c]*a+e[n+o]*i}}_lerpAdditive(e,t,n,i,r){for(let a=0;a!==r;++a){const o=t+a;e[o]=e[o]+e[n+a]*i}}}const Hh="\\[\\]\\.:\\/",gM=new RegExp("["+Hh+"]","g"),Vh="[^"+Hh+"]",_M="[^"+Hh.replace("\\.","")+"]",yM=/((?:WC+[\/:])*)/.source.replace("WC",Vh),vM=/(WCOD+)?/.source.replace("WCOD",_M),xM=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Vh),MM=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Vh),bM=new RegExp("^"+yM+vM+xM+MM+"$"),SM=["material","materials","bones","map"];class EM{constructor(e,t,n){const i=n||Rt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Rt{constructor(e,t,n){this.path=t,this.parsedPath=n||Rt.parseTrackName(t),this.node=Rt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Rt.Composite(e,t,n):new Rt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(gM,"")}static parseTrackName(e){const t=bM.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);SM.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let a=0;a<r.length;a++){const o=r[a];if(o.name===t||o.uuid===t)return o;const c=n(o.children);if(c)return c}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=Rt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let f=0;f<e.length;f++)if(e[f].name===h){h=f;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const a=e[i];if(a===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let c=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}c=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else a.fromArray!==void 0&&a.toArray!==void 0?(c=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(c=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Rt.Composite=EM;Rt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Rt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Rt.prototype.GetterByBindingType=[Rt.prototype._getValue_direct,Rt.prototype._getValue_array,Rt.prototype._getValue_arrayElement,Rt.prototype._getValue_toArray];Rt.prototype.SetterByBindingTypeAndVersioning=[[Rt.prototype._setValue_direct,Rt.prototype._setValue_direct_setNeedsUpdate,Rt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Rt.prototype._setValue_array,Rt.prototype._setValue_array_setNeedsUpdate,Rt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Rt.prototype._setValue_arrayElement,Rt.prototype._setValue_arrayElement_setNeedsUpdate,Rt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Rt.prototype._setValue_fromArray,Rt.prototype._setValue_fromArray_setNeedsUpdate,Rt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class TM{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Xn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,a=r.length;let o,c=e.length,h=this.nCachedObjects_;for(let f=0,p=arguments.length;f!==p;++f){const m=arguments[f],g=m.uuid;let y=t[g];if(y===void 0){y=c++,t[g]=y,e.push(m);for(let b=0,x=a;b!==x;++b)r[b].push(new Rt(m,n[b],i[b]))}else if(y<h){o=e[y];const b=--h,x=e[b];t[x.uuid]=y,e[y]=x,t[g]=b,e[b]=m;for(let _=0,w=a;_!==w;++_){const S=r[_],T=S[b];let L=S[y];S[y]=T,L===void 0&&(L=new Rt(m,n[_],i[_])),S[b]=L}}else e[y]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let a=0,o=arguments.length;a!==o;++a){const c=arguments[a],h=c.uuid,f=t[h];if(f!==void 0&&f>=r){const p=r++,m=e[p];t[m.uuid]=f,e[f]=m,t[h]=p,e[p]=c;for(let g=0,y=i;g!==y;++g){const b=n[g],x=b[p],_=b[f];b[f]=x,b[p]=_}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,a=e.length;for(let o=0,c=arguments.length;o!==c;++o){const h=arguments[o],f=h.uuid,p=t[f];if(p!==void 0)if(delete t[f],p<r){const m=--r,g=e[m],y=--a,b=e[y];t[g.uuid]=p,e[p]=g,t[b.uuid]=m,e[m]=b,e.pop();for(let x=0,_=i;x!==_;++x){const w=n[x],S=w[m],T=w[y];w[p]=S,w[m]=T,w.pop()}}else{const m=--a,g=e[m];m>0&&(t[g.uuid]=p),e[p]=g,e.pop();for(let y=0,b=i;y!==b;++y){const x=n[y];x[p]=x[m],x.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const a=this._paths,o=this._parsedPaths,c=this._objects,h=c.length,f=this.nCachedObjects_,p=new Array(h);i=r.length,n[e]=i,a.push(e),o.push(t),r.push(p);for(let m=f,g=c.length;m!==g;++m){const y=c[m];p[m]=new Rt(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,a=this._bindings,o=a.length-1,c=a[o],h=e[o];t[h]=n,a[n]=c,a.pop(),r[n]=r[o],r.pop(),i[n]=i[o],i.pop()}}}class zp{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,a=r.length,o=new Array(a),c={endingStart:Rr,endingEnd:Rr};for(let h=0;h!==a;++h){const f=r[h].createInterpolant(null);o[h]=f,f.settings=c}this._interpolantSettings=c,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=yf,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,a=r/i,o=i/r;e.warp(1,a,t),this.warp(o,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=i._lendControlInterpolant(),this._timeScaleInterpolant=o);const c=o.parameterPositions,h=o.sampleValues;return c[0]=r,c[1]=r+n,h[0]=e/a,h[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const c=(e-r)*n;c<0||n===0?t=0:(this._startTime=null,t=n*c)}t*=this._updateTimeScale(e);const a=this._updateTime(t),o=this._updateWeight(e);if(o>0){const c=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case uh:for(let f=0,p=c.length;f!==p;++f)c[f].evaluate(a),h[f].accumulateAdditive(o);break;case Go:default:for(let f=0,p=c.length;f!==p;++f)c[f].evaluate(a),h[f].accumulate(i,o)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const a=n===vf;if(e===0)return r===-1?i:a&&(r&1)===1?t-i:i;if(n===_f){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const o=Math.floor(i/t);i-=t*o,r+=Math.abs(o);const c=this.repetitions-r;if(c<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(c===1){const h=e<0;this._setEndings(h,!h,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=i;if(a&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Pr,i.endingEnd=Pr):(e?i.endingStart=this.zeroSlopeAtStart?Pr:Rr:i.endingStart=la,t?i.endingEnd=this.zeroSlopeAtEnd?Pr:Rr:i.endingEnd=la)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,c=a.sampleValues;return o[0]=r,c[0]=t,o[1]=r+e,c[1]=n,this}}const wM=new Float32Array(1);class AM extends xi{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,a=e._propertyBindings,o=e._interpolants,c=n.uuid,h=this._bindingsByRootAndName;let f=h[c];f===void 0&&(f={},h[c]=f);for(let p=0;p!==r;++p){const m=i[p],g=m.name;let y=f[g];if(y!==void 0)++y.referenceCount,a[p]=y;else{if(y=a[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,c,g));continue}const b=t&&t._propertyBindings[p].binding.parsedPath;y=new Bp(Rt.create(n,g,b),m.ValueTypeName,m.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,c,g),a[p]=y}o[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let a=r[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{const o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,a=this._actionsByClip,o=a[r],c=o.knownActions,h=c[c.length-1],f=e._byClipCacheIndex;h._byClipCacheIndex=f,c[f]=h,c.pop(),e._byClipCacheIndex=null;const p=o.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],c.length===0&&delete a[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,o=a[i],c=t[t.length-1],h=e._cacheIndex;c._cacheIndex=h,t[h]=c,t.pop(),delete o[r],Object.keys(o).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Nh(new Float32Array(2),new Float32Array(2),1,wM),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let a=typeof e=="string"?ya.findByName(i,e):e;const o=a!==null?a.uuid:e,c=this._actionsByClip[o];let h=null;if(n===void 0&&(a!==null?n=a.blendMode:n=Go),c!==void 0){const p=c.actionByRoot[r];if(p!==void 0&&p.blendMode===n)return p;h=c.knownActions[0],a===null&&(a=h._clip)}if(a===null)return null;const f=new zp(this,a,t,n);return this._bindAction(f,h),this._addInactiveAction(f,o,r),f}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?ya.findByName(n,e):e,a=r?r.uuid:e,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),a=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,r,a);const o=this._bindings,c=this._nActiveBindings;for(let h=0;h!==c;++h)o[h].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const a=r.knownActions;for(let o=0,c=a.length;o!==c;++o){const h=a[o];this._deactivateAction(h);const f=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=f,t[f]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const o=n[a].actionByRoot,c=o[t];c!==void 0&&(this._deactivateAction(c),this._removeInactiveAction(c))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const a in r){const o=r[a];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Gh{constructor(e){this.value=e}clone(){return new Gh(this.value.clone===void 0?this.value:this.value.clone())}}let CM=0;class RM extends xi{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:CM++}),this.name="",this.usage=ca,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class PM extends Ko{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class LM{constructor(e,t,n,i,r){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class IM{constructor(e,t,n=0,i=1/0){this.ray=new kr(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Xo,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Qc(e,this,n,t),n.sort(xd),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)Qc(e[i],this,n,t);return n.sort(xd),n}}function xd(s,e){return s.distance-e.distance}function Qc(s,e,t,n){if(s.layers.test(e.layers)&&s.raycast(e,t),n===!0){const i=s.children;for(let r=0,a=i.length;r<a;r++)Qc(i[r],e,t,!0)}}class eh{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(jt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class DM{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const Md=new ge;class UM{constructor(e=new ge(1/0,1/0),t=new ge(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Md.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Md).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const bd=new U,vo=new U;class NM{constructor(e=new U,t=new U){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){bd.subVectors(e,this.start),vo.subVectors(this.end,this.start);const n=vo.dot(vo);let r=vo.dot(bd)/n;return t&&(r=jt(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const Sd=new U;class OM extends Dt{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new Tt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,o=1,c=32;a<c;a++,o++){const h=a/c*Math.PI*2,f=o/c*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(f),Math.sin(f),1)}n.setAttribute("position",new Ze(i,3));const r=new Dn({fog:!1,toneMapped:!1});this.cone=new si(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Sd.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Sd),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const $i=new U,xo=new gt,hc=new gt;class FM extends si{constructor(e){const t=kp(e),n=new Tt,i=[],r=[],a=new Ye(0,0,1),o=new Ye(0,1,0);for(let h=0;h<t.length;h++){const f=t[h];f.parent&&f.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(a.r,a.g,a.b),r.push(o.r,o.g,o.b))}n.setAttribute("position",new Ze(i,3)),n.setAttribute("color",new Ze(r,3));const c=new Dn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,c),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");hc.copy(this.root.matrixWorld).invert();for(let r=0,a=0;r<t.length;r++){const o=t[r];o.parent&&o.parent.isBone&&(xo.multiplyMatrices(hc,o.matrixWorld),$i.setFromMatrixPosition(xo),i.setXYZ(a,$i.x,$i.y,$i.z),xo.multiplyMatrices(hc,o.parent.matrixWorld),$i.setFromMatrixPosition(xo),i.setXYZ(a+1,$i.x,$i.y,$i.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function kp(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push.apply(e,kp(s.children[t]));return e}class BM extends _n{constructor(e,t,n){const i=new Rs(t,4,2),r=new ki({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const zM=new U,Ed=new Ye,Td=new Ye;class kM extends Dt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Ta(t);i.rotateY(Math.PI*.5),this.material=new ki({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),a=new Float32Array(r.count*3);i.setAttribute("color",new Ft(a,3)),this.add(new _n(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Ed.copy(this.light.color),Td.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?Ed:Td;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(zM.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Hp extends si{constructor(e=10,t=10,n=4473924,i=8947848){n=new Ye(n),i=new Ye(i);const r=t/2,a=e/t,o=e/2,c=[],h=[];for(let m=0,g=0,y=-o;m<=t;m++,y+=a){c.push(-o,0,y,o,0,y),c.push(y,0,-o,y,0,o);const b=m===r?n:i;b.toArray(h,g),g+=3,b.toArray(h,g),g+=3,b.toArray(h,g),g+=3,b.toArray(h,g),g+=3}const f=new Tt;f.setAttribute("position",new Ze(c,3)),f.setAttribute("color",new Ze(h,3));const p=new Dn({vertexColors:!0,toneMapped:!1});super(f,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class HM extends si{constructor(e=10,t=16,n=8,i=64,r=4473924,a=8947848){r=new Ye(r),a=new Ye(a);const o=[],c=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),g=Math.sin(m)*e,y=Math.cos(m)*e;o.push(0,0,0),o.push(g,0,y);const b=p&1?r:a;c.push(b.r,b.g,b.b),c.push(b.r,b.g,b.b)}for(let p=0;p<n;p++){const m=p&1?r:a,g=e-e/n*p;for(let y=0;y<i;y++){let b=y/i*(Math.PI*2),x=Math.sin(b)*g,_=Math.cos(b)*g;o.push(x,0,_),c.push(m.r,m.g,m.b),b=(y+1)/i*(Math.PI*2),x=Math.sin(b)*g,_=Math.cos(b)*g,o.push(x,0,_),c.push(m.r,m.g,m.b)}}const h=new Tt;h.setAttribute("position",new Ze(o,3)),h.setAttribute("color",new Ze(c,3));const f=new Dn({vertexColors:!0,toneMapped:!1});super(h,f),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const wd=new U,Mo=new U,Ad=new U;class Vp extends Dt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new Tt;i.setAttribute("position",new Ze([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new Dn({fog:!1,toneMapped:!1});this.lightPlane=new rr(i,r),this.add(this.lightPlane),i=new Tt,i.setAttribute("position",new Ze([0,0,0,0,0,1],3)),this.targetLine=new rr(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),wd.setFromMatrixPosition(this.light.matrixWorld),Mo.setFromMatrixPosition(this.light.target.matrixWorld),Ad.subVectors(Mo,wd),this.lightPlane.lookAt(Mo),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Mo),this.targetLine.scale.z=Ad.length()}}const bo=new U,Yt=new qo;class VM extends si{constructor(e){const t=new Tt,n=new Dn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],a={};o("n1","n2"),o("n2","n4"),o("n4","n3"),o("n3","n1"),o("f1","f2"),o("f2","f4"),o("f4","f3"),o("f3","f1"),o("n1","f1"),o("n2","f2"),o("n3","f3"),o("n4","f4"),o("p","n1"),o("p","n2"),o("p","n3"),o("p","n4"),o("u1","u2"),o("u2","u3"),o("u3","u1"),o("c","t"),o("p","c"),o("cn1","cn2"),o("cn3","cn4"),o("cf1","cf2"),o("cf3","cf4");function o(y,b){c(y),c(b)}function c(y){i.push(0,0,0),r.push(0,0,0),a[y]===void 0&&(a[y]=[]),a[y].push(i.length/3-1)}t.setAttribute("position",new Ze(i,3)),t.setAttribute("color",new Ze(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const h=new Ye(16755200),f=new Ye(16711680),p=new Ye(43775),m=new Ye(16777215),g=new Ye(3355443);this.setColors(h,f,p,m,g)}setColors(e,t,n,i,r){const o=this.geometry.getAttribute("color");o.setXYZ(0,e.r,e.g,e.b),o.setXYZ(1,e.r,e.g,e.b),o.setXYZ(2,e.r,e.g,e.b),o.setXYZ(3,e.r,e.g,e.b),o.setXYZ(4,e.r,e.g,e.b),o.setXYZ(5,e.r,e.g,e.b),o.setXYZ(6,e.r,e.g,e.b),o.setXYZ(7,e.r,e.g,e.b),o.setXYZ(8,e.r,e.g,e.b),o.setXYZ(9,e.r,e.g,e.b),o.setXYZ(10,e.r,e.g,e.b),o.setXYZ(11,e.r,e.g,e.b),o.setXYZ(12,e.r,e.g,e.b),o.setXYZ(13,e.r,e.g,e.b),o.setXYZ(14,e.r,e.g,e.b),o.setXYZ(15,e.r,e.g,e.b),o.setXYZ(16,e.r,e.g,e.b),o.setXYZ(17,e.r,e.g,e.b),o.setXYZ(18,e.r,e.g,e.b),o.setXYZ(19,e.r,e.g,e.b),o.setXYZ(20,e.r,e.g,e.b),o.setXYZ(21,e.r,e.g,e.b),o.setXYZ(22,e.r,e.g,e.b),o.setXYZ(23,e.r,e.g,e.b),o.setXYZ(24,t.r,t.g,t.b),o.setXYZ(25,t.r,t.g,t.b),o.setXYZ(26,t.r,t.g,t.b),o.setXYZ(27,t.r,t.g,t.b),o.setXYZ(28,t.r,t.g,t.b),o.setXYZ(29,t.r,t.g,t.b),o.setXYZ(30,t.r,t.g,t.b),o.setXYZ(31,t.r,t.g,t.b),o.setXYZ(32,n.r,n.g,n.b),o.setXYZ(33,n.r,n.g,n.b),o.setXYZ(34,n.r,n.g,n.b),o.setXYZ(35,n.r,n.g,n.b),o.setXYZ(36,n.r,n.g,n.b),o.setXYZ(37,n.r,n.g,n.b),o.setXYZ(38,i.r,i.g,i.b),o.setXYZ(39,i.r,i.g,i.b),o.setXYZ(40,r.r,r.g,r.b),o.setXYZ(41,r.r,r.g,r.b),o.setXYZ(42,r.r,r.g,r.b),o.setXYZ(43,r.r,r.g,r.b),o.setXYZ(44,r.r,r.g,r.b),o.setXYZ(45,r.r,r.g,r.b),o.setXYZ(46,r.r,r.g,r.b),o.setXYZ(47,r.r,r.g,r.b),o.setXYZ(48,r.r,r.g,r.b),o.setXYZ(49,r.r,r.g,r.b),o.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Yt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Kt("c",t,e,Yt,0,0,-1),Kt("t",t,e,Yt,0,0,1),Kt("n1",t,e,Yt,-n,-i,-1),Kt("n2",t,e,Yt,n,-i,-1),Kt("n3",t,e,Yt,-n,i,-1),Kt("n4",t,e,Yt,n,i,-1),Kt("f1",t,e,Yt,-n,-i,1),Kt("f2",t,e,Yt,n,-i,1),Kt("f3",t,e,Yt,-n,i,1),Kt("f4",t,e,Yt,n,i,1),Kt("u1",t,e,Yt,n*.7,i*1.1,-1),Kt("u2",t,e,Yt,-n*.7,i*1.1,-1),Kt("u3",t,e,Yt,0,i*2,-1),Kt("cf1",t,e,Yt,-n,0,1),Kt("cf2",t,e,Yt,n,0,1),Kt("cf3",t,e,Yt,0,-i,1),Kt("cf4",t,e,Yt,0,i,1),Kt("cn1",t,e,Yt,-n,0,-1),Kt("cn2",t,e,Yt,n,0,-1),Kt("cn3",t,e,Yt,0,-i,-1),Kt("cn4",t,e,Yt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Kt(s,e,t,n,i,r,a){bo.set(i,r,a).unproject(n);const o=e[s];if(o!==void 0){const c=t.getAttribute("position");for(let h=0,f=o.length;h<f;h++)c.setXYZ(o[h],bo.x,bo.y,bo.z)}}const So=new Mi;class GM extends si{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new Tt;r.setIndex(new Ft(n,1)),r.setAttribute("position",new Ft(i,3)),super(r,new Dn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&So.setFromObject(this.object),So.isEmpty())return;const t=So.min,n=So.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=t.x,r[4]=n.y,r[5]=n.z,r[6]=t.x,r[7]=t.y,r[8]=n.z,r[9]=n.x,r[10]=t.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=t.z,r[15]=t.x,r[16]=n.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=n.x,r[22]=t.y,r[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class WM extends si{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new Tt;r.setIndex(new Ft(n,1)),r.setAttribute("position",new Ze(i,3)),super(r,new Dn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class XM extends rr{constructor(e,t=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new Tt;a.setAttribute("position",new Ze(r,3)),a.computeBoundingSphere(),super(a,new Dn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const o=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],c=new Tt;c.setAttribute("position",new Ze(o,3)),c.computeBoundingSphere(),this.add(new _n(c,new ki({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const Cd=new U;let Eo,uc;class qM extends Dt{constructor(e=new U(0,0,1),t=new U(0,0,0),n=1,i=16776960,r=n*.2,a=r*.2){super(),this.type="ArrowHelper",Eo===void 0&&(Eo=new Tt,Eo.setAttribute("position",new Ze([0,0,0,0,1,0],3)),uc=new Hr(0,.5,1,5,1),uc.translate(0,-.5,0)),this.position.copy(t),this.line=new rr(Eo,new Dn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new _n(uc,new ki({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Cd.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Cd,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class Gp extends si{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new Tt;i.setAttribute("position",new Ze(t,3)),i.setAttribute("color",new Ze(n,3));const r=new Dn({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(e,t,n){const i=new Ye,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class YM{constructor(){this.type="ShapePath",this.color=new Ye,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new da,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,a){return this.currentPath.bezierCurveTo(e,t,n,i,r,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(_){const w=[];for(let S=0,T=_.length;S<T;S++){const L=_[S],d=new Nr;d.curves=L.curves,w.push(d)}return w}function n(_,w){const S=w.length;let T=!1;for(let L=S-1,d=0;d<S;L=d++){let I=w[L],z=w[d],C=z.x-I.x,D=z.y-I.y;if(Math.abs(D)>Number.EPSILON){if(D<0&&(I=w[d],C=-C,z=w[L],D=-D),_.y<I.y||_.y>z.y)continue;if(_.y===I.y){if(_.x===I.x)return!0}else{const le=D*(_.x-I.x)-C*(_.y-I.y);if(le===0)return!0;if(le<0)continue;T=!T}}else{if(_.y!==I.y)continue;if(z.x<=_.x&&_.x<=I.x||I.x<=_.x&&_.x<=z.x)return!0}}return T}const i=yi.isClockWise,r=this.subPaths;if(r.length===0)return[];let a,o,c;const h=[];if(r.length===1)return o=r[0],c=new Nr,c.curves=o.curves,h.push(c),h;let f=!i(r[0].getPoints());f=e?!f:f;const p=[],m=[];let g=[],y=0,b;m[y]=void 0,g[y]=[];for(let _=0,w=r.length;_<w;_++)o=r[_],b=o.getPoints(),a=i(b),a=e?!a:a,a?(!f&&m[y]&&y++,m[y]={s:new Nr,p:b},m[y].s.curves=o.curves,f&&y++,g[y]=[]):g[y].push({h:o,p:b[0]});if(!m[0])return t(r);if(m.length>1){let _=!1,w=0;for(let S=0,T=m.length;S<T;S++)p[S]=[];for(let S=0,T=m.length;S<T;S++){const L=g[S];for(let d=0;d<L.length;d++){const I=L[d];let z=!0;for(let C=0;C<m.length;C++)n(I.p,m[C].p)&&(S!==C&&w++,z?(z=!1,p[C].push(I)):_=!0);z&&p[S].push(I)}}w>0&&_===!1&&(g=p)}let x;for(let _=0,w=m.length;_<w;_++){c=m[_].s,h.push(c),x=g[_];for(let S=0,T=x.length;S<T;S++)c.holes.push(x[S].h)}return h}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ko}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ko);const jM=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:af,AddEquation:Ar,AddOperation:tf,AdditiveAnimationBlendMode:uh,AdditiveBlending:pc,AlphaFormat:hf,AlwaysCompare:Lf,AlwaysDepth:jd,AlwaysStencilFunc:Sf,AmbientLight:Lp,AmbientLightProbe:cM,AnimationAction:zp,AnimationClip:ya,AnimationLoader:Kx,AnimationMixer:AM,AnimationObjectGroup:TM,AnimationUtils:jx,ArcCurve:rp,ArrayCamera:jf,ArrowHelper:qM,Audio:Fp,AudioAnalyser:mM,AudioContext:kh,AudioListener:dM,AudioLoader:oM,AxesHelper:Gp,BackSide:In,BasicDepthPacking:xf,BasicShadowMap:cm,Bone:Eh,BooleanKeyframeTrack:Vr,Box2:UM,Box3:Mi,Box3Helper:WM,BoxGeometry:Bi,BoxHelper:GM,BufferAttribute:Ft,BufferGeometry:Tt,BufferGeometryLoader:Np,ByteType:lf,Cache:zr,Camera:qo,CameraHelper:VM,CanvasTexture:yx,CapsuleGeometry:il,CatmullRomCurve3:sp,CineonToneMapping:sf,CircleGeometry:rl,ClampToEdgeWrapping:Sn,Clock:Op,Color:Ye,ColorKeyframeTrack:Oh,ColorManagement:jn,CompressedArrayTexture:gx,CompressedCubeTexture:_x,CompressedTexture:el,CompressedTextureLoader:Qx,ConeGeometry:sl,CubeCamera:kf,CubeReflectionMapping:Fi,CubeRefractionMapping:nr,CubeTexture:Sa,CubeTextureLoader:Ap,CubeUVReflectionMapping:ws,CubicBezierCurve:Ah,CubicBezierCurve3:ap,CubicInterpolant:Sp,CullFaceBack:fc,CullFaceFront:Dd,CullFaceFrontBack:lm,CullFaceNone:Id,Curve:ai,CurvePath:lp,CustomBlending:Nd,CustomToneMapping:of,CylinderGeometry:Hr,Cylindrical:DM,Data3DTexture:mh,DataArrayTexture:Wo,DataTexture:Ms,DataTextureLoader:eM,DataUtils:Sg,DecrementStencilOp:bm,DecrementWrapStencilOp:Em,DefaultLoadingManager:wp,DepthFormat:Qi,DepthStencilFormat:Or,DepthTexture:Zf,DirectionalLight:zh,DirectionalLightHelper:Vp,DiscreteInterpolant:Ep,DisplayP3ColorSpace:Ma,DodecahedronGeometry:al,DoubleSide:mi,DstAlphaFactor:Vd,DstColorFactor:Wd,DynamicCopyUsage:zm,DynamicDrawUsage:Dm,DynamicReadUsage:Om,EdgesGeometry:Ih,EllipseCurve:tl,EqualCompare:wf,EqualDepth:Jd,EqualStencilFunc:Cm,EquirectangularReflectionMapping:na,EquirectangularRefractionMapping:ia,Euler:ba,EventDispatcher:xi,ExtrudeGeometry:ll,FileLoader:zi,Float16BufferAttribute:Rg,Float32BufferAttribute:Ze,Float64BufferAttribute:Pg,FloatType:gi,Fog:$o,FogExp2:Jo,FramebufferTexture:mx,FrontSide:Oi,Frustum:Yo,GLBufferAttribute:LM,GLSL1:Hm,GLSL3:Wc,GreaterCompare:Cf,GreaterDepth:Kd,GreaterEqualCompare:Pf,GreaterEqualDepth:$d,GreaterEqualStencilFunc:Im,GreaterStencilFunc:Pm,GridHelper:Hp,Group:ys,HalfFloatType:bs,HemisphereLight:Rp,HemisphereLightHelper:kM,HemisphereLightProbe:lM,IcosahedronGeometry:cl,ImageBitmapLoader:aM,ImageLoader:va,ImageUtils:ph,IncrementStencilOp:Mm,IncrementWrapStencilOp:Sm,InstancedBufferAttribute:Ts,InstancedBufferGeometry:Up,InstancedInterleavedBuffer:PM,InstancedMesh:tp,Int16BufferAttribute:Ag,Int32BufferAttribute:Cg,Int8BufferAttribute:Eg,IntType:sh,InterleavedBuffer:Ko,InterleavedBufferAttribute:Fr,Interpolant:wa,InterpolateDiscrete:aa,InterpolateLinear:oa,InterpolateSmooth:Lo,InvertStencilOp:Tm,KeepStencilOp:Io,KeyframeTrack:oi,LOD:Qf,LatheGeometry:Ea,Layers:Xo,LessCompare:Tf,LessDepth:Zd,LessEqualCompare:Af,LessEqualDepth:No,LessEqualStencilFunc:Rm,LessStencilFunc:Am,Light:or,LightProbe:_l,Line:rr,Line3:NM,LineBasicMaterial:Dn,LineCurve:nl,LineCurve3:op,LineDashedMaterial:Mp,LineLoop:np,LineSegments:si,LinearDisplayP3ColorSpace:ym,LinearEncoding:dh,LinearFilter:en,LinearInterpolant:Nh,LinearMipMapLinearFilter:pm,LinearMipMapNearestFilter:fm,LinearMipmapLinearFilter:ir,LinearMipmapNearestFilter:rh,LinearSRGBColorSpace:ni,LinearToneMapping:nf,Loader:zn,LoaderUtils:Kc,LoadingManager:Fh,LoopOnce:_f,LoopPingPong:vf,LoopRepeat:yf,LuminanceAlphaFormat:df,LuminanceFormat:uf,MOUSE:Er,Material:Tn,MaterialLoader:yl,MathUtils:Df,Matrix3:Et,Matrix4:gt,MaxEquation:yc,Mesh:_n,MeshBasicMaterial:ki,MeshDepthMaterial:vh,MeshDistanceMaterial:xh,MeshLambertMaterial:vp,MeshMatcapMaterial:xp,MeshNormalMaterial:yp,MeshPhongMaterial:gp,MeshPhysicalMaterial:mp,MeshStandardMaterial:gl,MeshToonMaterial:_p,MinEquation:_c,MirroredRepeatWrapping:sa,MixOperation:ef,MultiplyBlending:gc,MultiplyOperation:xa,NearestFilter:Qt,NearestMipMapLinearFilter:dm,NearestMipMapNearestFilter:um,NearestMipmapLinearFilter:$s,NearestMipmapNearestFilter:Oo,NeverCompare:Ef,NeverDepth:Yd,NeverStencilFunc:wm,NoBlending:Di,NoColorSpace:tr,NoToneMapping:Ui,NormalAnimationBlendMode:Go,NormalBlending:Dr,NotEqualCompare:Rf,NotEqualDepth:Qd,NotEqualStencilFunc:Lm,NumberKeyframeTrack:ga,Object3D:Dt,ObjectLoader:rM,ObjectSpaceNormalMap:bf,OctahedronGeometry:Ta,OneFactor:zd,OneMinusDstAlphaFactor:Gd,OneMinusDstColorFactor:Xd,OneMinusSrcAlphaFactor:ih,OneMinusSrcColorFactor:Hd,OrthographicCamera:jo,PCFShadowMap:th,PCFSoftShadowMap:Ud,PMREMGenerator:qc,Path:da,PerspectiveCamera:mn,Plane:Pi,PlaneGeometry:As,PlaneHelper:XM,PointLight:zo,PointLightHelper:BM,Points:ip,PointsMaterial:Th,PolarGridHelper:HM,PolyhedronGeometry:ar,PositionalAudio:pM,PropertyBinding:Rt,PropertyMixer:Bp,QuadraticBezierCurve:Ch,QuadraticBezierCurve3:Rh,Quaternion:En,QuaternionKeyframeTrack:Ps,QuaternionLinearInterpolant:Tp,RED_GREEN_RGTC2_Format:Vc,RED_RGTC1_Format:gf,REVISION:ko,RGBADepthPacking:Mf,RGBAFormat:Wn,RGBAIntegerFormat:hh,RGBA_ASTC_10x10_Format:Oc,RGBA_ASTC_10x5_Format:Dc,RGBA_ASTC_10x6_Format:Uc,RGBA_ASTC_10x8_Format:Nc,RGBA_ASTC_12x10_Format:Fc,RGBA_ASTC_12x12_Format:Bc,RGBA_ASTC_4x4_Format:Tc,RGBA_ASTC_5x4_Format:wc,RGBA_ASTC_5x5_Format:Ac,RGBA_ASTC_6x5_Format:Cc,RGBA_ASTC_6x6_Format:Rc,RGBA_ASTC_8x5_Format:Pc,RGBA_ASTC_8x6_Format:Lc,RGBA_ASTC_8x8_Format:Ic,RGBA_BPTC_Format:Po,RGBA_ETC2_EAC_Format:Ec,RGBA_PVRTC_2BPPV1_Format:bc,RGBA_PVRTC_4BPPV1_Format:Mc,RGBA_S3TC_DXT1_Format:Ao,RGBA_S3TC_DXT3_Format:Co,RGBA_S3TC_DXT5_Format:Ro,RGB_BPTC_SIGNED_Format:zc,RGB_BPTC_UNSIGNED_Format:kc,RGB_ETC1_Format:mf,RGB_ETC2_Format:Sc,RGB_PVRTC_2BPPV1_Format:xc,RGB_PVRTC_4BPPV1_Format:vc,RGB_S3TC_DXT1_Format:wo,RGFormat:pf,RGIntegerFormat:ch,RawShaderMaterial:pp,Ray:kr,Raycaster:IM,RectAreaLight:Ip,RedFormat:ff,RedIntegerFormat:lh,ReinhardToneMapping:rf,RenderTarget:Of,RepeatWrapping:ra,ReplaceStencilOp:xm,ReverseSubtractEquation:Fd,RingGeometry:hl,SIGNED_RED_GREEN_RGTC2_Format:Gc,SIGNED_RED_RGTC1_Format:Hc,SRGBColorSpace:Bt,Scene:bh,ShaderChunk:xt,ShaderLib:ti,ShaderMaterial:vi,ShadowMaterial:fp,Shape:Nr,ShapeGeometry:ul,ShapePath:YM,ShapeUtils:yi,ShortType:cf,Skeleton:Qo,SkeletonHelper:FM,SkinnedMesh:ep,Source:Lr,Sphere:ri,SphereGeometry:Rs,Spherical:eh,SphericalHarmonics3:Dp,SplineCurve:Ph,SpotLight:Pp,SpotLightHelper:OM,Sprite:Kf,SpriteMaterial:Sh,SrcAlphaFactor:nh,SrcAlphaSaturateFactor:qd,SrcColorFactor:kd,StaticCopyUsage:Bm,StaticDrawUsage:ca,StaticReadUsage:Nm,StereoCamera:hM,StreamCopyUsage:km,StreamDrawUsage:Um,StreamReadUsage:Fm,StringKeyframeTrack:Gr,SubtractEquation:Od,SubtractiveBlending:mc,TOUCH:Tr,TangentSpaceNormalMap:sr,TetrahedronGeometry:dl,Texture:tn,TextureLoader:Cp,TorusGeometry:fl,TorusKnotGeometry:pl,Triangle:Fn,TriangleFanDrawMode:_m,TriangleStripDrawMode:gm,TrianglesDrawMode:mm,TubeGeometry:ml,TwoPassDoubleSide:hm,UVMapping:Ho,Uint16BufferAttribute:gh,Uint32BufferAttribute:_h,Uint8BufferAttribute:Tg,Uint8ClampedBufferAttribute:wg,Uniform:Gh,UniformsGroup:RM,UniformsLib:Oe,UniformsUtils:zf,UnsignedByteType:Ni,UnsignedInt248Type:Ki,UnsignedIntType:Ii,UnsignedShort4444Type:ah,UnsignedShort5551Type:oh,UnsignedShortType:Vo,VSMShadowMap:pi,Vector2:ge,Vector3:U,Vector4:Ot,VectorKeyframeTrack:_a,VideoTexture:px,WebGL1Renderer:Jf,WebGL3DRenderTarget:ug,WebGLArrayRenderTarget:hg,WebGLCoordinateSystem:_i,WebGLCubeRenderTarget:Hf,WebGLMultipleRenderTargets:dg,WebGLRenderTarget:ii,WebGLRenderer:Mh,WebGLUtils:Yf,WebGPUCoordinateSystem:ha,WireframeGeometry:dp,WrapAroundEnding:la,ZeroCurvatureEnding:Rr,ZeroFactor:Bd,ZeroSlopeEnding:Pr,ZeroStencilOp:vm,_SRGBAFormat:Fo,createCanvasElement:Nf,sRGBEncoding:er},Symbol.toStringTag,{value:"Module"}));class ZM{constructor(){this.THREE=jM,this.materialType={basicMaterial:ki,standardMaterial:gl}}textures(){return this.textureLoader=new Cp,{nest:this.textureLoader.load("\\textures\\nest.jpg"),stone:this.textureLoader.load("textures\\stones.jpg"),whiteWaves:this.textureLoader.load("textures\\white-waves.jpg"),waterDrops:this.textureLoader.load("textures\\glass_water_drops.jpg"),wood:this.textureLoader.load("textures\\wood.jpg")}}standardMaterialValues({normalMap:e=null,roughness:t=1,metalness:n=0,color:i="#FFFFFF",isFogAffected:r=!0}={}){return{normalMap:e,roughness:t,metalness:n,color:i,isFogAffected:r}}basicMaterialValues({color:e="#FFFFFF",isFogAffected:t=!0,envMap:n=null}={}){return{color:e,isFogAffected:t,envMap:n}}create3dObject(e,t=this.basicMaterialValues()){let n=this.getMaterialObjType(t);return new this.THREE.Mesh(e,new n(t))}createBasicSphereObject(e=1,t=32,n=16,i=this.basicMaterialValues()){const r=new Rs(e,t,n);return this.create3dObject(r,i)}createBasicCubeObject(e=1,t=1,n=1,i=this.basicMaterialValues()){const r=new Bi(e,t,n);return this.create3dObject(r,i)}createBasicCubeWithEdgesObject(e=1,t=1,n=1,i="",r=this.basicMaterialValues()){const a=new Bi(e,t,n),o=new Ih(a),c=new si(o,new this.THREE.LineBasicMaterial({color:i}));return{object:this.create3dObject(a,r),edges:c}}createBasicCylinderObject(e=1,t=1,n=1,i=32,r=this.basicMaterialValues()){const a=new Hr(e,t,n,i);return this.create3dObject(a,r)}createBasicPlaneObject(e=30,t=30,n=0,i=0,r=0,a=this.basicMaterialValues()){const o=new As(e,t),c=this.create3dObject(o,a);return n!==0&&(c.rotation.x=n),i!==0&&(c.rotation.y=i),r!==0&&(c.rotation.z=r),c}getMaterialObjType(e){let t=[this.basicMaterialValues(),this.standardMaterialValues()],n=null,i=["basicMaterial","standardMaterial"];return t.forEach((r,a)=>{if(this.isSameTypeObjects(r,e)){n=this.materialType[i[a]];return}}),n}isSameTypeObjects(e,t){const n=Object.keys(e).sort(),i=Object.keys(t).sort();if(n.length!==i.length)return!1;for(let r=0;r<n.length;r++)if(n[r]!==i[r])return!1;return!0}}const Rd={type:"change"},dc={type:"start"},Pd={type:"end"},To=new kr,Ld=new Pi,JM=Math.cos(70*Df.DEG2RAD);class $M extends xi{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new U,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Er.ROTATE,MIDDLE:Er.DOLLY,RIGHT:Er.PAN},this.touches={ONE:Tr.ROTATE,TWO:Tr.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return o.phi},this.getAzimuthalAngle=function(){return o.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(V){V.addEventListener("keydown",R),this._domElementKeyEvents=V},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",R),this._domElementKeyEvents=null},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(Rd),n.update(),r=i.NONE},this.update=function(){const V=new U,ve=new En().setFromUnitVectors(e.up,new U(0,1,0)),Be=ve.clone().invert(),Le=new U,De=new En,st=new U,bt=2*Math.PI;return function(Ne=null){const se=n.object.position;V.copy(se).sub(n.target),V.applyQuaternion(ve),o.setFromVector3(V),n.autoRotate&&r===i.NONE&&le(C(Ne)),n.enableDamping?(o.theta+=c.theta*n.dampingFactor,o.phi+=c.phi*n.dampingFactor):(o.theta+=c.theta,o.phi+=c.phi);let be=n.minAzimuthAngle,we=n.maxAzimuthAngle;isFinite(be)&&isFinite(we)&&(be<-Math.PI?be+=bt:be>Math.PI&&(be-=bt),we<-Math.PI?we+=bt:we>Math.PI&&(we-=bt),be<=we?o.theta=Math.max(be,Math.min(we,o.theta)):o.theta=o.theta>(be+we)/2?Math.max(be,o.theta):Math.min(we,o.theta)),o.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,o.phi)),o.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(f,n.dampingFactor):n.target.add(f),n.zoomToCursor&&d||n.object.isOrthographicCamera?o.radius=Te(o.radius):o.radius=Te(o.radius*h),V.setFromSpherical(o),V.applyQuaternion(Be),se.copy(n.target).add(V),n.object.lookAt(n.target),n.enableDamping===!0?(c.theta*=1-n.dampingFactor,c.phi*=1-n.dampingFactor,f.multiplyScalar(1-n.dampingFactor)):(c.set(0,0,0),f.set(0,0,0));let vt=!1;if(n.zoomToCursor&&d){let Ut=null;if(n.object.isPerspectiveCamera){const Nt=V.length();Ut=Te(Nt*h);const yn=Nt-Ut;n.object.position.addScaledVector(T,yn),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const Nt=new U(L.x,L.y,0);Nt.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/h)),n.object.updateProjectionMatrix(),vt=!0;const yn=new U(L.x,L.y,0);yn.unproject(n.object),n.object.position.sub(yn).add(Nt),n.object.updateMatrixWorld(),Ut=V.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;Ut!==null&&(this.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(Ut).add(n.object.position):(To.origin.copy(n.object.position),To.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(To.direction))<JM?e.lookAt(n.target):(Ld.setFromNormalAndCoplanarPoint(n.object.up,n.target),To.intersectPlane(Ld,n.target))))}else n.object.isOrthographicCamera&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/h)),n.object.updateProjectionMatrix(),vt=!0);return h=1,d=!1,vt||Le.distanceToSquared(n.object.position)>a||8*(1-De.dot(n.object.quaternion))>a||st.distanceToSquared(n.target)>0?(n.dispatchEvent(Rd),Le.copy(n.object.position),De.copy(n.object.quaternion),st.copy(n.target),vt=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",Se),n.domElement.removeEventListener("pointerdown",ke),n.domElement.removeEventListener("pointercancel",et),n.domElement.removeEventListener("wheel",O),n.domElement.removeEventListener("pointermove",Fe),n.domElement.removeEventListener("pointerup",et),n._domElementKeyEvents!==null&&(n._domElementKeyEvents.removeEventListener("keydown",R),n._domElementKeyEvents=null)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=i.NONE;const a=1e-6,o=new eh,c=new eh;let h=1;const f=new U,p=new ge,m=new ge,g=new ge,y=new ge,b=new ge,x=new ge,_=new ge,w=new ge,S=new ge,T=new U,L=new ge;let d=!1;const I=[],z={};function C(V){return V!==null?2*Math.PI/60*n.autoRotateSpeed*V:2*Math.PI/60/60*n.autoRotateSpeed}function D(){return Math.pow(.95,n.zoomSpeed)}function le(V){c.theta-=V}function te(V){c.phi-=V}const q=function(){const V=new U;return function(Be,Le){V.setFromMatrixColumn(Le,0),V.multiplyScalar(-Be),f.add(V)}}(),J=function(){const V=new U;return function(Be,Le){n.screenSpacePanning===!0?V.setFromMatrixColumn(Le,1):(V.setFromMatrixColumn(Le,0),V.crossVectors(n.object.up,V)),V.multiplyScalar(Be),f.add(V)}}(),re=function(){const V=new U;return function(Be,Le){const De=n.domElement;if(n.object.isPerspectiveCamera){const st=n.object.position;V.copy(st).sub(n.target);let bt=V.length();bt*=Math.tan(n.object.fov/2*Math.PI/180),q(2*Be*bt/De.clientHeight,n.object.matrix),J(2*Le*bt/De.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(q(Be*(n.object.right-n.object.left)/n.object.zoom/De.clientWidth,n.object.matrix),J(Le*(n.object.top-n.object.bottom)/n.object.zoom/De.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function fe(V){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?h/=V:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function ue(V){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?h*=V:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function pe(V){if(!n.zoomToCursor)return;d=!0;const ve=n.domElement.getBoundingClientRect(),Be=V.clientX-ve.left,Le=V.clientY-ve.top,De=ve.width,st=ve.height;L.x=Be/De*2-1,L.y=-(Le/st)*2+1,T.set(L.x,L.y,1).unproject(n.object).sub(n.object.position).normalize()}function Te(V){return Math.max(n.minDistance,Math.min(n.maxDistance,V))}function xe(V){p.set(V.clientX,V.clientY)}function K(V){pe(V),_.set(V.clientX,V.clientY)}function ae(V){y.set(V.clientX,V.clientY)}function Ue(V){m.set(V.clientX,V.clientY),g.subVectors(m,p).multiplyScalar(n.rotateSpeed);const ve=n.domElement;le(2*Math.PI*g.x/ve.clientHeight),te(2*Math.PI*g.y/ve.clientHeight),p.copy(m),n.update()}function ze(V){w.set(V.clientX,V.clientY),S.subVectors(w,_),S.y>0?fe(D()):S.y<0&&ue(D()),_.copy(w),n.update()}function Ge(V){b.set(V.clientX,V.clientY),x.subVectors(b,y).multiplyScalar(n.panSpeed),re(x.x,x.y),y.copy(b),n.update()}function tt(V){pe(V),V.deltaY<0?ue(D()):V.deltaY>0&&fe(D()),n.update()}function Qe(V){let ve=!1;switch(V.code){case n.keys.UP:V.ctrlKey||V.metaKey||V.shiftKey?te(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):re(0,n.keyPanSpeed),ve=!0;break;case n.keys.BOTTOM:V.ctrlKey||V.metaKey||V.shiftKey?te(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):re(0,-n.keyPanSpeed),ve=!0;break;case n.keys.LEFT:V.ctrlKey||V.metaKey||V.shiftKey?le(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):re(n.keyPanSpeed,0),ve=!0;break;case n.keys.RIGHT:V.ctrlKey||V.metaKey||V.shiftKey?le(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):re(-n.keyPanSpeed,0),ve=!0;break}ve&&(V.preventDefault(),n.update())}function je(){if(I.length===1)p.set(I[0].pageX,I[0].pageY);else{const V=.5*(I[0].pageX+I[1].pageX),ve=.5*(I[0].pageY+I[1].pageY);p.set(V,ve)}}function _t(){if(I.length===1)y.set(I[0].pageX,I[0].pageY);else{const V=.5*(I[0].pageX+I[1].pageX),ve=.5*(I[0].pageY+I[1].pageY);y.set(V,ve)}}function Pt(){const V=I[0].pageX-I[1].pageX,ve=I[0].pageY-I[1].pageY,Be=Math.sqrt(V*V+ve*ve);_.set(0,Be)}function nt(){n.enableZoom&&Pt(),n.enablePan&&_t()}function k(){n.enableZoom&&Pt(),n.enableRotate&&je()}function Pe(V){if(I.length==1)m.set(V.pageX,V.pageY);else{const Be=ne(V),Le=.5*(V.pageX+Be.x),De=.5*(V.pageY+Be.y);m.set(Le,De)}g.subVectors(m,p).multiplyScalar(n.rotateSpeed);const ve=n.domElement;le(2*Math.PI*g.x/ve.clientHeight),te(2*Math.PI*g.y/ve.clientHeight),p.copy(m)}function me(V){if(I.length===1)b.set(V.pageX,V.pageY);else{const ve=ne(V),Be=.5*(V.pageX+ve.x),Le=.5*(V.pageY+ve.y);b.set(Be,Le)}x.subVectors(b,y).multiplyScalar(n.panSpeed),re(x.x,x.y),y.copy(b)}function Ee(V){const ve=ne(V),Be=V.pageX-ve.x,Le=V.pageY-ve.y,De=Math.sqrt(Be*Be+Le*Le);w.set(0,De),S.set(0,Math.pow(w.y/_.y,n.zoomSpeed)),fe(S.y),_.copy(w)}function Me(V){n.enableZoom&&Ee(V),n.enablePan&&me(V)}function $e(V){n.enableZoom&&Ee(V),n.enableRotate&&Pe(V)}function ke(V){n.enabled!==!1&&(I.length===0&&(n.domElement.setPointerCapture(V.pointerId),n.domElement.addEventListener("pointermove",Fe),n.domElement.addEventListener("pointerup",et)),Ce(V),V.pointerType==="touch"?Q(V):pt(V))}function Fe(V){n.enabled!==!1&&(V.pointerType==="touch"?Re(V):Ie(V))}function et(V){We(V),I.length===0&&(n.domElement.releasePointerCapture(V.pointerId),n.domElement.removeEventListener("pointermove",Fe),n.domElement.removeEventListener("pointerup",et)),n.dispatchEvent(Pd),r=i.NONE}function pt(V){let ve;switch(V.button){case 0:ve=n.mouseButtons.LEFT;break;case 1:ve=n.mouseButtons.MIDDLE;break;case 2:ve=n.mouseButtons.RIGHT;break;default:ve=-1}switch(ve){case Er.DOLLY:if(n.enableZoom===!1)return;K(V),r=i.DOLLY;break;case Er.ROTATE:if(V.ctrlKey||V.metaKey||V.shiftKey){if(n.enablePan===!1)return;ae(V),r=i.PAN}else{if(n.enableRotate===!1)return;xe(V),r=i.ROTATE}break;case Er.PAN:if(V.ctrlKey||V.metaKey||V.shiftKey){if(n.enableRotate===!1)return;xe(V),r=i.ROTATE}else{if(n.enablePan===!1)return;ae(V),r=i.PAN}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(dc)}function Ie(V){switch(r){case i.ROTATE:if(n.enableRotate===!1)return;Ue(V);break;case i.DOLLY:if(n.enableZoom===!1)return;ze(V);break;case i.PAN:if(n.enablePan===!1)return;Ge(V);break}}function O(V){n.enabled===!1||n.enableZoom===!1||r!==i.NONE||(V.preventDefault(),n.dispatchEvent(dc),tt(V),n.dispatchEvent(Pd))}function R(V){n.enabled===!1||n.enablePan===!1||Qe(V)}function Q(V){switch(Ae(V),I.length){case 1:switch(n.touches.ONE){case Tr.ROTATE:if(n.enableRotate===!1)return;je(),r=i.TOUCH_ROTATE;break;case Tr.PAN:if(n.enablePan===!1)return;_t(),r=i.TOUCH_PAN;break;default:r=i.NONE}break;case 2:switch(n.touches.TWO){case Tr.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;nt(),r=i.TOUCH_DOLLY_PAN;break;case Tr.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;k(),r=i.TOUCH_DOLLY_ROTATE;break;default:r=i.NONE}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(dc)}function Re(V){switch(Ae(V),r){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;Pe(V),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;me(V),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Me(V),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;$e(V),n.update();break;default:r=i.NONE}}function Se(V){n.enabled!==!1&&V.preventDefault()}function Ce(V){I.push(V)}function We(V){delete z[V.pointerId];for(let ve=0;ve<I.length;ve++)if(I[ve].pointerId==V.pointerId){I.splice(ve,1);return}}function Ae(V){let ve=z[V.pointerId];ve===void 0&&(ve=new ge,z[V.pointerId]=ve),ve.set(V.pageX,V.pageY)}function ne(V){const ve=V.pointerId===I[0].pointerId?I[1]:I[0];return z[ve.pointerId]}n.domElement.addEventListener("contextmenu",Se),n.domElement.addEventListener("pointerdown",ke),n.domElement.addEventListener("pointercancel",et),n.domElement.addEventListener("wheel",O,{passive:!1}),this.update()}}class KM{constructor(){this.create3dObjectsHelper=new ZM,this.object=null,this.scene=null,this.camera=null,this.renderer=null,this.textureLoader=null,this.initTheeJs()}async initTheeJs(){this.setSceneAndCam(),this.setRenderer("#8bc34a"),this.setSkyBox(),this.preLoadTextures(),this.orbit=new $M(this.camera,this.renderer.domElement),this.create3dObjectsHelper.createBasicSphereObject(1,32,32,this.sphereReflectMaterial);const e=this.create3dObjectsHelper.createBasicCubeObject(1,1,1,this.sphereReflectMaterial);this.gridHelper=new Hp(30,60),this.scene.add(this.gridHelper),this.changeObjectFromScene(e),this.moveObject([this.object]),this.renderer.shadowMap.enabled=!0}addObjectsInScene(e){e.forEach(t=>{this.scene.add(t)})}setSkyBox(){let e=["textures\\Day_Light_skyBox\\Box_Left_1.bmp","textures\\Day_Light_skyBox\\Box_Right_2.bmp","textures\\Day_Light_skyBox\\Box_Top_3.bmp","textures\\Day_Light_skyBox\\Box_Bottom_4.bmp","textures\\Day_Light_skyBox\\Box_Back_5.bmp","textures\\Day_Light_skyBox\\Box_Front_6.bmp"],t=new Ap;this.scene.background=t.load(e),this.renderer.render(this.scene,this.camera),this.runScene()}setRenderer(e){this.renderer=new Mh({antialias:!0}),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setClearColor(e,1),document.body.appendChild(this.renderer.domElement)}setSceneAndCam(){this.scene=new bh,this.camera=new mn(70,window.innerWidth/window.innerHeight,1,5e3),this.camera.position.set(0,20,50),this.axesHelper(10)}axesHelper(e){this.scene.add(new Gp(e))}setLight(e,t,n){this.removeLights([this.pointLight,this.pointLight1]),this.pointLight=new zo(16777215,.5),this.pointLight1=new zo(16777215,.5),this.pointLight.position.set(e+1,t+1,n+1),this.pointLight.intensity=1,this.pointLight1.position.set(e-1,t-1,n-1),this.pointLight1.intensity=1,this.scene.add(this.pointLight),this.scene.add(this.pointLight1)}removeLights(e){e.forEach(t=>{this.scene.remove(t)})}setObject(e){this.object=e}runScene(){const e=()=>{this.renderer.render(this.scene,this.camera),requestAnimationFrame(e)};e()}animateObject(){const e=()=>{requestAnimationFrame(e),this.object.rotation.x+=.01,this.object.rotation.y+=.01,this.object.position.y=1};e()}async changeObjectFromScene(e){this.scene.remove(this.object),this.setObject(e),this.scene.add(this.object),this.animateObject()}moveObject(e){$(document).keydown(t=>{if(!((e==null?void 0:e.length)<=0)){switch(t.key){case"ArrowDown":case"s":case"S":e.forEach(n=>{n.position.z++});break;case"ArrowUp":case"w":case"W":e.forEach(n=>{n.position.z--});break;case"ArrowLeft":case"a":case"A":e.forEach(n=>{n.position.x--});break;case"ArrowRight":case"d":case"D":e.forEach(n=>{n.position.x++});break;default:console.log(`event.key: ${t.key}`)}(e==null?void 0:e.length)>0&&this.setLight(e[0].position.x,e[0].position.y,e[0].position.z)}})}preLoadTextures(){this.texturesValues=this.create3dObjectsHelper.textures(),this.metallicNestMaterial=this.create3dObjectsHelper.standardMaterialValues({normalMap:this.texturesValues.nest,roughness:.8,metalness:.3}),this.woodMaterial=this.create3dObjectsHelper.standardMaterialValues({normalMap:this.texturesValues.wood,roughness:.9,metalness:.1}),this.sphereReflectMaterial=this.create3dObjectsHelper.basicMaterialValues({envMap:this.scene.background})}setDirectionalLightHelper(){this.directionalLight=new zh(16777215,.1),this.dLightHelper=new Vp(this.directionalLight,5)}}$(document).ready(()=>{new KM})});export default QM();
